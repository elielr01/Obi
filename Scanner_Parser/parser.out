Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    TRIANGLE
    SQRB_OPEN
    YELLOW
    WHILE
    GREEN
    EIF
    CYAN
    LINE
    RED
    POLYGON
    COMMENT
    GRAY
    POINT
    PURPLE
    SQRB_CLOSE
    COMMA
    ORANGE
    BLOCK_COMMENT
    PINK
    DRAW
    SQUARE
    ELSE
    FUNC
    INPUT
    WHITE
    MAGENTA
    RECTANGLE
    IF
    BLUE
    BLACK
    CIRCLE

Grammar

Rule 0     S' -> Obi
Rule 1     Obi -> Play
Rule 2     Play -> PLAY Play_Init PAR_OPEN PAR_CLOSE Statements_Block
Rule 3     Play_Init -> <empty>
Rule 4     Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE
Rule 5     Multiple_Statements -> Statement Multiple_Statements
Rule 6     Multiple_Statements -> Epsilon
Rule 7     Statement -> Print
Rule 8     Statement -> Declare_Var
Rule 9     Statement -> Assignment
Rule 10    Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON
Rule 11    Declare_Var -> Type ID SEMICOLON
Rule 12    Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON
Rule 13    Type -> INT
Rule 14    Type -> FLOAT
Rule 15    Type -> BOOL
Rule 16    Type -> STRING
Rule 17    Assignment -> ID ASSIGN Push_Assign Exp SEMICOLON
Rule 18    Push_Assign -> <empty>
Rule 19    Exp -> Logical_Or
Rule 20    Exp -> Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad
Rule 21    Exp -> Logical_Or DIFF Push_Diff Logical_Or Equity_Quad
Rule 22    Equity_Quad -> <empty>
Rule 23    Push_Equal -> <empty>
Rule 24    Push_Diff -> <empty>
Rule 25    Logical_Or -> Logical_And Or_Quad Multiple_Ands
Rule 26    Multiple_Ands -> OR Push_Or Logical_And Or_Quad Multiple_Ands
Rule 27    Multiple_Ands -> Epsilon
Rule 28    Or_Quad -> <empty>
Rule 29    Push_Or -> <empty>
Rule 30    Logical_And -> Logical_Not And_Quad Multiple_Nots
Rule 31    Multiple_Nots -> AND Push_And Logical_Not And_Quad Multiple_Nots
Rule 32    Multiple_Nots -> Epsilon
Rule 33    And_Quad -> <empty>
Rule 34    Push_And -> <empty>
Rule 35    Logical_Not -> Relational
Rule 36    Logical_Not -> NOT Push_Not Relational Not_Quad
Rule 37    Not_Quad -> <empty>
Rule 38    Push_Not -> <empty>
Rule 39    Relational -> Expression
Rule 40    Relational -> Expression LESS Push_Less Expression Relational_Quad
Rule 41    Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
Rule 42    Relational -> Expression GREATER Push_Greater Expression Relational_Quad
Rule 43    Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
Rule 44    Relational_Quad -> <empty>
Rule 45    Push_Less -> <empty>
Rule 46    Push_Less_Equal -> <empty>
Rule 47    Push_Greater -> <empty>
Rule 48    Push_Greater_Equal -> <empty>
Rule 49    Expression -> Term Sum_Sub_Quad Multiple_Terms
Rule 50    Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms
Rule 51    Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms
Rule 52    Multiple_Terms -> Epsilon
Rule 53    Sum_Sub_Quad -> <empty>
Rule 54    Push_Plus_Sign -> <empty>
Rule 55    Push_Minus_Sign -> <empty>
Rule 56    Term -> Factor Mult_Div_Mod_Quad Multiple_Factors
Rule 57    Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
Rule 58    Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
Rule 59    Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
Rule 60    Multiple_Factors -> Epsilon
Rule 61    Mult_Div_Mod_Quad -> <empty>
Rule 62    Push_Times_Sign -> <empty>
Rule 63    Push_Divide_Sign -> <empty>
Rule 64    Push_Mod_Sign -> <empty>
Rule 65    Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
Rule 66    Factor -> Var_Cte
Rule 67    Push_False_Bottom -> <empty>
Rule 68    Pop_False_Bottom -> <empty>
Rule 69    Var_Cte -> INT_CONST Save_Int_Const
Rule 70    Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const
Rule 71    Var_Cte -> FLOAT_CONST Save_Float_Const
Rule 72    Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
Rule 73    Var_Cte -> BOOL_CONST Save_Bool_Const
Rule 74    Var_Cte -> STRING_CONST Save_String_Const
Rule 75    Var_Cte -> ID Get_Id_Value
Rule 76    Save_Int_Const -> <empty>
Rule 77    Save_Neg_Int_Const -> <empty>
Rule 78    Save_Float_Const -> <empty>
Rule 79    Save_Neg_Float_Const -> <empty>
Rule 80    Save_Bool_Const -> <empty>
Rule 81    Save_String_Const -> <empty>
Rule 82    Get_Id_Value -> <empty>
Rule 83    Epsilon -> <empty>

Terminals, with rules where they appear

AND                  : 31
ASSIGN               : 12 17
BLACK                : 
BLOCK_COMMENT        : 
BLUE                 : 
BOOL                 : 15
BOOL_CONST           : 73
CIRCLE               : 
COMMA                : 
COMMENT              : 
CURLYB_CLOSE         : 4
CURLYB_OPEN          : 4
CYAN                 : 
DIFF                 : 21
DIVIDE_SIGN          : 58
DRAW                 : 
EIF                  : 
ELSE                 : 
EQUAL                : 20
FLOAT                : 14
FLOAT_CONST          : 71 72
FUNC                 : 
GRAY                 : 
GREATER              : 42
GREATER_EQUAL        : 43
GREEN                : 
ID                   : 11 12 17 75
IF                   : 
INPUT                : 
INT                  : 13
INT_CONST            : 69 70
LESS                 : 40
LESS_EQUAL           : 41
LINE                 : 
MAGENTA              : 
MINUS_SIGN           : 51 70 72
MOD_SIGN             : 59
NOT                  : 36
OR                   : 26
ORANGE               : 
PAR_CLOSE            : 2 10 65
PAR_OPEN             : 2 10 65
PINK                 : 
PLAY                 : 2
PLUS_SIGN            : 50
POINT                : 
POLYGON              : 
PRINT                : 10
PURPLE               : 
RECTANGLE            : 
RED                  : 
SEMICOLON            : 10 11 12 17
SQRB_CLOSE           : 
SQRB_OPEN            : 
SQUARE               : 
STRING               : 16
STRING_CONST         : 74
TIMES_SIGN           : 57
TRIANGLE             : 
WHILE                : 
WHITE                : 
YELLOW               : 
error                : 

Nonterminals, with rules where they appear

And_Quad             : 30 31
Assignment           : 9
Declare_Var          : 8
Epsilon              : 6 27 32 52 60
Equity_Quad          : 20 21
Exp                  : 10 12 17 65
Expression           : 39 40 40 41 41 42 42 43 43
Factor               : 56 57 58 59
Get_Id_Value         : 75
Logical_And          : 25 26
Logical_Not          : 30 31
Logical_Or           : 19 20 20 21 21
Mult_Div_Mod_Quad    : 56 57 58 59
Multiple_Ands        : 25 26
Multiple_Factors     : 56 57 58 59
Multiple_Nots        : 30 31
Multiple_Statements  : 4 5
Multiple_Terms       : 49 50 51
Not_Quad             : 36
Obi                  : 0
Or_Quad              : 25 26
Play                 : 1
Play_Init            : 2
Pop_False_Bottom     : 65
Print                : 7
Push_And             : 31
Push_Assign          : 12 17
Push_Diff            : 21
Push_Divide_Sign     : 58
Push_Equal           : 20
Push_False_Bottom    : 65
Push_Greater         : 42
Push_Greater_Equal   : 43
Push_Less            : 40
Push_Less_Equal      : 41
Push_Minus_Sign      : 51
Push_Mod_Sign        : 59
Push_Not             : 36
Push_Or              : 26
Push_Plus_Sign       : 50
Push_Times_Sign      : 57
Relational           : 35 36
Relational_Quad      : 40 41 42 43
Save_Bool_Const      : 73
Save_Float_Const     : 71
Save_Int_Const       : 69
Save_Neg_Float_Const : 72
Save_Neg_Int_Const   : 70
Save_String_Const    : 74
Statement            : 5
Statements_Block     : 2
Sum_Sub_Quad         : 49 50 51
Term                 : 49 50 51
Type                 : 11 12
Var_Cte              : 66

Parsing method: LALR

state 0

    (0) S' -> . Obi
    (1) Obi -> . Play
    (2) Play -> . PLAY Play_Init PAR_OPEN PAR_CLOSE Statements_Block

    PLAY            shift and go to state 3

    Play                           shift and go to state 1
    Obi                            shift and go to state 2

state 1

    (1) Obi -> Play .

    $end            reduce using rule 1 (Obi -> Play .)


state 2

    (0) S' -> Obi .



state 3

    (2) Play -> PLAY . Play_Init PAR_OPEN PAR_CLOSE Statements_Block
    (3) Play_Init -> .

    PAR_OPEN        reduce using rule 3 (Play_Init -> .)

    Play_Init                      shift and go to state 4

state 4

    (2) Play -> PLAY Play_Init . PAR_OPEN PAR_CLOSE Statements_Block

    PAR_OPEN        shift and go to state 5


state 5

    (2) Play -> PLAY Play_Init PAR_OPEN . PAR_CLOSE Statements_Block

    PAR_CLOSE       shift and go to state 6


state 6

    (2) Play -> PLAY Play_Init PAR_OPEN PAR_CLOSE . Statements_Block
    (4) Statements_Block -> . CURLYB_OPEN Multiple_Statements CURLYB_CLOSE

    CURLYB_OPEN     shift and go to state 8

    Statements_Block               shift and go to state 7

state 7

    (2) Play -> PLAY Play_Init PAR_OPEN PAR_CLOSE Statements_Block .

    $end            reduce using rule 2 (Play -> PLAY Play_Init PAR_OPEN PAR_CLOSE Statements_Block .)


state 8

    (4) Statements_Block -> CURLYB_OPEN . Multiple_Statements CURLYB_CLOSE
    (5) Multiple_Statements -> . Statement Multiple_Statements
    (6) Multiple_Statements -> . Epsilon
    (7) Statement -> . Print
    (8) Statement -> . Declare_Var
    (9) Statement -> . Assignment
    (83) Epsilon -> .
    (10) Print -> . PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON
    (11) Declare_Var -> . Type ID SEMICOLON
    (12) Declare_Var -> . Type ID ASSIGN Push_Assign Exp SEMICOLON
    (17) Assignment -> . ID ASSIGN Push_Assign Exp SEMICOLON
    (13) Type -> . INT
    (14) Type -> . FLOAT
    (15) Type -> . BOOL
    (16) Type -> . STRING

    CURLYB_CLOSE    reduce using rule 83 (Epsilon -> .)
    PRINT           shift and go to state 14
    ID              shift and go to state 13
    INT             shift and go to state 10
    FLOAT           shift and go to state 12
    BOOL            shift and go to state 19
    STRING          shift and go to state 21

    Multiple_Statements            shift and go to state 9
    Epsilon                        shift and go to state 11
    Declare_Var                    shift and go to state 15
    Statement                      shift and go to state 16
    Assignment                     shift and go to state 17
    Print                          shift and go to state 18
    Type                           shift and go to state 20

state 9

    (4) Statements_Block -> CURLYB_OPEN Multiple_Statements . CURLYB_CLOSE

    CURLYB_CLOSE    shift and go to state 22


state 10

    (13) Type -> INT .

    ID              reduce using rule 13 (Type -> INT .)


state 11

    (6) Multiple_Statements -> Epsilon .

    CURLYB_CLOSE    reduce using rule 6 (Multiple_Statements -> Epsilon .)


state 12

    (14) Type -> FLOAT .

    ID              reduce using rule 14 (Type -> FLOAT .)


state 13

    (17) Assignment -> ID . ASSIGN Push_Assign Exp SEMICOLON

    ASSIGN          shift and go to state 23


state 14

    (10) Print -> PRINT . PAR_OPEN Exp PAR_CLOSE SEMICOLON

    PAR_OPEN        shift and go to state 24


state 15

    (8) Statement -> Declare_Var .

    PRINT           reduce using rule 8 (Statement -> Declare_Var .)
    ID              reduce using rule 8 (Statement -> Declare_Var .)
    INT             reduce using rule 8 (Statement -> Declare_Var .)
    FLOAT           reduce using rule 8 (Statement -> Declare_Var .)
    BOOL            reduce using rule 8 (Statement -> Declare_Var .)
    STRING          reduce using rule 8 (Statement -> Declare_Var .)
    CURLYB_CLOSE    reduce using rule 8 (Statement -> Declare_Var .)


state 16

    (5) Multiple_Statements -> Statement . Multiple_Statements
    (5) Multiple_Statements -> . Statement Multiple_Statements
    (6) Multiple_Statements -> . Epsilon
    (7) Statement -> . Print
    (8) Statement -> . Declare_Var
    (9) Statement -> . Assignment
    (83) Epsilon -> .
    (10) Print -> . PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON
    (11) Declare_Var -> . Type ID SEMICOLON
    (12) Declare_Var -> . Type ID ASSIGN Push_Assign Exp SEMICOLON
    (17) Assignment -> . ID ASSIGN Push_Assign Exp SEMICOLON
    (13) Type -> . INT
    (14) Type -> . FLOAT
    (15) Type -> . BOOL
    (16) Type -> . STRING

    CURLYB_CLOSE    reduce using rule 83 (Epsilon -> .)
    PRINT           shift and go to state 14
    ID              shift and go to state 13
    INT             shift and go to state 10
    FLOAT           shift and go to state 12
    BOOL            shift and go to state 19
    STRING          shift and go to state 21

    Multiple_Statements            shift and go to state 25
    Epsilon                        shift and go to state 11
    Declare_Var                    shift and go to state 15
    Statement                      shift and go to state 16
    Assignment                     shift and go to state 17
    Print                          shift and go to state 18
    Type                           shift and go to state 20

state 17

    (9) Statement -> Assignment .

    PRINT           reduce using rule 9 (Statement -> Assignment .)
    ID              reduce using rule 9 (Statement -> Assignment .)
    INT             reduce using rule 9 (Statement -> Assignment .)
    FLOAT           reduce using rule 9 (Statement -> Assignment .)
    BOOL            reduce using rule 9 (Statement -> Assignment .)
    STRING          reduce using rule 9 (Statement -> Assignment .)
    CURLYB_CLOSE    reduce using rule 9 (Statement -> Assignment .)


state 18

    (7) Statement -> Print .

    PRINT           reduce using rule 7 (Statement -> Print .)
    ID              reduce using rule 7 (Statement -> Print .)
    INT             reduce using rule 7 (Statement -> Print .)
    FLOAT           reduce using rule 7 (Statement -> Print .)
    BOOL            reduce using rule 7 (Statement -> Print .)
    STRING          reduce using rule 7 (Statement -> Print .)
    CURLYB_CLOSE    reduce using rule 7 (Statement -> Print .)


state 19

    (15) Type -> BOOL .

    ID              reduce using rule 15 (Type -> BOOL .)


state 20

    (11) Declare_Var -> Type . ID SEMICOLON
    (12) Declare_Var -> Type . ID ASSIGN Push_Assign Exp SEMICOLON

    ID              shift and go to state 26


state 21

    (16) Type -> STRING .

    ID              reduce using rule 16 (Type -> STRING .)


state 22

    (4) Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE .

    $end            reduce using rule 4 (Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE .)


state 23

    (17) Assignment -> ID ASSIGN . Push_Assign Exp SEMICOLON
    (18) Push_Assign -> .

    NOT             reduce using rule 18 (Push_Assign -> .)
    PAR_OPEN        reduce using rule 18 (Push_Assign -> .)
    INT_CONST       reduce using rule 18 (Push_Assign -> .)
    MINUS_SIGN      reduce using rule 18 (Push_Assign -> .)
    FLOAT_CONST     reduce using rule 18 (Push_Assign -> .)
    BOOL_CONST      reduce using rule 18 (Push_Assign -> .)
    STRING_CONST    reduce using rule 18 (Push_Assign -> .)
    ID              reduce using rule 18 (Push_Assign -> .)

    Push_Assign                    shift and go to state 27

state 24

    (10) Print -> PRINT PAR_OPEN . Exp PAR_CLOSE SEMICOLON
    (19) Exp -> . Logical_Or
    (20) Exp -> . Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad
    (21) Exp -> . Logical_Or DIFF Push_Diff Logical_Or Equity_Quad
    (25) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (30) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (35) Logical_Not -> . Relational
    (36) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (39) Relational -> . Expression
    (40) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (41) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (42) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (43) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (49) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (56) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (65) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (66) Factor -> . Var_Cte
    (69) Var_Cte -> . INT_CONST Save_Int_Const
    (70) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (71) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (72) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (73) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (74) Var_Cte -> . STRING_CONST Save_String_Const
    (75) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 44
    PAR_OPEN        shift and go to state 28
    INT_CONST       shift and go to state 32
    MINUS_SIGN      shift and go to state 43
    FLOAT_CONST     shift and go to state 29
    BOOL_CONST      shift and go to state 34
    STRING_CONST    shift and go to state 31
    ID              shift and go to state 42

    Factor                         shift and go to state 36
    Relational                     shift and go to state 30
    Logical_Not                    shift and go to state 33
    Term                           shift and go to state 35
    Var_Cte                        shift and go to state 37
    Logical_Or                     shift and go to state 38
    Logical_And                    shift and go to state 39
    Exp                            shift and go to state 40
    Expression                     shift and go to state 41

state 25

    (5) Multiple_Statements -> Statement Multiple_Statements .

    CURLYB_CLOSE    reduce using rule 5 (Multiple_Statements -> Statement Multiple_Statements .)


state 26

    (11) Declare_Var -> Type ID . SEMICOLON
    (12) Declare_Var -> Type ID . ASSIGN Push_Assign Exp SEMICOLON

    SEMICOLON       shift and go to state 45
    ASSIGN          shift and go to state 46


state 27

    (17) Assignment -> ID ASSIGN Push_Assign . Exp SEMICOLON
    (19) Exp -> . Logical_Or
    (20) Exp -> . Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad
    (21) Exp -> . Logical_Or DIFF Push_Diff Logical_Or Equity_Quad
    (25) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (30) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (35) Logical_Not -> . Relational
    (36) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (39) Relational -> . Expression
    (40) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (41) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (42) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (43) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (49) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (56) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (65) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (66) Factor -> . Var_Cte
    (69) Var_Cte -> . INT_CONST Save_Int_Const
    (70) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (71) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (72) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (73) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (74) Var_Cte -> . STRING_CONST Save_String_Const
    (75) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 44
    PAR_OPEN        shift and go to state 28
    INT_CONST       shift and go to state 32
    MINUS_SIGN      shift and go to state 43
    FLOAT_CONST     shift and go to state 29
    BOOL_CONST      shift and go to state 34
    STRING_CONST    shift and go to state 31
    ID              shift and go to state 42

    Factor                         shift and go to state 36
    Relational                     shift and go to state 30
    Logical_Not                    shift and go to state 33
    Term                           shift and go to state 35
    Var_Cte                        shift and go to state 37
    Logical_Or                     shift and go to state 38
    Logical_And                    shift and go to state 39
    Exp                            shift and go to state 47
    Expression                     shift and go to state 41

state 28

    (65) Factor -> PAR_OPEN . Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (67) Push_False_Bottom -> .

    NOT             reduce using rule 67 (Push_False_Bottom -> .)
    PAR_OPEN        reduce using rule 67 (Push_False_Bottom -> .)
    INT_CONST       reduce using rule 67 (Push_False_Bottom -> .)
    MINUS_SIGN      reduce using rule 67 (Push_False_Bottom -> .)
    FLOAT_CONST     reduce using rule 67 (Push_False_Bottom -> .)
    BOOL_CONST      reduce using rule 67 (Push_False_Bottom -> .)
    STRING_CONST    reduce using rule 67 (Push_False_Bottom -> .)
    ID              reduce using rule 67 (Push_False_Bottom -> .)

    Push_False_Bottom              shift and go to state 48

state 29

    (71) Var_Cte -> FLOAT_CONST . Save_Float_Const
    (78) Save_Float_Const -> .

    TIMES_SIGN      reduce using rule 78 (Save_Float_Const -> .)
    DIVIDE_SIGN     reduce using rule 78 (Save_Float_Const -> .)
    MOD_SIGN        reduce using rule 78 (Save_Float_Const -> .)
    PLUS_SIGN       reduce using rule 78 (Save_Float_Const -> .)
    MINUS_SIGN      reduce using rule 78 (Save_Float_Const -> .)
    LESS            reduce using rule 78 (Save_Float_Const -> .)
    LESS_EQUAL      reduce using rule 78 (Save_Float_Const -> .)
    GREATER         reduce using rule 78 (Save_Float_Const -> .)
    GREATER_EQUAL   reduce using rule 78 (Save_Float_Const -> .)
    AND             reduce using rule 78 (Save_Float_Const -> .)
    OR              reduce using rule 78 (Save_Float_Const -> .)
    EQUAL           reduce using rule 78 (Save_Float_Const -> .)
    DIFF            reduce using rule 78 (Save_Float_Const -> .)
    PAR_CLOSE       reduce using rule 78 (Save_Float_Const -> .)
    SEMICOLON       reduce using rule 78 (Save_Float_Const -> .)

    Save_Float_Const               shift and go to state 49

state 30

    (35) Logical_Not -> Relational .

    AND             reduce using rule 35 (Logical_Not -> Relational .)
    OR              reduce using rule 35 (Logical_Not -> Relational .)
    EQUAL           reduce using rule 35 (Logical_Not -> Relational .)
    DIFF            reduce using rule 35 (Logical_Not -> Relational .)
    SEMICOLON       reduce using rule 35 (Logical_Not -> Relational .)
    PAR_CLOSE       reduce using rule 35 (Logical_Not -> Relational .)


state 31

    (74) Var_Cte -> STRING_CONST . Save_String_Const
    (81) Save_String_Const -> .

    TIMES_SIGN      reduce using rule 81 (Save_String_Const -> .)
    DIVIDE_SIGN     reduce using rule 81 (Save_String_Const -> .)
    MOD_SIGN        reduce using rule 81 (Save_String_Const -> .)
    PLUS_SIGN       reduce using rule 81 (Save_String_Const -> .)
    MINUS_SIGN      reduce using rule 81 (Save_String_Const -> .)
    LESS            reduce using rule 81 (Save_String_Const -> .)
    LESS_EQUAL      reduce using rule 81 (Save_String_Const -> .)
    GREATER         reduce using rule 81 (Save_String_Const -> .)
    GREATER_EQUAL   reduce using rule 81 (Save_String_Const -> .)
    AND             reduce using rule 81 (Save_String_Const -> .)
    OR              reduce using rule 81 (Save_String_Const -> .)
    EQUAL           reduce using rule 81 (Save_String_Const -> .)
    DIFF            reduce using rule 81 (Save_String_Const -> .)
    PAR_CLOSE       reduce using rule 81 (Save_String_Const -> .)
    SEMICOLON       reduce using rule 81 (Save_String_Const -> .)

    Save_String_Const              shift and go to state 50

state 32

    (69) Var_Cte -> INT_CONST . Save_Int_Const
    (76) Save_Int_Const -> .

    TIMES_SIGN      reduce using rule 76 (Save_Int_Const -> .)
    DIVIDE_SIGN     reduce using rule 76 (Save_Int_Const -> .)
    MOD_SIGN        reduce using rule 76 (Save_Int_Const -> .)
    PLUS_SIGN       reduce using rule 76 (Save_Int_Const -> .)
    MINUS_SIGN      reduce using rule 76 (Save_Int_Const -> .)
    LESS            reduce using rule 76 (Save_Int_Const -> .)
    LESS_EQUAL      reduce using rule 76 (Save_Int_Const -> .)
    GREATER         reduce using rule 76 (Save_Int_Const -> .)
    GREATER_EQUAL   reduce using rule 76 (Save_Int_Const -> .)
    AND             reduce using rule 76 (Save_Int_Const -> .)
    OR              reduce using rule 76 (Save_Int_Const -> .)
    EQUAL           reduce using rule 76 (Save_Int_Const -> .)
    DIFF            reduce using rule 76 (Save_Int_Const -> .)
    PAR_CLOSE       reduce using rule 76 (Save_Int_Const -> .)
    SEMICOLON       reduce using rule 76 (Save_Int_Const -> .)

    Save_Int_Const                 shift and go to state 51

state 33

    (30) Logical_And -> Logical_Not . And_Quad Multiple_Nots
    (33) And_Quad -> .

    AND             reduce using rule 33 (And_Quad -> .)
    OR              reduce using rule 33 (And_Quad -> .)
    EQUAL           reduce using rule 33 (And_Quad -> .)
    DIFF            reduce using rule 33 (And_Quad -> .)
    PAR_CLOSE       reduce using rule 33 (And_Quad -> .)
    SEMICOLON       reduce using rule 33 (And_Quad -> .)

    And_Quad                       shift and go to state 52

state 34

    (73) Var_Cte -> BOOL_CONST . Save_Bool_Const
    (80) Save_Bool_Const -> .

    TIMES_SIGN      reduce using rule 80 (Save_Bool_Const -> .)
    DIVIDE_SIGN     reduce using rule 80 (Save_Bool_Const -> .)
    MOD_SIGN        reduce using rule 80 (Save_Bool_Const -> .)
    PLUS_SIGN       reduce using rule 80 (Save_Bool_Const -> .)
    MINUS_SIGN      reduce using rule 80 (Save_Bool_Const -> .)
    LESS            reduce using rule 80 (Save_Bool_Const -> .)
    LESS_EQUAL      reduce using rule 80 (Save_Bool_Const -> .)
    GREATER         reduce using rule 80 (Save_Bool_Const -> .)
    GREATER_EQUAL   reduce using rule 80 (Save_Bool_Const -> .)
    AND             reduce using rule 80 (Save_Bool_Const -> .)
    OR              reduce using rule 80 (Save_Bool_Const -> .)
    EQUAL           reduce using rule 80 (Save_Bool_Const -> .)
    DIFF            reduce using rule 80 (Save_Bool_Const -> .)
    PAR_CLOSE       reduce using rule 80 (Save_Bool_Const -> .)
    SEMICOLON       reduce using rule 80 (Save_Bool_Const -> .)

    Save_Bool_Const                shift and go to state 53

state 35

    (49) Expression -> Term . Sum_Sub_Quad Multiple_Terms
    (53) Sum_Sub_Quad -> .

    PLUS_SIGN       reduce using rule 53 (Sum_Sub_Quad -> .)
    MINUS_SIGN      reduce using rule 53 (Sum_Sub_Quad -> .)
    LESS            reduce using rule 53 (Sum_Sub_Quad -> .)
    LESS_EQUAL      reduce using rule 53 (Sum_Sub_Quad -> .)
    GREATER         reduce using rule 53 (Sum_Sub_Quad -> .)
    GREATER_EQUAL   reduce using rule 53 (Sum_Sub_Quad -> .)
    AND             reduce using rule 53 (Sum_Sub_Quad -> .)
    OR              reduce using rule 53 (Sum_Sub_Quad -> .)
    EQUAL           reduce using rule 53 (Sum_Sub_Quad -> .)
    DIFF            reduce using rule 53 (Sum_Sub_Quad -> .)
    PAR_CLOSE       reduce using rule 53 (Sum_Sub_Quad -> .)
    SEMICOLON       reduce using rule 53 (Sum_Sub_Quad -> .)

    Sum_Sub_Quad                   shift and go to state 54

state 36

    (56) Term -> Factor . Mult_Div_Mod_Quad Multiple_Factors
    (61) Mult_Div_Mod_Quad -> .

    TIMES_SIGN      reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    DIVIDE_SIGN     reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    MOD_SIGN        reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    PLUS_SIGN       reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    MINUS_SIGN      reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    LESS            reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    LESS_EQUAL      reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    GREATER         reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    GREATER_EQUAL   reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    AND             reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    OR              reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    EQUAL           reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    DIFF            reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    PAR_CLOSE       reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    SEMICOLON       reduce using rule 61 (Mult_Div_Mod_Quad -> .)

    Mult_Div_Mod_Quad              shift and go to state 55

state 37

    (66) Factor -> Var_Cte .

    TIMES_SIGN      reduce using rule 66 (Factor -> Var_Cte .)
    DIVIDE_SIGN     reduce using rule 66 (Factor -> Var_Cte .)
    MOD_SIGN        reduce using rule 66 (Factor -> Var_Cte .)
    PLUS_SIGN       reduce using rule 66 (Factor -> Var_Cte .)
    MINUS_SIGN      reduce using rule 66 (Factor -> Var_Cte .)
    LESS            reduce using rule 66 (Factor -> Var_Cte .)
    LESS_EQUAL      reduce using rule 66 (Factor -> Var_Cte .)
    GREATER         reduce using rule 66 (Factor -> Var_Cte .)
    GREATER_EQUAL   reduce using rule 66 (Factor -> Var_Cte .)
    AND             reduce using rule 66 (Factor -> Var_Cte .)
    OR              reduce using rule 66 (Factor -> Var_Cte .)
    EQUAL           reduce using rule 66 (Factor -> Var_Cte .)
    DIFF            reduce using rule 66 (Factor -> Var_Cte .)
    PAR_CLOSE       reduce using rule 66 (Factor -> Var_Cte .)
    SEMICOLON       reduce using rule 66 (Factor -> Var_Cte .)


state 38

    (19) Exp -> Logical_Or .
    (20) Exp -> Logical_Or . EQUAL Push_Equal Logical_Or Equity_Quad
    (21) Exp -> Logical_Or . DIFF Push_Diff Logical_Or Equity_Quad

    SEMICOLON       reduce using rule 19 (Exp -> Logical_Or .)
    PAR_CLOSE       reduce using rule 19 (Exp -> Logical_Or .)
    EQUAL           shift and go to state 56
    DIFF            shift and go to state 57


state 39

    (25) Logical_Or -> Logical_And . Or_Quad Multiple_Ands
    (28) Or_Quad -> .

    OR              reduce using rule 28 (Or_Quad -> .)
    EQUAL           reduce using rule 28 (Or_Quad -> .)
    DIFF            reduce using rule 28 (Or_Quad -> .)
    PAR_CLOSE       reduce using rule 28 (Or_Quad -> .)
    SEMICOLON       reduce using rule 28 (Or_Quad -> .)

    Or_Quad                        shift and go to state 58

state 40

    (10) Print -> PRINT PAR_OPEN Exp . PAR_CLOSE SEMICOLON

    PAR_CLOSE       shift and go to state 59


state 41

    (39) Relational -> Expression .
    (40) Relational -> Expression . LESS Push_Less Expression Relational_Quad
    (41) Relational -> Expression . LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (42) Relational -> Expression . GREATER Push_Greater Expression Relational_Quad
    (43) Relational -> Expression . GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad

    AND             reduce using rule 39 (Relational -> Expression .)
    OR              reduce using rule 39 (Relational -> Expression .)
    EQUAL           reduce using rule 39 (Relational -> Expression .)
    DIFF            reduce using rule 39 (Relational -> Expression .)
    SEMICOLON       reduce using rule 39 (Relational -> Expression .)
    PAR_CLOSE       reduce using rule 39 (Relational -> Expression .)
    LESS            shift and go to state 60
    LESS_EQUAL      shift and go to state 61
    GREATER         shift and go to state 63
    GREATER_EQUAL   shift and go to state 62


state 42

    (75) Var_Cte -> ID . Get_Id_Value
    (82) Get_Id_Value -> .

    TIMES_SIGN      reduce using rule 82 (Get_Id_Value -> .)
    DIVIDE_SIGN     reduce using rule 82 (Get_Id_Value -> .)
    MOD_SIGN        reduce using rule 82 (Get_Id_Value -> .)
    PLUS_SIGN       reduce using rule 82 (Get_Id_Value -> .)
    MINUS_SIGN      reduce using rule 82 (Get_Id_Value -> .)
    LESS            reduce using rule 82 (Get_Id_Value -> .)
    LESS_EQUAL      reduce using rule 82 (Get_Id_Value -> .)
    GREATER         reduce using rule 82 (Get_Id_Value -> .)
    GREATER_EQUAL   reduce using rule 82 (Get_Id_Value -> .)
    AND             reduce using rule 82 (Get_Id_Value -> .)
    OR              reduce using rule 82 (Get_Id_Value -> .)
    EQUAL           reduce using rule 82 (Get_Id_Value -> .)
    DIFF            reduce using rule 82 (Get_Id_Value -> .)
    PAR_CLOSE       reduce using rule 82 (Get_Id_Value -> .)
    SEMICOLON       reduce using rule 82 (Get_Id_Value -> .)

    Get_Id_Value                   shift and go to state 64

state 43

    (70) Var_Cte -> MINUS_SIGN . INT_CONST Save_Neg_Int_Const
    (72) Var_Cte -> MINUS_SIGN . FLOAT_CONST Save_Neg_Float_Const

    INT_CONST       shift and go to state 65
    FLOAT_CONST     shift and go to state 66


state 44

    (36) Logical_Not -> NOT . Push_Not Relational Not_Quad
    (38) Push_Not -> .

    PAR_OPEN        reduce using rule 38 (Push_Not -> .)
    INT_CONST       reduce using rule 38 (Push_Not -> .)
    MINUS_SIGN      reduce using rule 38 (Push_Not -> .)
    FLOAT_CONST     reduce using rule 38 (Push_Not -> .)
    BOOL_CONST      reduce using rule 38 (Push_Not -> .)
    STRING_CONST    reduce using rule 38 (Push_Not -> .)
    ID              reduce using rule 38 (Push_Not -> .)

    Push_Not                       shift and go to state 67

state 45

    (11) Declare_Var -> Type ID SEMICOLON .

    PRINT           reduce using rule 11 (Declare_Var -> Type ID SEMICOLON .)
    ID              reduce using rule 11 (Declare_Var -> Type ID SEMICOLON .)
    INT             reduce using rule 11 (Declare_Var -> Type ID SEMICOLON .)
    FLOAT           reduce using rule 11 (Declare_Var -> Type ID SEMICOLON .)
    BOOL            reduce using rule 11 (Declare_Var -> Type ID SEMICOLON .)
    STRING          reduce using rule 11 (Declare_Var -> Type ID SEMICOLON .)
    CURLYB_CLOSE    reduce using rule 11 (Declare_Var -> Type ID SEMICOLON .)


state 46

    (12) Declare_Var -> Type ID ASSIGN . Push_Assign Exp SEMICOLON
    (18) Push_Assign -> .

    NOT             reduce using rule 18 (Push_Assign -> .)
    PAR_OPEN        reduce using rule 18 (Push_Assign -> .)
    INT_CONST       reduce using rule 18 (Push_Assign -> .)
    MINUS_SIGN      reduce using rule 18 (Push_Assign -> .)
    FLOAT_CONST     reduce using rule 18 (Push_Assign -> .)
    BOOL_CONST      reduce using rule 18 (Push_Assign -> .)
    STRING_CONST    reduce using rule 18 (Push_Assign -> .)
    ID              reduce using rule 18 (Push_Assign -> .)

    Push_Assign                    shift and go to state 68

state 47

    (17) Assignment -> ID ASSIGN Push_Assign Exp . SEMICOLON

    SEMICOLON       shift and go to state 69


state 48

    (65) Factor -> PAR_OPEN Push_False_Bottom . Exp PAR_CLOSE Pop_False_Bottom
    (19) Exp -> . Logical_Or
    (20) Exp -> . Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad
    (21) Exp -> . Logical_Or DIFF Push_Diff Logical_Or Equity_Quad
    (25) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (30) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (35) Logical_Not -> . Relational
    (36) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (39) Relational -> . Expression
    (40) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (41) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (42) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (43) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (49) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (56) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (65) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (66) Factor -> . Var_Cte
    (69) Var_Cte -> . INT_CONST Save_Int_Const
    (70) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (71) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (72) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (73) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (74) Var_Cte -> . STRING_CONST Save_String_Const
    (75) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 44
    PAR_OPEN        shift and go to state 28
    INT_CONST       shift and go to state 32
    MINUS_SIGN      shift and go to state 43
    FLOAT_CONST     shift and go to state 29
    BOOL_CONST      shift and go to state 34
    STRING_CONST    shift and go to state 31
    ID              shift and go to state 42

    Factor                         shift and go to state 36
    Relational                     shift and go to state 30
    Logical_Not                    shift and go to state 33
    Term                           shift and go to state 35
    Var_Cte                        shift and go to state 37
    Logical_Or                     shift and go to state 38
    Logical_And                    shift and go to state 39
    Exp                            shift and go to state 70
    Expression                     shift and go to state 41

state 49

    (71) Var_Cte -> FLOAT_CONST Save_Float_Const .

    TIMES_SIGN      reduce using rule 71 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    DIVIDE_SIGN     reduce using rule 71 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    MOD_SIGN        reduce using rule 71 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    PLUS_SIGN       reduce using rule 71 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    MINUS_SIGN      reduce using rule 71 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    LESS            reduce using rule 71 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    LESS_EQUAL      reduce using rule 71 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    GREATER         reduce using rule 71 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    GREATER_EQUAL   reduce using rule 71 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    AND             reduce using rule 71 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    OR              reduce using rule 71 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    PAR_CLOSE       reduce using rule 71 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    SEMICOLON       reduce using rule 71 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    EQUAL           reduce using rule 71 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    DIFF            reduce using rule 71 (Var_Cte -> FLOAT_CONST Save_Float_Const .)


state 50

    (74) Var_Cte -> STRING_CONST Save_String_Const .

    TIMES_SIGN      reduce using rule 74 (Var_Cte -> STRING_CONST Save_String_Const .)
    DIVIDE_SIGN     reduce using rule 74 (Var_Cte -> STRING_CONST Save_String_Const .)
    MOD_SIGN        reduce using rule 74 (Var_Cte -> STRING_CONST Save_String_Const .)
    PLUS_SIGN       reduce using rule 74 (Var_Cte -> STRING_CONST Save_String_Const .)
    MINUS_SIGN      reduce using rule 74 (Var_Cte -> STRING_CONST Save_String_Const .)
    LESS            reduce using rule 74 (Var_Cte -> STRING_CONST Save_String_Const .)
    LESS_EQUAL      reduce using rule 74 (Var_Cte -> STRING_CONST Save_String_Const .)
    GREATER         reduce using rule 74 (Var_Cte -> STRING_CONST Save_String_Const .)
    GREATER_EQUAL   reduce using rule 74 (Var_Cte -> STRING_CONST Save_String_Const .)
    AND             reduce using rule 74 (Var_Cte -> STRING_CONST Save_String_Const .)
    OR              reduce using rule 74 (Var_Cte -> STRING_CONST Save_String_Const .)
    PAR_CLOSE       reduce using rule 74 (Var_Cte -> STRING_CONST Save_String_Const .)
    SEMICOLON       reduce using rule 74 (Var_Cte -> STRING_CONST Save_String_Const .)
    EQUAL           reduce using rule 74 (Var_Cte -> STRING_CONST Save_String_Const .)
    DIFF            reduce using rule 74 (Var_Cte -> STRING_CONST Save_String_Const .)


state 51

    (69) Var_Cte -> INT_CONST Save_Int_Const .

    TIMES_SIGN      reduce using rule 69 (Var_Cte -> INT_CONST Save_Int_Const .)
    DIVIDE_SIGN     reduce using rule 69 (Var_Cte -> INT_CONST Save_Int_Const .)
    MOD_SIGN        reduce using rule 69 (Var_Cte -> INT_CONST Save_Int_Const .)
    PLUS_SIGN       reduce using rule 69 (Var_Cte -> INT_CONST Save_Int_Const .)
    MINUS_SIGN      reduce using rule 69 (Var_Cte -> INT_CONST Save_Int_Const .)
    LESS            reduce using rule 69 (Var_Cte -> INT_CONST Save_Int_Const .)
    LESS_EQUAL      reduce using rule 69 (Var_Cte -> INT_CONST Save_Int_Const .)
    GREATER         reduce using rule 69 (Var_Cte -> INT_CONST Save_Int_Const .)
    GREATER_EQUAL   reduce using rule 69 (Var_Cte -> INT_CONST Save_Int_Const .)
    AND             reduce using rule 69 (Var_Cte -> INT_CONST Save_Int_Const .)
    OR              reduce using rule 69 (Var_Cte -> INT_CONST Save_Int_Const .)
    PAR_CLOSE       reduce using rule 69 (Var_Cte -> INT_CONST Save_Int_Const .)
    SEMICOLON       reduce using rule 69 (Var_Cte -> INT_CONST Save_Int_Const .)
    EQUAL           reduce using rule 69 (Var_Cte -> INT_CONST Save_Int_Const .)
    DIFF            reduce using rule 69 (Var_Cte -> INT_CONST Save_Int_Const .)


state 52

    (30) Logical_And -> Logical_Not And_Quad . Multiple_Nots
    (31) Multiple_Nots -> . AND Push_And Logical_Not And_Quad Multiple_Nots
    (32) Multiple_Nots -> . Epsilon
    (83) Epsilon -> .

    AND             shift and go to state 71
    OR              reduce using rule 83 (Epsilon -> .)
    EQUAL           reduce using rule 83 (Epsilon -> .)
    DIFF            reduce using rule 83 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 83 (Epsilon -> .)
    SEMICOLON       reduce using rule 83 (Epsilon -> .)

    Multiple_Nots                  shift and go to state 73
    Epsilon                        shift and go to state 72

state 53

    (73) Var_Cte -> BOOL_CONST Save_Bool_Const .

    TIMES_SIGN      reduce using rule 73 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    DIVIDE_SIGN     reduce using rule 73 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    MOD_SIGN        reduce using rule 73 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    PLUS_SIGN       reduce using rule 73 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    MINUS_SIGN      reduce using rule 73 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    LESS            reduce using rule 73 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    LESS_EQUAL      reduce using rule 73 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    GREATER         reduce using rule 73 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    GREATER_EQUAL   reduce using rule 73 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    AND             reduce using rule 73 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    OR              reduce using rule 73 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    PAR_CLOSE       reduce using rule 73 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    SEMICOLON       reduce using rule 73 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    EQUAL           reduce using rule 73 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    DIFF            reduce using rule 73 (Var_Cte -> BOOL_CONST Save_Bool_Const .)


state 54

    (49) Expression -> Term Sum_Sub_Quad . Multiple_Terms
    (50) Multiple_Terms -> . PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms
    (51) Multiple_Terms -> . MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms
    (52) Multiple_Terms -> . Epsilon
    (83) Epsilon -> .

    PLUS_SIGN       shift and go to state 77
    MINUS_SIGN      shift and go to state 76
    LESS            reduce using rule 83 (Epsilon -> .)
    LESS_EQUAL      reduce using rule 83 (Epsilon -> .)
    GREATER         reduce using rule 83 (Epsilon -> .)
    GREATER_EQUAL   reduce using rule 83 (Epsilon -> .)
    AND             reduce using rule 83 (Epsilon -> .)
    OR              reduce using rule 83 (Epsilon -> .)
    EQUAL           reduce using rule 83 (Epsilon -> .)
    DIFF            reduce using rule 83 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 83 (Epsilon -> .)
    SEMICOLON       reduce using rule 83 (Epsilon -> .)

    Multiple_Terms                 shift and go to state 74
    Epsilon                        shift and go to state 75

state 55

    (56) Term -> Factor Mult_Div_Mod_Quad . Multiple_Factors
    (57) Multiple_Factors -> . TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (58) Multiple_Factors -> . DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (59) Multiple_Factors -> . MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (60) Multiple_Factors -> . Epsilon
    (83) Epsilon -> .

    TIMES_SIGN      shift and go to state 78
    DIVIDE_SIGN     shift and go to state 82
    MOD_SIGN        shift and go to state 79
    PLUS_SIGN       reduce using rule 83 (Epsilon -> .)
    MINUS_SIGN      reduce using rule 83 (Epsilon -> .)
    LESS            reduce using rule 83 (Epsilon -> .)
    LESS_EQUAL      reduce using rule 83 (Epsilon -> .)
    GREATER         reduce using rule 83 (Epsilon -> .)
    GREATER_EQUAL   reduce using rule 83 (Epsilon -> .)
    AND             reduce using rule 83 (Epsilon -> .)
    OR              reduce using rule 83 (Epsilon -> .)
    EQUAL           reduce using rule 83 (Epsilon -> .)
    DIFF            reduce using rule 83 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 83 (Epsilon -> .)
    SEMICOLON       reduce using rule 83 (Epsilon -> .)

    Epsilon                        shift and go to state 80
    Multiple_Factors               shift and go to state 81

state 56

    (20) Exp -> Logical_Or EQUAL . Push_Equal Logical_Or Equity_Quad
    (23) Push_Equal -> .

    NOT             reduce using rule 23 (Push_Equal -> .)
    PAR_OPEN        reduce using rule 23 (Push_Equal -> .)
    INT_CONST       reduce using rule 23 (Push_Equal -> .)
    MINUS_SIGN      reduce using rule 23 (Push_Equal -> .)
    FLOAT_CONST     reduce using rule 23 (Push_Equal -> .)
    BOOL_CONST      reduce using rule 23 (Push_Equal -> .)
    STRING_CONST    reduce using rule 23 (Push_Equal -> .)
    ID              reduce using rule 23 (Push_Equal -> .)

    Push_Equal                     shift and go to state 83

state 57

    (21) Exp -> Logical_Or DIFF . Push_Diff Logical_Or Equity_Quad
    (24) Push_Diff -> .

    NOT             reduce using rule 24 (Push_Diff -> .)
    PAR_OPEN        reduce using rule 24 (Push_Diff -> .)
    INT_CONST       reduce using rule 24 (Push_Diff -> .)
    MINUS_SIGN      reduce using rule 24 (Push_Diff -> .)
    FLOAT_CONST     reduce using rule 24 (Push_Diff -> .)
    BOOL_CONST      reduce using rule 24 (Push_Diff -> .)
    STRING_CONST    reduce using rule 24 (Push_Diff -> .)
    ID              reduce using rule 24 (Push_Diff -> .)

    Push_Diff                      shift and go to state 84

state 58

    (25) Logical_Or -> Logical_And Or_Quad . Multiple_Ands
    (26) Multiple_Ands -> . OR Push_Or Logical_And Or_Quad Multiple_Ands
    (27) Multiple_Ands -> . Epsilon
    (83) Epsilon -> .

    OR              shift and go to state 87
    EQUAL           reduce using rule 83 (Epsilon -> .)
    DIFF            reduce using rule 83 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 83 (Epsilon -> .)
    SEMICOLON       reduce using rule 83 (Epsilon -> .)

    Multiple_Ands                  shift and go to state 85
    Epsilon                        shift and go to state 86

state 59

    (10) Print -> PRINT PAR_OPEN Exp PAR_CLOSE . SEMICOLON

    SEMICOLON       shift and go to state 88


state 60

    (40) Relational -> Expression LESS . Push_Less Expression Relational_Quad
    (45) Push_Less -> .

    PAR_OPEN        reduce using rule 45 (Push_Less -> .)
    INT_CONST       reduce using rule 45 (Push_Less -> .)
    MINUS_SIGN      reduce using rule 45 (Push_Less -> .)
    FLOAT_CONST     reduce using rule 45 (Push_Less -> .)
    BOOL_CONST      reduce using rule 45 (Push_Less -> .)
    STRING_CONST    reduce using rule 45 (Push_Less -> .)
    ID              reduce using rule 45 (Push_Less -> .)

    Push_Less                      shift and go to state 89

state 61

    (41) Relational -> Expression LESS_EQUAL . Push_Less_Equal Expression Relational_Quad
    (46) Push_Less_Equal -> .

    PAR_OPEN        reduce using rule 46 (Push_Less_Equal -> .)
    INT_CONST       reduce using rule 46 (Push_Less_Equal -> .)
    MINUS_SIGN      reduce using rule 46 (Push_Less_Equal -> .)
    FLOAT_CONST     reduce using rule 46 (Push_Less_Equal -> .)
    BOOL_CONST      reduce using rule 46 (Push_Less_Equal -> .)
    STRING_CONST    reduce using rule 46 (Push_Less_Equal -> .)
    ID              reduce using rule 46 (Push_Less_Equal -> .)

    Push_Less_Equal                shift and go to state 90

state 62

    (43) Relational -> Expression GREATER_EQUAL . Push_Greater_Equal Expression Relational_Quad
    (48) Push_Greater_Equal -> .

    PAR_OPEN        reduce using rule 48 (Push_Greater_Equal -> .)
    INT_CONST       reduce using rule 48 (Push_Greater_Equal -> .)
    MINUS_SIGN      reduce using rule 48 (Push_Greater_Equal -> .)
    FLOAT_CONST     reduce using rule 48 (Push_Greater_Equal -> .)
    BOOL_CONST      reduce using rule 48 (Push_Greater_Equal -> .)
    STRING_CONST    reduce using rule 48 (Push_Greater_Equal -> .)
    ID              reduce using rule 48 (Push_Greater_Equal -> .)

    Push_Greater_Equal             shift and go to state 91

state 63

    (42) Relational -> Expression GREATER . Push_Greater Expression Relational_Quad
    (47) Push_Greater -> .

    PAR_OPEN        reduce using rule 47 (Push_Greater -> .)
    INT_CONST       reduce using rule 47 (Push_Greater -> .)
    MINUS_SIGN      reduce using rule 47 (Push_Greater -> .)
    FLOAT_CONST     reduce using rule 47 (Push_Greater -> .)
    BOOL_CONST      reduce using rule 47 (Push_Greater -> .)
    STRING_CONST    reduce using rule 47 (Push_Greater -> .)
    ID              reduce using rule 47 (Push_Greater -> .)

    Push_Greater                   shift and go to state 92

state 64

    (75) Var_Cte -> ID Get_Id_Value .

    TIMES_SIGN      reduce using rule 75 (Var_Cte -> ID Get_Id_Value .)
    DIVIDE_SIGN     reduce using rule 75 (Var_Cte -> ID Get_Id_Value .)
    MOD_SIGN        reduce using rule 75 (Var_Cte -> ID Get_Id_Value .)
    PLUS_SIGN       reduce using rule 75 (Var_Cte -> ID Get_Id_Value .)
    MINUS_SIGN      reduce using rule 75 (Var_Cte -> ID Get_Id_Value .)
    LESS            reduce using rule 75 (Var_Cte -> ID Get_Id_Value .)
    LESS_EQUAL      reduce using rule 75 (Var_Cte -> ID Get_Id_Value .)
    GREATER         reduce using rule 75 (Var_Cte -> ID Get_Id_Value .)
    GREATER_EQUAL   reduce using rule 75 (Var_Cte -> ID Get_Id_Value .)
    AND             reduce using rule 75 (Var_Cte -> ID Get_Id_Value .)
    OR              reduce using rule 75 (Var_Cte -> ID Get_Id_Value .)
    PAR_CLOSE       reduce using rule 75 (Var_Cte -> ID Get_Id_Value .)
    SEMICOLON       reduce using rule 75 (Var_Cte -> ID Get_Id_Value .)
    EQUAL           reduce using rule 75 (Var_Cte -> ID Get_Id_Value .)
    DIFF            reduce using rule 75 (Var_Cte -> ID Get_Id_Value .)


state 65

    (70) Var_Cte -> MINUS_SIGN INT_CONST . Save_Neg_Int_Const
    (77) Save_Neg_Int_Const -> .

    TIMES_SIGN      reduce using rule 77 (Save_Neg_Int_Const -> .)
    DIVIDE_SIGN     reduce using rule 77 (Save_Neg_Int_Const -> .)
    MOD_SIGN        reduce using rule 77 (Save_Neg_Int_Const -> .)
    PLUS_SIGN       reduce using rule 77 (Save_Neg_Int_Const -> .)
    MINUS_SIGN      reduce using rule 77 (Save_Neg_Int_Const -> .)
    LESS            reduce using rule 77 (Save_Neg_Int_Const -> .)
    LESS_EQUAL      reduce using rule 77 (Save_Neg_Int_Const -> .)
    GREATER         reduce using rule 77 (Save_Neg_Int_Const -> .)
    GREATER_EQUAL   reduce using rule 77 (Save_Neg_Int_Const -> .)
    AND             reduce using rule 77 (Save_Neg_Int_Const -> .)
    OR              reduce using rule 77 (Save_Neg_Int_Const -> .)
    EQUAL           reduce using rule 77 (Save_Neg_Int_Const -> .)
    DIFF            reduce using rule 77 (Save_Neg_Int_Const -> .)
    PAR_CLOSE       reduce using rule 77 (Save_Neg_Int_Const -> .)
    SEMICOLON       reduce using rule 77 (Save_Neg_Int_Const -> .)

    Save_Neg_Int_Const             shift and go to state 93

state 66

    (72) Var_Cte -> MINUS_SIGN FLOAT_CONST . Save_Neg_Float_Const
    (79) Save_Neg_Float_Const -> .

    TIMES_SIGN      reduce using rule 79 (Save_Neg_Float_Const -> .)
    DIVIDE_SIGN     reduce using rule 79 (Save_Neg_Float_Const -> .)
    MOD_SIGN        reduce using rule 79 (Save_Neg_Float_Const -> .)
    PLUS_SIGN       reduce using rule 79 (Save_Neg_Float_Const -> .)
    MINUS_SIGN      reduce using rule 79 (Save_Neg_Float_Const -> .)
    LESS            reduce using rule 79 (Save_Neg_Float_Const -> .)
    LESS_EQUAL      reduce using rule 79 (Save_Neg_Float_Const -> .)
    GREATER         reduce using rule 79 (Save_Neg_Float_Const -> .)
    GREATER_EQUAL   reduce using rule 79 (Save_Neg_Float_Const -> .)
    AND             reduce using rule 79 (Save_Neg_Float_Const -> .)
    OR              reduce using rule 79 (Save_Neg_Float_Const -> .)
    EQUAL           reduce using rule 79 (Save_Neg_Float_Const -> .)
    DIFF            reduce using rule 79 (Save_Neg_Float_Const -> .)
    PAR_CLOSE       reduce using rule 79 (Save_Neg_Float_Const -> .)
    SEMICOLON       reduce using rule 79 (Save_Neg_Float_Const -> .)

    Save_Neg_Float_Const           shift and go to state 94

state 67

    (36) Logical_Not -> NOT Push_Not . Relational Not_Quad
    (39) Relational -> . Expression
    (40) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (41) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (42) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (43) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (49) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (56) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (65) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (66) Factor -> . Var_Cte
    (69) Var_Cte -> . INT_CONST Save_Int_Const
    (70) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (71) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (72) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (73) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (74) Var_Cte -> . STRING_CONST Save_String_Const
    (75) Var_Cte -> . ID Get_Id_Value

    PAR_OPEN        shift and go to state 28
    INT_CONST       shift and go to state 32
    MINUS_SIGN      shift and go to state 43
    FLOAT_CONST     shift and go to state 29
    BOOL_CONST      shift and go to state 34
    STRING_CONST    shift and go to state 31
    ID              shift and go to state 42

    Factor                         shift and go to state 36
    Relational                     shift and go to state 95
    Term                           shift and go to state 35
    Var_Cte                        shift and go to state 37
    Expression                     shift and go to state 41

state 68

    (12) Declare_Var -> Type ID ASSIGN Push_Assign . Exp SEMICOLON
    (19) Exp -> . Logical_Or
    (20) Exp -> . Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad
    (21) Exp -> . Logical_Or DIFF Push_Diff Logical_Or Equity_Quad
    (25) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (30) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (35) Logical_Not -> . Relational
    (36) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (39) Relational -> . Expression
    (40) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (41) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (42) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (43) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (49) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (56) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (65) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (66) Factor -> . Var_Cte
    (69) Var_Cte -> . INT_CONST Save_Int_Const
    (70) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (71) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (72) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (73) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (74) Var_Cte -> . STRING_CONST Save_String_Const
    (75) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 44
    PAR_OPEN        shift and go to state 28
    INT_CONST       shift and go to state 32
    MINUS_SIGN      shift and go to state 43
    FLOAT_CONST     shift and go to state 29
    BOOL_CONST      shift and go to state 34
    STRING_CONST    shift and go to state 31
    ID              shift and go to state 42

    Factor                         shift and go to state 36
    Relational                     shift and go to state 30
    Logical_Not                    shift and go to state 33
    Term                           shift and go to state 35
    Var_Cte                        shift and go to state 37
    Logical_Or                     shift and go to state 38
    Logical_And                    shift and go to state 39
    Exp                            shift and go to state 96
    Expression                     shift and go to state 41

state 69

    (17) Assignment -> ID ASSIGN Push_Assign Exp SEMICOLON .

    PRINT           reduce using rule 17 (Assignment -> ID ASSIGN Push_Assign Exp SEMICOLON .)
    ID              reduce using rule 17 (Assignment -> ID ASSIGN Push_Assign Exp SEMICOLON .)
    INT             reduce using rule 17 (Assignment -> ID ASSIGN Push_Assign Exp SEMICOLON .)
    FLOAT           reduce using rule 17 (Assignment -> ID ASSIGN Push_Assign Exp SEMICOLON .)
    BOOL            reduce using rule 17 (Assignment -> ID ASSIGN Push_Assign Exp SEMICOLON .)
    STRING          reduce using rule 17 (Assignment -> ID ASSIGN Push_Assign Exp SEMICOLON .)
    CURLYB_CLOSE    reduce using rule 17 (Assignment -> ID ASSIGN Push_Assign Exp SEMICOLON .)


state 70

    (65) Factor -> PAR_OPEN Push_False_Bottom Exp . PAR_CLOSE Pop_False_Bottom

    PAR_CLOSE       shift and go to state 97


state 71

    (31) Multiple_Nots -> AND . Push_And Logical_Not And_Quad Multiple_Nots
    (34) Push_And -> .

    NOT             reduce using rule 34 (Push_And -> .)
    PAR_OPEN        reduce using rule 34 (Push_And -> .)
    INT_CONST       reduce using rule 34 (Push_And -> .)
    MINUS_SIGN      reduce using rule 34 (Push_And -> .)
    FLOAT_CONST     reduce using rule 34 (Push_And -> .)
    BOOL_CONST      reduce using rule 34 (Push_And -> .)
    STRING_CONST    reduce using rule 34 (Push_And -> .)
    ID              reduce using rule 34 (Push_And -> .)

    Push_And                       shift and go to state 98

state 72

    (32) Multiple_Nots -> Epsilon .

    OR              reduce using rule 32 (Multiple_Nots -> Epsilon .)
    EQUAL           reduce using rule 32 (Multiple_Nots -> Epsilon .)
    DIFF            reduce using rule 32 (Multiple_Nots -> Epsilon .)
    PAR_CLOSE       reduce using rule 32 (Multiple_Nots -> Epsilon .)
    SEMICOLON       reduce using rule 32 (Multiple_Nots -> Epsilon .)


state 73

    (30) Logical_And -> Logical_Not And_Quad Multiple_Nots .

    OR              reduce using rule 30 (Logical_And -> Logical_Not And_Quad Multiple_Nots .)
    PAR_CLOSE       reduce using rule 30 (Logical_And -> Logical_Not And_Quad Multiple_Nots .)
    SEMICOLON       reduce using rule 30 (Logical_And -> Logical_Not And_Quad Multiple_Nots .)
    EQUAL           reduce using rule 30 (Logical_And -> Logical_Not And_Quad Multiple_Nots .)
    DIFF            reduce using rule 30 (Logical_And -> Logical_Not And_Quad Multiple_Nots .)


state 74

    (49) Expression -> Term Sum_Sub_Quad Multiple_Terms .

    AND             reduce using rule 49 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    OR              reduce using rule 49 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    EQUAL           reduce using rule 49 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    DIFF            reduce using rule 49 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    PAR_CLOSE       reduce using rule 49 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    SEMICOLON       reduce using rule 49 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    LESS            reduce using rule 49 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    LESS_EQUAL      reduce using rule 49 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    GREATER         reduce using rule 49 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    GREATER_EQUAL   reduce using rule 49 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)


state 75

    (52) Multiple_Terms -> Epsilon .

    LESS            reduce using rule 52 (Multiple_Terms -> Epsilon .)
    LESS_EQUAL      reduce using rule 52 (Multiple_Terms -> Epsilon .)
    GREATER         reduce using rule 52 (Multiple_Terms -> Epsilon .)
    GREATER_EQUAL   reduce using rule 52 (Multiple_Terms -> Epsilon .)
    AND             reduce using rule 52 (Multiple_Terms -> Epsilon .)
    OR              reduce using rule 52 (Multiple_Terms -> Epsilon .)
    EQUAL           reduce using rule 52 (Multiple_Terms -> Epsilon .)
    DIFF            reduce using rule 52 (Multiple_Terms -> Epsilon .)
    PAR_CLOSE       reduce using rule 52 (Multiple_Terms -> Epsilon .)
    SEMICOLON       reduce using rule 52 (Multiple_Terms -> Epsilon .)


state 76

    (51) Multiple_Terms -> MINUS_SIGN . Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms
    (55) Push_Minus_Sign -> .

    PAR_OPEN        reduce using rule 55 (Push_Minus_Sign -> .)
    INT_CONST       reduce using rule 55 (Push_Minus_Sign -> .)
    MINUS_SIGN      reduce using rule 55 (Push_Minus_Sign -> .)
    FLOAT_CONST     reduce using rule 55 (Push_Minus_Sign -> .)
    BOOL_CONST      reduce using rule 55 (Push_Minus_Sign -> .)
    STRING_CONST    reduce using rule 55 (Push_Minus_Sign -> .)
    ID              reduce using rule 55 (Push_Minus_Sign -> .)

    Push_Minus_Sign                shift and go to state 99

state 77

    (50) Multiple_Terms -> PLUS_SIGN . Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms
    (54) Push_Plus_Sign -> .

    PAR_OPEN        reduce using rule 54 (Push_Plus_Sign -> .)
    INT_CONST       reduce using rule 54 (Push_Plus_Sign -> .)
    MINUS_SIGN      reduce using rule 54 (Push_Plus_Sign -> .)
    FLOAT_CONST     reduce using rule 54 (Push_Plus_Sign -> .)
    BOOL_CONST      reduce using rule 54 (Push_Plus_Sign -> .)
    STRING_CONST    reduce using rule 54 (Push_Plus_Sign -> .)
    ID              reduce using rule 54 (Push_Plus_Sign -> .)

    Push_Plus_Sign                 shift and go to state 100

state 78

    (57) Multiple_Factors -> TIMES_SIGN . Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (62) Push_Times_Sign -> .

    PAR_OPEN        reduce using rule 62 (Push_Times_Sign -> .)
    INT_CONST       reduce using rule 62 (Push_Times_Sign -> .)
    MINUS_SIGN      reduce using rule 62 (Push_Times_Sign -> .)
    FLOAT_CONST     reduce using rule 62 (Push_Times_Sign -> .)
    BOOL_CONST      reduce using rule 62 (Push_Times_Sign -> .)
    STRING_CONST    reduce using rule 62 (Push_Times_Sign -> .)
    ID              reduce using rule 62 (Push_Times_Sign -> .)

    Push_Times_Sign                shift and go to state 101

state 79

    (59) Multiple_Factors -> MOD_SIGN . Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (64) Push_Mod_Sign -> .

    PAR_OPEN        reduce using rule 64 (Push_Mod_Sign -> .)
    INT_CONST       reduce using rule 64 (Push_Mod_Sign -> .)
    MINUS_SIGN      reduce using rule 64 (Push_Mod_Sign -> .)
    FLOAT_CONST     reduce using rule 64 (Push_Mod_Sign -> .)
    BOOL_CONST      reduce using rule 64 (Push_Mod_Sign -> .)
    STRING_CONST    reduce using rule 64 (Push_Mod_Sign -> .)
    ID              reduce using rule 64 (Push_Mod_Sign -> .)

    Push_Mod_Sign                  shift and go to state 102

state 80

    (60) Multiple_Factors -> Epsilon .

    PLUS_SIGN       reduce using rule 60 (Multiple_Factors -> Epsilon .)
    MINUS_SIGN      reduce using rule 60 (Multiple_Factors -> Epsilon .)
    LESS            reduce using rule 60 (Multiple_Factors -> Epsilon .)
    LESS_EQUAL      reduce using rule 60 (Multiple_Factors -> Epsilon .)
    GREATER         reduce using rule 60 (Multiple_Factors -> Epsilon .)
    GREATER_EQUAL   reduce using rule 60 (Multiple_Factors -> Epsilon .)
    AND             reduce using rule 60 (Multiple_Factors -> Epsilon .)
    OR              reduce using rule 60 (Multiple_Factors -> Epsilon .)
    EQUAL           reduce using rule 60 (Multiple_Factors -> Epsilon .)
    DIFF            reduce using rule 60 (Multiple_Factors -> Epsilon .)
    PAR_CLOSE       reduce using rule 60 (Multiple_Factors -> Epsilon .)
    SEMICOLON       reduce using rule 60 (Multiple_Factors -> Epsilon .)


state 81

    (56) Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .

    PLUS_SIGN       reduce using rule 56 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    MINUS_SIGN      reduce using rule 56 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    AND             reduce using rule 56 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    OR              reduce using rule 56 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    EQUAL           reduce using rule 56 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    DIFF            reduce using rule 56 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    PAR_CLOSE       reduce using rule 56 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    SEMICOLON       reduce using rule 56 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS            reduce using rule 56 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS_EQUAL      reduce using rule 56 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER         reduce using rule 56 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER_EQUAL   reduce using rule 56 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)


state 82

    (58) Multiple_Factors -> DIVIDE_SIGN . Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (63) Push_Divide_Sign -> .

    PAR_OPEN        reduce using rule 63 (Push_Divide_Sign -> .)
    INT_CONST       reduce using rule 63 (Push_Divide_Sign -> .)
    MINUS_SIGN      reduce using rule 63 (Push_Divide_Sign -> .)
    FLOAT_CONST     reduce using rule 63 (Push_Divide_Sign -> .)
    BOOL_CONST      reduce using rule 63 (Push_Divide_Sign -> .)
    STRING_CONST    reduce using rule 63 (Push_Divide_Sign -> .)
    ID              reduce using rule 63 (Push_Divide_Sign -> .)

    Push_Divide_Sign               shift and go to state 103

state 83

    (20) Exp -> Logical_Or EQUAL Push_Equal . Logical_Or Equity_Quad
    (25) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (30) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (35) Logical_Not -> . Relational
    (36) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (39) Relational -> . Expression
    (40) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (41) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (42) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (43) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (49) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (56) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (65) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (66) Factor -> . Var_Cte
    (69) Var_Cte -> . INT_CONST Save_Int_Const
    (70) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (71) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (72) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (73) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (74) Var_Cte -> . STRING_CONST Save_String_Const
    (75) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 44
    PAR_OPEN        shift and go to state 28
    INT_CONST       shift and go to state 32
    MINUS_SIGN      shift and go to state 43
    FLOAT_CONST     shift and go to state 29
    BOOL_CONST      shift and go to state 34
    STRING_CONST    shift and go to state 31
    ID              shift and go to state 42

    Factor                         shift and go to state 36
    Relational                     shift and go to state 30
    Logical_Not                    shift and go to state 33
    Term                           shift and go to state 35
    Var_Cte                        shift and go to state 37
    Logical_Or                     shift and go to state 104
    Logical_And                    shift and go to state 39
    Expression                     shift and go to state 41

state 84

    (21) Exp -> Logical_Or DIFF Push_Diff . Logical_Or Equity_Quad
    (25) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (30) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (35) Logical_Not -> . Relational
    (36) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (39) Relational -> . Expression
    (40) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (41) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (42) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (43) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (49) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (56) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (65) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (66) Factor -> . Var_Cte
    (69) Var_Cte -> . INT_CONST Save_Int_Const
    (70) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (71) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (72) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (73) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (74) Var_Cte -> . STRING_CONST Save_String_Const
    (75) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 44
    PAR_OPEN        shift and go to state 28
    INT_CONST       shift and go to state 32
    MINUS_SIGN      shift and go to state 43
    FLOAT_CONST     shift and go to state 29
    BOOL_CONST      shift and go to state 34
    STRING_CONST    shift and go to state 31
    ID              shift and go to state 42

    Factor                         shift and go to state 36
    Relational                     shift and go to state 30
    Logical_Not                    shift and go to state 33
    Term                           shift and go to state 35
    Var_Cte                        shift and go to state 37
    Logical_Or                     shift and go to state 105
    Logical_And                    shift and go to state 39
    Expression                     shift and go to state 41

state 85

    (25) Logical_Or -> Logical_And Or_Quad Multiple_Ands .

    PAR_CLOSE       reduce using rule 25 (Logical_Or -> Logical_And Or_Quad Multiple_Ands .)
    SEMICOLON       reduce using rule 25 (Logical_Or -> Logical_And Or_Quad Multiple_Ands .)
    EQUAL           reduce using rule 25 (Logical_Or -> Logical_And Or_Quad Multiple_Ands .)
    DIFF            reduce using rule 25 (Logical_Or -> Logical_And Or_Quad Multiple_Ands .)


state 86

    (27) Multiple_Ands -> Epsilon .

    EQUAL           reduce using rule 27 (Multiple_Ands -> Epsilon .)
    DIFF            reduce using rule 27 (Multiple_Ands -> Epsilon .)
    PAR_CLOSE       reduce using rule 27 (Multiple_Ands -> Epsilon .)
    SEMICOLON       reduce using rule 27 (Multiple_Ands -> Epsilon .)


state 87

    (26) Multiple_Ands -> OR . Push_Or Logical_And Or_Quad Multiple_Ands
    (29) Push_Or -> .

    NOT             reduce using rule 29 (Push_Or -> .)
    PAR_OPEN        reduce using rule 29 (Push_Or -> .)
    INT_CONST       reduce using rule 29 (Push_Or -> .)
    MINUS_SIGN      reduce using rule 29 (Push_Or -> .)
    FLOAT_CONST     reduce using rule 29 (Push_Or -> .)
    BOOL_CONST      reduce using rule 29 (Push_Or -> .)
    STRING_CONST    reduce using rule 29 (Push_Or -> .)
    ID              reduce using rule 29 (Push_Or -> .)

    Push_Or                        shift and go to state 106

state 88

    (10) Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON .

    PRINT           reduce using rule 10 (Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON .)
    ID              reduce using rule 10 (Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON .)
    INT             reduce using rule 10 (Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON .)
    FLOAT           reduce using rule 10 (Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON .)
    BOOL            reduce using rule 10 (Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON .)
    STRING          reduce using rule 10 (Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON .)
    CURLYB_CLOSE    reduce using rule 10 (Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON .)


state 89

    (40) Relational -> Expression LESS Push_Less . Expression Relational_Quad
    (49) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (56) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (65) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (66) Factor -> . Var_Cte
    (69) Var_Cte -> . INT_CONST Save_Int_Const
    (70) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (71) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (72) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (73) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (74) Var_Cte -> . STRING_CONST Save_String_Const
    (75) Var_Cte -> . ID Get_Id_Value

    PAR_OPEN        shift and go to state 28
    INT_CONST       shift and go to state 32
    MINUS_SIGN      shift and go to state 43
    FLOAT_CONST     shift and go to state 29
    BOOL_CONST      shift and go to state 34
    STRING_CONST    shift and go to state 31
    ID              shift and go to state 42

    Term                           shift and go to state 35
    Var_Cte                        shift and go to state 37
    Factor                         shift and go to state 36
    Expression                     shift and go to state 107

state 90

    (41) Relational -> Expression LESS_EQUAL Push_Less_Equal . Expression Relational_Quad
    (49) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (56) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (65) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (66) Factor -> . Var_Cte
    (69) Var_Cte -> . INT_CONST Save_Int_Const
    (70) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (71) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (72) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (73) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (74) Var_Cte -> . STRING_CONST Save_String_Const
    (75) Var_Cte -> . ID Get_Id_Value

    PAR_OPEN        shift and go to state 28
    INT_CONST       shift and go to state 32
    MINUS_SIGN      shift and go to state 43
    FLOAT_CONST     shift and go to state 29
    BOOL_CONST      shift and go to state 34
    STRING_CONST    shift and go to state 31
    ID              shift and go to state 42

    Term                           shift and go to state 35
    Var_Cte                        shift and go to state 37
    Factor                         shift and go to state 36
    Expression                     shift and go to state 108

state 91

    (43) Relational -> Expression GREATER_EQUAL Push_Greater_Equal . Expression Relational_Quad
    (49) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (56) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (65) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (66) Factor -> . Var_Cte
    (69) Var_Cte -> . INT_CONST Save_Int_Const
    (70) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (71) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (72) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (73) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (74) Var_Cte -> . STRING_CONST Save_String_Const
    (75) Var_Cte -> . ID Get_Id_Value

    PAR_OPEN        shift and go to state 28
    INT_CONST       shift and go to state 32
    MINUS_SIGN      shift and go to state 43
    FLOAT_CONST     shift and go to state 29
    BOOL_CONST      shift and go to state 34
    STRING_CONST    shift and go to state 31
    ID              shift and go to state 42

    Term                           shift and go to state 35
    Var_Cte                        shift and go to state 37
    Factor                         shift and go to state 36
    Expression                     shift and go to state 109

state 92

    (42) Relational -> Expression GREATER Push_Greater . Expression Relational_Quad
    (49) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (56) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (65) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (66) Factor -> . Var_Cte
    (69) Var_Cte -> . INT_CONST Save_Int_Const
    (70) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (71) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (72) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (73) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (74) Var_Cte -> . STRING_CONST Save_String_Const
    (75) Var_Cte -> . ID Get_Id_Value

    PAR_OPEN        shift and go to state 28
    INT_CONST       shift and go to state 32
    MINUS_SIGN      shift and go to state 43
    FLOAT_CONST     shift and go to state 29
    BOOL_CONST      shift and go to state 34
    STRING_CONST    shift and go to state 31
    ID              shift and go to state 42

    Term                           shift and go to state 35
    Var_Cte                        shift and go to state 37
    Factor                         shift and go to state 36
    Expression                     shift and go to state 110

state 93

    (70) Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .

    TIMES_SIGN      reduce using rule 70 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    DIVIDE_SIGN     reduce using rule 70 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    MOD_SIGN        reduce using rule 70 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    PLUS_SIGN       reduce using rule 70 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    MINUS_SIGN      reduce using rule 70 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    LESS            reduce using rule 70 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    LESS_EQUAL      reduce using rule 70 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    GREATER         reduce using rule 70 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    GREATER_EQUAL   reduce using rule 70 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    AND             reduce using rule 70 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    OR              reduce using rule 70 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    PAR_CLOSE       reduce using rule 70 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    SEMICOLON       reduce using rule 70 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    EQUAL           reduce using rule 70 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    DIFF            reduce using rule 70 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)


state 94

    (72) Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .

    TIMES_SIGN      reduce using rule 72 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    DIVIDE_SIGN     reduce using rule 72 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    MOD_SIGN        reduce using rule 72 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    PLUS_SIGN       reduce using rule 72 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    MINUS_SIGN      reduce using rule 72 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    LESS            reduce using rule 72 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    LESS_EQUAL      reduce using rule 72 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    GREATER         reduce using rule 72 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    GREATER_EQUAL   reduce using rule 72 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    AND             reduce using rule 72 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    OR              reduce using rule 72 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    PAR_CLOSE       reduce using rule 72 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    SEMICOLON       reduce using rule 72 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    EQUAL           reduce using rule 72 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    DIFF            reduce using rule 72 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)


state 95

    (36) Logical_Not -> NOT Push_Not Relational . Not_Quad
    (37) Not_Quad -> .

    AND             reduce using rule 37 (Not_Quad -> .)
    OR              reduce using rule 37 (Not_Quad -> .)
    EQUAL           reduce using rule 37 (Not_Quad -> .)
    DIFF            reduce using rule 37 (Not_Quad -> .)
    PAR_CLOSE       reduce using rule 37 (Not_Quad -> .)
    SEMICOLON       reduce using rule 37 (Not_Quad -> .)

    Not_Quad                       shift and go to state 111

state 96

    (12) Declare_Var -> Type ID ASSIGN Push_Assign Exp . SEMICOLON

    SEMICOLON       shift and go to state 112


state 97

    (65) Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE . Pop_False_Bottom
    (68) Pop_False_Bottom -> .

    TIMES_SIGN      reduce using rule 68 (Pop_False_Bottom -> .)
    DIVIDE_SIGN     reduce using rule 68 (Pop_False_Bottom -> .)
    MOD_SIGN        reduce using rule 68 (Pop_False_Bottom -> .)
    PLUS_SIGN       reduce using rule 68 (Pop_False_Bottom -> .)
    MINUS_SIGN      reduce using rule 68 (Pop_False_Bottom -> .)
    LESS            reduce using rule 68 (Pop_False_Bottom -> .)
    LESS_EQUAL      reduce using rule 68 (Pop_False_Bottom -> .)
    GREATER         reduce using rule 68 (Pop_False_Bottom -> .)
    GREATER_EQUAL   reduce using rule 68 (Pop_False_Bottom -> .)
    AND             reduce using rule 68 (Pop_False_Bottom -> .)
    OR              reduce using rule 68 (Pop_False_Bottom -> .)
    EQUAL           reduce using rule 68 (Pop_False_Bottom -> .)
    DIFF            reduce using rule 68 (Pop_False_Bottom -> .)
    PAR_CLOSE       reduce using rule 68 (Pop_False_Bottom -> .)
    SEMICOLON       reduce using rule 68 (Pop_False_Bottom -> .)

    Pop_False_Bottom               shift and go to state 113

state 98

    (31) Multiple_Nots -> AND Push_And . Logical_Not And_Quad Multiple_Nots
    (35) Logical_Not -> . Relational
    (36) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (39) Relational -> . Expression
    (40) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (41) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (42) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (43) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (49) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (56) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (65) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (66) Factor -> . Var_Cte
    (69) Var_Cte -> . INT_CONST Save_Int_Const
    (70) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (71) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (72) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (73) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (74) Var_Cte -> . STRING_CONST Save_String_Const
    (75) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 44
    PAR_OPEN        shift and go to state 28
    INT_CONST       shift and go to state 32
    MINUS_SIGN      shift and go to state 43
    FLOAT_CONST     shift and go to state 29
    BOOL_CONST      shift and go to state 34
    STRING_CONST    shift and go to state 31
    ID              shift and go to state 42

    Factor                         shift and go to state 36
    Relational                     shift and go to state 30
    Logical_Not                    shift and go to state 114
    Term                           shift and go to state 35
    Var_Cte                        shift and go to state 37
    Expression                     shift and go to state 41

state 99

    (51) Multiple_Terms -> MINUS_SIGN Push_Minus_Sign . Term Sum_Sub_Quad Multiple_Terms
    (56) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (65) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (66) Factor -> . Var_Cte
    (69) Var_Cte -> . INT_CONST Save_Int_Const
    (70) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (71) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (72) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (73) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (74) Var_Cte -> . STRING_CONST Save_String_Const
    (75) Var_Cte -> . ID Get_Id_Value

    PAR_OPEN        shift and go to state 28
    INT_CONST       shift and go to state 32
    MINUS_SIGN      shift and go to state 43
    FLOAT_CONST     shift and go to state 29
    BOOL_CONST      shift and go to state 34
    STRING_CONST    shift and go to state 31
    ID              shift and go to state 42

    Term                           shift and go to state 115
    Var_Cte                        shift and go to state 37
    Factor                         shift and go to state 36

state 100

    (50) Multiple_Terms -> PLUS_SIGN Push_Plus_Sign . Term Sum_Sub_Quad Multiple_Terms
    (56) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (65) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (66) Factor -> . Var_Cte
    (69) Var_Cte -> . INT_CONST Save_Int_Const
    (70) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (71) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (72) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (73) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (74) Var_Cte -> . STRING_CONST Save_String_Const
    (75) Var_Cte -> . ID Get_Id_Value

    PAR_OPEN        shift and go to state 28
    INT_CONST       shift and go to state 32
    MINUS_SIGN      shift and go to state 43
    FLOAT_CONST     shift and go to state 29
    BOOL_CONST      shift and go to state 34
    STRING_CONST    shift and go to state 31
    ID              shift and go to state 42

    Term                           shift and go to state 116
    Var_Cte                        shift and go to state 37
    Factor                         shift and go to state 36

state 101

    (57) Multiple_Factors -> TIMES_SIGN Push_Times_Sign . Factor Mult_Div_Mod_Quad Multiple_Factors
    (65) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (66) Factor -> . Var_Cte
    (69) Var_Cte -> . INT_CONST Save_Int_Const
    (70) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (71) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (72) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (73) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (74) Var_Cte -> . STRING_CONST Save_String_Const
    (75) Var_Cte -> . ID Get_Id_Value

    PAR_OPEN        shift and go to state 28
    INT_CONST       shift and go to state 32
    MINUS_SIGN      shift and go to state 43
    FLOAT_CONST     shift and go to state 29
    BOOL_CONST      shift and go to state 34
    STRING_CONST    shift and go to state 31
    ID              shift and go to state 42

    Var_Cte                        shift and go to state 37
    Factor                         shift and go to state 117

state 102

    (59) Multiple_Factors -> MOD_SIGN Push_Mod_Sign . Factor Mult_Div_Mod_Quad Multiple_Factors
    (65) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (66) Factor -> . Var_Cte
    (69) Var_Cte -> . INT_CONST Save_Int_Const
    (70) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (71) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (72) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (73) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (74) Var_Cte -> . STRING_CONST Save_String_Const
    (75) Var_Cte -> . ID Get_Id_Value

    PAR_OPEN        shift and go to state 28
    INT_CONST       shift and go to state 32
    MINUS_SIGN      shift and go to state 43
    FLOAT_CONST     shift and go to state 29
    BOOL_CONST      shift and go to state 34
    STRING_CONST    shift and go to state 31
    ID              shift and go to state 42

    Var_Cte                        shift and go to state 37
    Factor                         shift and go to state 118

state 103

    (58) Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign . Factor Mult_Div_Mod_Quad Multiple_Factors
    (65) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (66) Factor -> . Var_Cte
    (69) Var_Cte -> . INT_CONST Save_Int_Const
    (70) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (71) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (72) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (73) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (74) Var_Cte -> . STRING_CONST Save_String_Const
    (75) Var_Cte -> . ID Get_Id_Value

    PAR_OPEN        shift and go to state 28
    INT_CONST       shift and go to state 32
    MINUS_SIGN      shift and go to state 43
    FLOAT_CONST     shift and go to state 29
    BOOL_CONST      shift and go to state 34
    STRING_CONST    shift and go to state 31
    ID              shift and go to state 42

    Var_Cte                        shift and go to state 37
    Factor                         shift and go to state 119

state 104

    (20) Exp -> Logical_Or EQUAL Push_Equal Logical_Or . Equity_Quad
    (22) Equity_Quad -> .

    PAR_CLOSE       reduce using rule 22 (Equity_Quad -> .)
    SEMICOLON       reduce using rule 22 (Equity_Quad -> .)

    Equity_Quad                    shift and go to state 120

state 105

    (21) Exp -> Logical_Or DIFF Push_Diff Logical_Or . Equity_Quad
    (22) Equity_Quad -> .

    PAR_CLOSE       reduce using rule 22 (Equity_Quad -> .)
    SEMICOLON       reduce using rule 22 (Equity_Quad -> .)

    Equity_Quad                    shift and go to state 121

state 106

    (26) Multiple_Ands -> OR Push_Or . Logical_And Or_Quad Multiple_Ands
    (30) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (35) Logical_Not -> . Relational
    (36) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (39) Relational -> . Expression
    (40) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (41) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (42) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (43) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (49) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (56) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (65) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (66) Factor -> . Var_Cte
    (69) Var_Cte -> . INT_CONST Save_Int_Const
    (70) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (71) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (72) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (73) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (74) Var_Cte -> . STRING_CONST Save_String_Const
    (75) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 44
    PAR_OPEN        shift and go to state 28
    INT_CONST       shift and go to state 32
    MINUS_SIGN      shift and go to state 43
    FLOAT_CONST     shift and go to state 29
    BOOL_CONST      shift and go to state 34
    STRING_CONST    shift and go to state 31
    ID              shift and go to state 42

    Factor                         shift and go to state 36
    Relational                     shift and go to state 30
    Logical_Not                    shift and go to state 33
    Term                           shift and go to state 35
    Var_Cte                        shift and go to state 37
    Logical_And                    shift and go to state 122
    Expression                     shift and go to state 41

state 107

    (40) Relational -> Expression LESS Push_Less Expression . Relational_Quad
    (44) Relational_Quad -> .

    AND             reduce using rule 44 (Relational_Quad -> .)
    OR              reduce using rule 44 (Relational_Quad -> .)
    EQUAL           reduce using rule 44 (Relational_Quad -> .)
    DIFF            reduce using rule 44 (Relational_Quad -> .)
    PAR_CLOSE       reduce using rule 44 (Relational_Quad -> .)
    SEMICOLON       reduce using rule 44 (Relational_Quad -> .)

    Relational_Quad                shift and go to state 123

state 108

    (41) Relational -> Expression LESS_EQUAL Push_Less_Equal Expression . Relational_Quad
    (44) Relational_Quad -> .

    AND             reduce using rule 44 (Relational_Quad -> .)
    OR              reduce using rule 44 (Relational_Quad -> .)
    EQUAL           reduce using rule 44 (Relational_Quad -> .)
    DIFF            reduce using rule 44 (Relational_Quad -> .)
    PAR_CLOSE       reduce using rule 44 (Relational_Quad -> .)
    SEMICOLON       reduce using rule 44 (Relational_Quad -> .)

    Relational_Quad                shift and go to state 124

state 109

    (43) Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression . Relational_Quad
    (44) Relational_Quad -> .

    AND             reduce using rule 44 (Relational_Quad -> .)
    OR              reduce using rule 44 (Relational_Quad -> .)
    EQUAL           reduce using rule 44 (Relational_Quad -> .)
    DIFF            reduce using rule 44 (Relational_Quad -> .)
    PAR_CLOSE       reduce using rule 44 (Relational_Quad -> .)
    SEMICOLON       reduce using rule 44 (Relational_Quad -> .)

    Relational_Quad                shift and go to state 125

state 110

    (42) Relational -> Expression GREATER Push_Greater Expression . Relational_Quad
    (44) Relational_Quad -> .

    AND             reduce using rule 44 (Relational_Quad -> .)
    OR              reduce using rule 44 (Relational_Quad -> .)
    EQUAL           reduce using rule 44 (Relational_Quad -> .)
    DIFF            reduce using rule 44 (Relational_Quad -> .)
    PAR_CLOSE       reduce using rule 44 (Relational_Quad -> .)
    SEMICOLON       reduce using rule 44 (Relational_Quad -> .)

    Relational_Quad                shift and go to state 126

state 111

    (36) Logical_Not -> NOT Push_Not Relational Not_Quad .

    AND             reduce using rule 36 (Logical_Not -> NOT Push_Not Relational Not_Quad .)
    OR              reduce using rule 36 (Logical_Not -> NOT Push_Not Relational Not_Quad .)
    EQUAL           reduce using rule 36 (Logical_Not -> NOT Push_Not Relational Not_Quad .)
    DIFF            reduce using rule 36 (Logical_Not -> NOT Push_Not Relational Not_Quad .)
    SEMICOLON       reduce using rule 36 (Logical_Not -> NOT Push_Not Relational Not_Quad .)
    PAR_CLOSE       reduce using rule 36 (Logical_Not -> NOT Push_Not Relational Not_Quad .)


state 112

    (12) Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON .

    PRINT           reduce using rule 12 (Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON .)
    ID              reduce using rule 12 (Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON .)
    INT             reduce using rule 12 (Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON .)
    FLOAT           reduce using rule 12 (Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON .)
    BOOL            reduce using rule 12 (Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON .)
    STRING          reduce using rule 12 (Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON .)
    CURLYB_CLOSE    reduce using rule 12 (Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON .)


state 113

    (65) Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .

    TIMES_SIGN      reduce using rule 65 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    DIVIDE_SIGN     reduce using rule 65 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    MOD_SIGN        reduce using rule 65 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    PLUS_SIGN       reduce using rule 65 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    MINUS_SIGN      reduce using rule 65 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    LESS            reduce using rule 65 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    LESS_EQUAL      reduce using rule 65 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    GREATER         reduce using rule 65 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    GREATER_EQUAL   reduce using rule 65 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    AND             reduce using rule 65 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    OR              reduce using rule 65 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    EQUAL           reduce using rule 65 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    DIFF            reduce using rule 65 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    PAR_CLOSE       reduce using rule 65 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    SEMICOLON       reduce using rule 65 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)


state 114

    (31) Multiple_Nots -> AND Push_And Logical_Not . And_Quad Multiple_Nots
    (33) And_Quad -> .

    AND             reduce using rule 33 (And_Quad -> .)
    OR              reduce using rule 33 (And_Quad -> .)
    EQUAL           reduce using rule 33 (And_Quad -> .)
    DIFF            reduce using rule 33 (And_Quad -> .)
    PAR_CLOSE       reduce using rule 33 (And_Quad -> .)
    SEMICOLON       reduce using rule 33 (And_Quad -> .)

    And_Quad                       shift and go to state 127

state 115

    (51) Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term . Sum_Sub_Quad Multiple_Terms
    (53) Sum_Sub_Quad -> .

    PLUS_SIGN       reduce using rule 53 (Sum_Sub_Quad -> .)
    MINUS_SIGN      reduce using rule 53 (Sum_Sub_Quad -> .)
    LESS            reduce using rule 53 (Sum_Sub_Quad -> .)
    LESS_EQUAL      reduce using rule 53 (Sum_Sub_Quad -> .)
    GREATER         reduce using rule 53 (Sum_Sub_Quad -> .)
    GREATER_EQUAL   reduce using rule 53 (Sum_Sub_Quad -> .)
    AND             reduce using rule 53 (Sum_Sub_Quad -> .)
    OR              reduce using rule 53 (Sum_Sub_Quad -> .)
    EQUAL           reduce using rule 53 (Sum_Sub_Quad -> .)
    DIFF            reduce using rule 53 (Sum_Sub_Quad -> .)
    PAR_CLOSE       reduce using rule 53 (Sum_Sub_Quad -> .)
    SEMICOLON       reduce using rule 53 (Sum_Sub_Quad -> .)

    Sum_Sub_Quad                   shift and go to state 128

state 116

    (50) Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term . Sum_Sub_Quad Multiple_Terms
    (53) Sum_Sub_Quad -> .

    PLUS_SIGN       reduce using rule 53 (Sum_Sub_Quad -> .)
    MINUS_SIGN      reduce using rule 53 (Sum_Sub_Quad -> .)
    LESS            reduce using rule 53 (Sum_Sub_Quad -> .)
    LESS_EQUAL      reduce using rule 53 (Sum_Sub_Quad -> .)
    GREATER         reduce using rule 53 (Sum_Sub_Quad -> .)
    GREATER_EQUAL   reduce using rule 53 (Sum_Sub_Quad -> .)
    AND             reduce using rule 53 (Sum_Sub_Quad -> .)
    OR              reduce using rule 53 (Sum_Sub_Quad -> .)
    EQUAL           reduce using rule 53 (Sum_Sub_Quad -> .)
    DIFF            reduce using rule 53 (Sum_Sub_Quad -> .)
    PAR_CLOSE       reduce using rule 53 (Sum_Sub_Quad -> .)
    SEMICOLON       reduce using rule 53 (Sum_Sub_Quad -> .)

    Sum_Sub_Quad                   shift and go to state 129

state 117

    (57) Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor . Mult_Div_Mod_Quad Multiple_Factors
    (61) Mult_Div_Mod_Quad -> .

    TIMES_SIGN      reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    DIVIDE_SIGN     reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    MOD_SIGN        reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    PLUS_SIGN       reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    MINUS_SIGN      reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    LESS            reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    LESS_EQUAL      reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    GREATER         reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    GREATER_EQUAL   reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    AND             reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    OR              reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    EQUAL           reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    DIFF            reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    PAR_CLOSE       reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    SEMICOLON       reduce using rule 61 (Mult_Div_Mod_Quad -> .)

    Mult_Div_Mod_Quad              shift and go to state 130

state 118

    (59) Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor . Mult_Div_Mod_Quad Multiple_Factors
    (61) Mult_Div_Mod_Quad -> .

    TIMES_SIGN      reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    DIVIDE_SIGN     reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    MOD_SIGN        reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    PLUS_SIGN       reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    MINUS_SIGN      reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    LESS            reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    LESS_EQUAL      reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    GREATER         reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    GREATER_EQUAL   reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    AND             reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    OR              reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    EQUAL           reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    DIFF            reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    PAR_CLOSE       reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    SEMICOLON       reduce using rule 61 (Mult_Div_Mod_Quad -> .)

    Mult_Div_Mod_Quad              shift and go to state 131

state 119

    (58) Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor . Mult_Div_Mod_Quad Multiple_Factors
    (61) Mult_Div_Mod_Quad -> .

    TIMES_SIGN      reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    DIVIDE_SIGN     reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    MOD_SIGN        reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    PLUS_SIGN       reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    MINUS_SIGN      reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    LESS            reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    LESS_EQUAL      reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    GREATER         reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    GREATER_EQUAL   reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    AND             reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    OR              reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    EQUAL           reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    DIFF            reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    PAR_CLOSE       reduce using rule 61 (Mult_Div_Mod_Quad -> .)
    SEMICOLON       reduce using rule 61 (Mult_Div_Mod_Quad -> .)

    Mult_Div_Mod_Quad              shift and go to state 132

state 120

    (20) Exp -> Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad .

    SEMICOLON       reduce using rule 20 (Exp -> Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad .)
    PAR_CLOSE       reduce using rule 20 (Exp -> Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad .)


state 121

    (21) Exp -> Logical_Or DIFF Push_Diff Logical_Or Equity_Quad .

    SEMICOLON       reduce using rule 21 (Exp -> Logical_Or DIFF Push_Diff Logical_Or Equity_Quad .)
    PAR_CLOSE       reduce using rule 21 (Exp -> Logical_Or DIFF Push_Diff Logical_Or Equity_Quad .)


state 122

    (26) Multiple_Ands -> OR Push_Or Logical_And . Or_Quad Multiple_Ands
    (28) Or_Quad -> .

    OR              reduce using rule 28 (Or_Quad -> .)
    EQUAL           reduce using rule 28 (Or_Quad -> .)
    DIFF            reduce using rule 28 (Or_Quad -> .)
    PAR_CLOSE       reduce using rule 28 (Or_Quad -> .)
    SEMICOLON       reduce using rule 28 (Or_Quad -> .)

    Or_Quad                        shift and go to state 133

state 123

    (40) Relational -> Expression LESS Push_Less Expression Relational_Quad .

    AND             reduce using rule 40 (Relational -> Expression LESS Push_Less Expression Relational_Quad .)
    OR              reduce using rule 40 (Relational -> Expression LESS Push_Less Expression Relational_Quad .)
    EQUAL           reduce using rule 40 (Relational -> Expression LESS Push_Less Expression Relational_Quad .)
    DIFF            reduce using rule 40 (Relational -> Expression LESS Push_Less Expression Relational_Quad .)
    SEMICOLON       reduce using rule 40 (Relational -> Expression LESS Push_Less Expression Relational_Quad .)
    PAR_CLOSE       reduce using rule 40 (Relational -> Expression LESS Push_Less Expression Relational_Quad .)


state 124

    (41) Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad .

    AND             reduce using rule 41 (Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad .)
    OR              reduce using rule 41 (Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad .)
    EQUAL           reduce using rule 41 (Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad .)
    DIFF            reduce using rule 41 (Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad .)
    SEMICOLON       reduce using rule 41 (Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad .)
    PAR_CLOSE       reduce using rule 41 (Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad .)


state 125

    (43) Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad .

    AND             reduce using rule 43 (Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad .)
    OR              reduce using rule 43 (Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad .)
    EQUAL           reduce using rule 43 (Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad .)
    DIFF            reduce using rule 43 (Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad .)
    SEMICOLON       reduce using rule 43 (Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad .)
    PAR_CLOSE       reduce using rule 43 (Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad .)


state 126

    (42) Relational -> Expression GREATER Push_Greater Expression Relational_Quad .

    AND             reduce using rule 42 (Relational -> Expression GREATER Push_Greater Expression Relational_Quad .)
    OR              reduce using rule 42 (Relational -> Expression GREATER Push_Greater Expression Relational_Quad .)
    EQUAL           reduce using rule 42 (Relational -> Expression GREATER Push_Greater Expression Relational_Quad .)
    DIFF            reduce using rule 42 (Relational -> Expression GREATER Push_Greater Expression Relational_Quad .)
    SEMICOLON       reduce using rule 42 (Relational -> Expression GREATER Push_Greater Expression Relational_Quad .)
    PAR_CLOSE       reduce using rule 42 (Relational -> Expression GREATER Push_Greater Expression Relational_Quad .)


state 127

    (31) Multiple_Nots -> AND Push_And Logical_Not And_Quad . Multiple_Nots
    (31) Multiple_Nots -> . AND Push_And Logical_Not And_Quad Multiple_Nots
    (32) Multiple_Nots -> . Epsilon
    (83) Epsilon -> .

    AND             shift and go to state 71
    OR              reduce using rule 83 (Epsilon -> .)
    EQUAL           reduce using rule 83 (Epsilon -> .)
    DIFF            reduce using rule 83 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 83 (Epsilon -> .)
    SEMICOLON       reduce using rule 83 (Epsilon -> .)

    Multiple_Nots                  shift and go to state 134
    Epsilon                        shift and go to state 72

state 128

    (51) Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad . Multiple_Terms
    (50) Multiple_Terms -> . PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms
    (51) Multiple_Terms -> . MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms
    (52) Multiple_Terms -> . Epsilon
    (83) Epsilon -> .

    PLUS_SIGN       shift and go to state 77
    MINUS_SIGN      shift and go to state 76
    LESS            reduce using rule 83 (Epsilon -> .)
    LESS_EQUAL      reduce using rule 83 (Epsilon -> .)
    GREATER         reduce using rule 83 (Epsilon -> .)
    GREATER_EQUAL   reduce using rule 83 (Epsilon -> .)
    AND             reduce using rule 83 (Epsilon -> .)
    OR              reduce using rule 83 (Epsilon -> .)
    EQUAL           reduce using rule 83 (Epsilon -> .)
    DIFF            reduce using rule 83 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 83 (Epsilon -> .)
    SEMICOLON       reduce using rule 83 (Epsilon -> .)

    Multiple_Terms                 shift and go to state 135
    Epsilon                        shift and go to state 75

state 129

    (50) Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad . Multiple_Terms
    (50) Multiple_Terms -> . PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms
    (51) Multiple_Terms -> . MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms
    (52) Multiple_Terms -> . Epsilon
    (83) Epsilon -> .

    PLUS_SIGN       shift and go to state 77
    MINUS_SIGN      shift and go to state 76
    LESS            reduce using rule 83 (Epsilon -> .)
    LESS_EQUAL      reduce using rule 83 (Epsilon -> .)
    GREATER         reduce using rule 83 (Epsilon -> .)
    GREATER_EQUAL   reduce using rule 83 (Epsilon -> .)
    AND             reduce using rule 83 (Epsilon -> .)
    OR              reduce using rule 83 (Epsilon -> .)
    EQUAL           reduce using rule 83 (Epsilon -> .)
    DIFF            reduce using rule 83 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 83 (Epsilon -> .)
    SEMICOLON       reduce using rule 83 (Epsilon -> .)

    Multiple_Terms                 shift and go to state 136
    Epsilon                        shift and go to state 75

state 130

    (57) Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad . Multiple_Factors
    (57) Multiple_Factors -> . TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (58) Multiple_Factors -> . DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (59) Multiple_Factors -> . MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (60) Multiple_Factors -> . Epsilon
    (83) Epsilon -> .

    TIMES_SIGN      shift and go to state 78
    DIVIDE_SIGN     shift and go to state 82
    MOD_SIGN        shift and go to state 79
    PLUS_SIGN       reduce using rule 83 (Epsilon -> .)
    MINUS_SIGN      reduce using rule 83 (Epsilon -> .)
    LESS            reduce using rule 83 (Epsilon -> .)
    LESS_EQUAL      reduce using rule 83 (Epsilon -> .)
    GREATER         reduce using rule 83 (Epsilon -> .)
    GREATER_EQUAL   reduce using rule 83 (Epsilon -> .)
    AND             reduce using rule 83 (Epsilon -> .)
    OR              reduce using rule 83 (Epsilon -> .)
    EQUAL           reduce using rule 83 (Epsilon -> .)
    DIFF            reduce using rule 83 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 83 (Epsilon -> .)
    SEMICOLON       reduce using rule 83 (Epsilon -> .)

    Epsilon                        shift and go to state 80
    Multiple_Factors               shift and go to state 137

state 131

    (59) Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad . Multiple_Factors
    (57) Multiple_Factors -> . TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (58) Multiple_Factors -> . DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (59) Multiple_Factors -> . MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (60) Multiple_Factors -> . Epsilon
    (83) Epsilon -> .

    TIMES_SIGN      shift and go to state 78
    DIVIDE_SIGN     shift and go to state 82
    MOD_SIGN        shift and go to state 79
    PLUS_SIGN       reduce using rule 83 (Epsilon -> .)
    MINUS_SIGN      reduce using rule 83 (Epsilon -> .)
    LESS            reduce using rule 83 (Epsilon -> .)
    LESS_EQUAL      reduce using rule 83 (Epsilon -> .)
    GREATER         reduce using rule 83 (Epsilon -> .)
    GREATER_EQUAL   reduce using rule 83 (Epsilon -> .)
    AND             reduce using rule 83 (Epsilon -> .)
    OR              reduce using rule 83 (Epsilon -> .)
    EQUAL           reduce using rule 83 (Epsilon -> .)
    DIFF            reduce using rule 83 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 83 (Epsilon -> .)
    SEMICOLON       reduce using rule 83 (Epsilon -> .)

    Epsilon                        shift and go to state 80
    Multiple_Factors               shift and go to state 138

state 132

    (58) Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad . Multiple_Factors
    (57) Multiple_Factors -> . TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (58) Multiple_Factors -> . DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (59) Multiple_Factors -> . MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (60) Multiple_Factors -> . Epsilon
    (83) Epsilon -> .

    TIMES_SIGN      shift and go to state 78
    DIVIDE_SIGN     shift and go to state 82
    MOD_SIGN        shift and go to state 79
    PLUS_SIGN       reduce using rule 83 (Epsilon -> .)
    MINUS_SIGN      reduce using rule 83 (Epsilon -> .)
    LESS            reduce using rule 83 (Epsilon -> .)
    LESS_EQUAL      reduce using rule 83 (Epsilon -> .)
    GREATER         reduce using rule 83 (Epsilon -> .)
    GREATER_EQUAL   reduce using rule 83 (Epsilon -> .)
    AND             reduce using rule 83 (Epsilon -> .)
    OR              reduce using rule 83 (Epsilon -> .)
    EQUAL           reduce using rule 83 (Epsilon -> .)
    DIFF            reduce using rule 83 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 83 (Epsilon -> .)
    SEMICOLON       reduce using rule 83 (Epsilon -> .)

    Epsilon                        shift and go to state 80
    Multiple_Factors               shift and go to state 139

state 133

    (26) Multiple_Ands -> OR Push_Or Logical_And Or_Quad . Multiple_Ands
    (26) Multiple_Ands -> . OR Push_Or Logical_And Or_Quad Multiple_Ands
    (27) Multiple_Ands -> . Epsilon
    (83) Epsilon -> .

    OR              shift and go to state 87
    EQUAL           reduce using rule 83 (Epsilon -> .)
    DIFF            reduce using rule 83 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 83 (Epsilon -> .)
    SEMICOLON       reduce using rule 83 (Epsilon -> .)

    Multiple_Ands                  shift and go to state 140
    Epsilon                        shift and go to state 86

state 134

    (31) Multiple_Nots -> AND Push_And Logical_Not And_Quad Multiple_Nots .

    OR              reduce using rule 31 (Multiple_Nots -> AND Push_And Logical_Not And_Quad Multiple_Nots .)
    EQUAL           reduce using rule 31 (Multiple_Nots -> AND Push_And Logical_Not And_Quad Multiple_Nots .)
    DIFF            reduce using rule 31 (Multiple_Nots -> AND Push_And Logical_Not And_Quad Multiple_Nots .)
    PAR_CLOSE       reduce using rule 31 (Multiple_Nots -> AND Push_And Logical_Not And_Quad Multiple_Nots .)
    SEMICOLON       reduce using rule 31 (Multiple_Nots -> AND Push_And Logical_Not And_Quad Multiple_Nots .)


state 135

    (51) Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .

    LESS            reduce using rule 51 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    LESS_EQUAL      reduce using rule 51 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    GREATER         reduce using rule 51 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    GREATER_EQUAL   reduce using rule 51 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    AND             reduce using rule 51 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    OR              reduce using rule 51 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    EQUAL           reduce using rule 51 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    DIFF            reduce using rule 51 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    PAR_CLOSE       reduce using rule 51 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    SEMICOLON       reduce using rule 51 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)


state 136

    (50) Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .

    LESS            reduce using rule 50 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    LESS_EQUAL      reduce using rule 50 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    GREATER         reduce using rule 50 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    GREATER_EQUAL   reduce using rule 50 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    AND             reduce using rule 50 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    OR              reduce using rule 50 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    EQUAL           reduce using rule 50 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    DIFF            reduce using rule 50 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    PAR_CLOSE       reduce using rule 50 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    SEMICOLON       reduce using rule 50 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)


state 137

    (57) Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .

    PLUS_SIGN       reduce using rule 57 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    MINUS_SIGN      reduce using rule 57 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS            reduce using rule 57 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS_EQUAL      reduce using rule 57 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER         reduce using rule 57 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER_EQUAL   reduce using rule 57 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    AND             reduce using rule 57 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    OR              reduce using rule 57 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    EQUAL           reduce using rule 57 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    DIFF            reduce using rule 57 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    PAR_CLOSE       reduce using rule 57 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    SEMICOLON       reduce using rule 57 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)


state 138

    (59) Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .

    PLUS_SIGN       reduce using rule 59 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    MINUS_SIGN      reduce using rule 59 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS            reduce using rule 59 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS_EQUAL      reduce using rule 59 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER         reduce using rule 59 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER_EQUAL   reduce using rule 59 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    AND             reduce using rule 59 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    OR              reduce using rule 59 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    EQUAL           reduce using rule 59 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    DIFF            reduce using rule 59 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    PAR_CLOSE       reduce using rule 59 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    SEMICOLON       reduce using rule 59 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)


state 139

    (58) Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .

    PLUS_SIGN       reduce using rule 58 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    MINUS_SIGN      reduce using rule 58 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS            reduce using rule 58 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS_EQUAL      reduce using rule 58 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER         reduce using rule 58 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER_EQUAL   reduce using rule 58 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    AND             reduce using rule 58 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    OR              reduce using rule 58 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    EQUAL           reduce using rule 58 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    DIFF            reduce using rule 58 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    PAR_CLOSE       reduce using rule 58 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    SEMICOLON       reduce using rule 58 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)


state 140

    (26) Multiple_Ands -> OR Push_Or Logical_And Or_Quad Multiple_Ands .

    EQUAL           reduce using rule 26 (Multiple_Ands -> OR Push_Or Logical_And Or_Quad Multiple_Ands .)
    DIFF            reduce using rule 26 (Multiple_Ands -> OR Push_Or Logical_And Or_Quad Multiple_Ands .)
    PAR_CLOSE       reduce using rule 26 (Multiple_Ands -> OR Push_Or Logical_And Or_Quad Multiple_Ands .)
    SEMICOLON       reduce using rule 26 (Multiple_Ands -> OR Push_Or Logical_And Or_Quad Multiple_Ands .)

