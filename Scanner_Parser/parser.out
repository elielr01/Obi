Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    TRIANGLE
    SQRB_OPEN
    YELLOW
    WHILE
    GREEN
    EIF
    CYAN
    LINE
    RED
    POLYGON
    COMMENT
    GRAY
    POINT
    PURPLE
    SQRB_CLOSE
    COMMA
    ORANGE
    ASSIGN
    ID
    BLOCK_COMMENT
    PINK
    DRAW
    SQUARE
    STRING
    ELSE
    FUNC
    INPUT
    WHITE
    MAGENTA
    RECTANGLE
    IF
    BLUE
    INT
    FLOAT
    BOOL
    BLACK
    CIRCLE

Grammar

Rule 0     S' -> Obi
Rule 1     Obi -> Play
Rule 2     Play -> PLAY Play_Init PAR_OPEN PAR_CLOSE Statements_Block
Rule 3     Play_Init -> <empty>
Rule 4     Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE
Rule 5     Multiple_Statements -> Statement Multiple_Statements
Rule 6     Multiple_Statements -> Epsilon
Rule 7     Statement -> Print
Rule 8     Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON
Rule 9     Exp -> Logical_Or
Rule 10    Exp -> Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad
Rule 11    Exp -> Logical_Or DIFF Push_Diff Logical_Or Equity_Quad
Rule 12    Equity_Quad -> <empty>
Rule 13    Push_Equal -> <empty>
Rule 14    Push_Diff -> <empty>
Rule 15    Logical_Or -> Logical_And Or_Quad Multiple_Ands
Rule 16    Multiple_Ands -> OR Push_Or Logical_And Or_Quad Multiple_Ands
Rule 17    Multiple_Ands -> Epsilon
Rule 18    Or_Quad -> <empty>
Rule 19    Push_Or -> <empty>
Rule 20    Logical_And -> Logical_Not And_Quad Multiple_Nots
Rule 21    Multiple_Nots -> AND Push_And Logical_Not And_Quad Multiple_Nots
Rule 22    Multiple_Nots -> Epsilon
Rule 23    And_Quad -> <empty>
Rule 24    Push_And -> <empty>
Rule 25    Logical_Not -> Relational
Rule 26    Logical_Not -> NOT Push_Not Relational Not_Quad
Rule 27    Not_Quad -> <empty>
Rule 28    Push_Not -> <empty>
Rule 29    Relational -> Expression
Rule 30    Relational -> Expression LESS Push_Less Expression Relational_Quad
Rule 31    Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
Rule 32    Relational -> Expression GREATER Push_Greater Expression Relational_Quad
Rule 33    Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
Rule 34    Relational_Quad -> <empty>
Rule 35    Push_Less -> <empty>
Rule 36    Push_Less_Equal -> <empty>
Rule 37    Push_Greater -> <empty>
Rule 38    Push_Greater_Equal -> <empty>
Rule 39    Expression -> Term Sum_Sub_Quad Multiple_Terms
Rule 40    Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms
Rule 41    Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms
Rule 42    Multiple_Terms -> Epsilon
Rule 43    Sum_Sub_Quad -> <empty>
Rule 44    Push_Plus_Sign -> <empty>
Rule 45    Push_Minus_Sign -> <empty>
Rule 46    Term -> Factor Mult_Div_Mod_Quad Multiple_Factors
Rule 47    Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
Rule 48    Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
Rule 49    Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
Rule 50    Multiple_Factors -> Epsilon
Rule 51    Mult_Div_Mod_Quad -> <empty>
Rule 52    Push_Times_Sign -> <empty>
Rule 53    Push_Divide_Sign -> <empty>
Rule 54    Push_Mod_Sign -> <empty>
Rule 55    Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
Rule 56    Factor -> Var_Cte
Rule 57    Push_False_Bottom -> <empty>
Rule 58    Pop_False_Bottom -> <empty>
Rule 59    Var_Cte -> INT_CONST Save_Int_Const
Rule 60    Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const
Rule 61    Var_Cte -> FLOAT_CONST Save_Float_Const
Rule 62    Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
Rule 63    Var_Cte -> BOOL_CONST Save_Bool_Const
Rule 64    Var_Cte -> STRING_CONST Save_String_Const
Rule 65    Save_Int_Const -> <empty>
Rule 66    Save_Neg_Int_Const -> <empty>
Rule 67    Save_Float_Const -> <empty>
Rule 68    Save_Neg_Float_Const -> <empty>
Rule 69    Save_Bool_Const -> <empty>
Rule 70    Save_String_Const -> <empty>
Rule 71    Epsilon -> <empty>

Terminals, with rules where they appear

AND                  : 21
ASSIGN               : 
BLACK                : 
BLOCK_COMMENT        : 
BLUE                 : 
BOOL                 : 
BOOL_CONST           : 63
CIRCLE               : 
COMMA                : 
COMMENT              : 
CURLYB_CLOSE         : 4
CURLYB_OPEN          : 4
CYAN                 : 
DIFF                 : 11
DIVIDE_SIGN          : 48
DRAW                 : 
EIF                  : 
ELSE                 : 
EQUAL                : 10
FLOAT                : 
FLOAT_CONST          : 61 62
FUNC                 : 
GRAY                 : 
GREATER              : 32
GREATER_EQUAL        : 33
GREEN                : 
ID                   : 
IF                   : 
INPUT                : 
INT                  : 
INT_CONST            : 59 60
LESS                 : 30
LESS_EQUAL           : 31
LINE                 : 
MAGENTA              : 
MINUS_SIGN           : 41 60 62
MOD_SIGN             : 49
NOT                  : 26
OR                   : 16
ORANGE               : 
PAR_CLOSE            : 2 8 55
PAR_OPEN             : 2 8 55
PINK                 : 
PLAY                 : 2
PLUS_SIGN            : 40
POINT                : 
POLYGON              : 
PRINT                : 8
PURPLE               : 
RECTANGLE            : 
RED                  : 
SEMICOLON            : 8
SQRB_CLOSE           : 
SQRB_OPEN            : 
SQUARE               : 
STRING               : 
STRING_CONST         : 64
TIMES_SIGN           : 47
TRIANGLE             : 
WHILE                : 
WHITE                : 
YELLOW               : 
error                : 

Nonterminals, with rules where they appear

And_Quad             : 20 21
Epsilon              : 6 17 22 42 50
Equity_Quad          : 10 11
Exp                  : 8 55
Expression           : 29 30 30 31 31 32 32 33 33
Factor               : 46 47 48 49
Logical_And          : 15 16
Logical_Not          : 20 21
Logical_Or           : 9 10 10 11 11
Mult_Div_Mod_Quad    : 46 47 48 49
Multiple_Ands        : 15 16
Multiple_Factors     : 46 47 48 49
Multiple_Nots        : 20 21
Multiple_Statements  : 4 5
Multiple_Terms       : 39 40 41
Not_Quad             : 26
Obi                  : 0
Or_Quad              : 15 16
Play                 : 1
Play_Init            : 2
Pop_False_Bottom     : 55
Print                : 7
Push_And             : 21
Push_Diff            : 11
Push_Divide_Sign     : 48
Push_Equal           : 10
Push_False_Bottom    : 55
Push_Greater         : 32
Push_Greater_Equal   : 33
Push_Less            : 30
Push_Less_Equal      : 31
Push_Minus_Sign      : 41
Push_Mod_Sign        : 49
Push_Not             : 26
Push_Or              : 16
Push_Plus_Sign       : 40
Push_Times_Sign      : 47
Relational           : 25 26
Relational_Quad      : 30 31 32 33
Save_Bool_Const      : 63
Save_Float_Const     : 61
Save_Int_Const       : 59
Save_Neg_Float_Const : 62
Save_Neg_Int_Const   : 60
Save_String_Const    : 64
Statement            : 5
Statements_Block     : 2
Sum_Sub_Quad         : 39 40 41
Term                 : 39 40 41
Var_Cte              : 56

Parsing method: LALR

state 0

    (0) S' -> . Obi
    (1) Obi -> . Play
    (2) Play -> . PLAY Play_Init PAR_OPEN PAR_CLOSE Statements_Block

    PLAY            shift and go to state 3

    Play                           shift and go to state 1
    Obi                            shift and go to state 2

state 1

    (1) Obi -> Play .

    $end            reduce using rule 1 (Obi -> Play .)


state 2

    (0) S' -> Obi .



state 3

    (2) Play -> PLAY . Play_Init PAR_OPEN PAR_CLOSE Statements_Block
    (3) Play_Init -> .

    PAR_OPEN        reduce using rule 3 (Play_Init -> .)

    Play_Init                      shift and go to state 4

state 4

    (2) Play -> PLAY Play_Init . PAR_OPEN PAR_CLOSE Statements_Block

    PAR_OPEN        shift and go to state 5


state 5

    (2) Play -> PLAY Play_Init PAR_OPEN . PAR_CLOSE Statements_Block

    PAR_CLOSE       shift and go to state 6


state 6

    (2) Play -> PLAY Play_Init PAR_OPEN PAR_CLOSE . Statements_Block
    (4) Statements_Block -> . CURLYB_OPEN Multiple_Statements CURLYB_CLOSE

    CURLYB_OPEN     shift and go to state 8

    Statements_Block               shift and go to state 7

state 7

    (2) Play -> PLAY Play_Init PAR_OPEN PAR_CLOSE Statements_Block .

    $end            reduce using rule 2 (Play -> PLAY Play_Init PAR_OPEN PAR_CLOSE Statements_Block .)


state 8

    (4) Statements_Block -> CURLYB_OPEN . Multiple_Statements CURLYB_CLOSE
    (5) Multiple_Statements -> . Statement Multiple_Statements
    (6) Multiple_Statements -> . Epsilon
    (7) Statement -> . Print
    (71) Epsilon -> .
    (8) Print -> . PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON

    CURLYB_CLOSE    reduce using rule 71 (Epsilon -> .)
    PRINT           shift and go to state 11

    Print                          shift and go to state 13
    Epsilon                        shift and go to state 10
    Multiple_Statements            shift and go to state 9
    Statement                      shift and go to state 12

state 9

    (4) Statements_Block -> CURLYB_OPEN Multiple_Statements . CURLYB_CLOSE

    CURLYB_CLOSE    shift and go to state 14


state 10

    (6) Multiple_Statements -> Epsilon .

    CURLYB_CLOSE    reduce using rule 6 (Multiple_Statements -> Epsilon .)


state 11

    (8) Print -> PRINT . PAR_OPEN Exp PAR_CLOSE SEMICOLON

    PAR_OPEN        shift and go to state 15


state 12

    (5) Multiple_Statements -> Statement . Multiple_Statements
    (5) Multiple_Statements -> . Statement Multiple_Statements
    (6) Multiple_Statements -> . Epsilon
    (7) Statement -> . Print
    (71) Epsilon -> .
    (8) Print -> . PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON

    CURLYB_CLOSE    reduce using rule 71 (Epsilon -> .)
    PRINT           shift and go to state 11

    Print                          shift and go to state 13
    Epsilon                        shift and go to state 10
    Multiple_Statements            shift and go to state 16
    Statement                      shift and go to state 12

state 13

    (7) Statement -> Print .

    PRINT           reduce using rule 7 (Statement -> Print .)
    CURLYB_CLOSE    reduce using rule 7 (Statement -> Print .)


state 14

    (4) Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE .

    $end            reduce using rule 4 (Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE .)


state 15

    (8) Print -> PRINT PAR_OPEN . Exp PAR_CLOSE SEMICOLON
    (9) Exp -> . Logical_Or
    (10) Exp -> . Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad
    (11) Exp -> . Logical_Or DIFF Push_Diff Logical_Or Equity_Quad
    (15) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (20) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (25) Logical_Not -> . Relational
    (26) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (29) Relational -> . Expression
    (30) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (31) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (32) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (33) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (39) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (46) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (55) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (56) Factor -> . Var_Cte
    (59) Var_Cte -> . INT_CONST Save_Int_Const
    (60) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (61) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (62) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (63) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (64) Var_Cte -> . STRING_CONST Save_String_Const

    NOT             shift and go to state 32
    PAR_OPEN        shift and go to state 17
    INT_CONST       shift and go to state 21
    MINUS_SIGN      shift and go to state 31
    FLOAT_CONST     shift and go to state 18
    BOOL_CONST      shift and go to state 23
    STRING_CONST    shift and go to state 20

    Factor                         shift and go to state 25
    Relational                     shift and go to state 19
    Logical_Not                    shift and go to state 22
    Term                           shift and go to state 24
    Var_Cte                        shift and go to state 26
    Logical_Or                     shift and go to state 27
    Logical_And                    shift and go to state 28
    Exp                            shift and go to state 29
    Expression                     shift and go to state 30

state 16

    (5) Multiple_Statements -> Statement Multiple_Statements .

    CURLYB_CLOSE    reduce using rule 5 (Multiple_Statements -> Statement Multiple_Statements .)


state 17

    (55) Factor -> PAR_OPEN . Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (57) Push_False_Bottom -> .

    NOT             reduce using rule 57 (Push_False_Bottom -> .)
    PAR_OPEN        reduce using rule 57 (Push_False_Bottom -> .)
    INT_CONST       reduce using rule 57 (Push_False_Bottom -> .)
    MINUS_SIGN      reduce using rule 57 (Push_False_Bottom -> .)
    FLOAT_CONST     reduce using rule 57 (Push_False_Bottom -> .)
    BOOL_CONST      reduce using rule 57 (Push_False_Bottom -> .)
    STRING_CONST    reduce using rule 57 (Push_False_Bottom -> .)

    Push_False_Bottom              shift and go to state 33

state 18

    (61) Var_Cte -> FLOAT_CONST . Save_Float_Const
    (67) Save_Float_Const -> .

    TIMES_SIGN      reduce using rule 67 (Save_Float_Const -> .)
    DIVIDE_SIGN     reduce using rule 67 (Save_Float_Const -> .)
    MOD_SIGN        reduce using rule 67 (Save_Float_Const -> .)
    PLUS_SIGN       reduce using rule 67 (Save_Float_Const -> .)
    MINUS_SIGN      reduce using rule 67 (Save_Float_Const -> .)
    LESS            reduce using rule 67 (Save_Float_Const -> .)
    LESS_EQUAL      reduce using rule 67 (Save_Float_Const -> .)
    GREATER         reduce using rule 67 (Save_Float_Const -> .)
    GREATER_EQUAL   reduce using rule 67 (Save_Float_Const -> .)
    AND             reduce using rule 67 (Save_Float_Const -> .)
    OR              reduce using rule 67 (Save_Float_Const -> .)
    EQUAL           reduce using rule 67 (Save_Float_Const -> .)
    DIFF            reduce using rule 67 (Save_Float_Const -> .)
    PAR_CLOSE       reduce using rule 67 (Save_Float_Const -> .)

    Save_Float_Const               shift and go to state 34

state 19

    (25) Logical_Not -> Relational .

    AND             reduce using rule 25 (Logical_Not -> Relational .)
    OR              reduce using rule 25 (Logical_Not -> Relational .)
    EQUAL           reduce using rule 25 (Logical_Not -> Relational .)
    DIFF            reduce using rule 25 (Logical_Not -> Relational .)
    PAR_CLOSE       reduce using rule 25 (Logical_Not -> Relational .)


state 20

    (64) Var_Cte -> STRING_CONST . Save_String_Const
    (70) Save_String_Const -> .

    TIMES_SIGN      reduce using rule 70 (Save_String_Const -> .)
    DIVIDE_SIGN     reduce using rule 70 (Save_String_Const -> .)
    MOD_SIGN        reduce using rule 70 (Save_String_Const -> .)
    PLUS_SIGN       reduce using rule 70 (Save_String_Const -> .)
    MINUS_SIGN      reduce using rule 70 (Save_String_Const -> .)
    LESS            reduce using rule 70 (Save_String_Const -> .)
    LESS_EQUAL      reduce using rule 70 (Save_String_Const -> .)
    GREATER         reduce using rule 70 (Save_String_Const -> .)
    GREATER_EQUAL   reduce using rule 70 (Save_String_Const -> .)
    AND             reduce using rule 70 (Save_String_Const -> .)
    OR              reduce using rule 70 (Save_String_Const -> .)
    EQUAL           reduce using rule 70 (Save_String_Const -> .)
    DIFF            reduce using rule 70 (Save_String_Const -> .)
    PAR_CLOSE       reduce using rule 70 (Save_String_Const -> .)

    Save_String_Const              shift and go to state 35

state 21

    (59) Var_Cte -> INT_CONST . Save_Int_Const
    (65) Save_Int_Const -> .

    TIMES_SIGN      reduce using rule 65 (Save_Int_Const -> .)
    DIVIDE_SIGN     reduce using rule 65 (Save_Int_Const -> .)
    MOD_SIGN        reduce using rule 65 (Save_Int_Const -> .)
    PLUS_SIGN       reduce using rule 65 (Save_Int_Const -> .)
    MINUS_SIGN      reduce using rule 65 (Save_Int_Const -> .)
    LESS            reduce using rule 65 (Save_Int_Const -> .)
    LESS_EQUAL      reduce using rule 65 (Save_Int_Const -> .)
    GREATER         reduce using rule 65 (Save_Int_Const -> .)
    GREATER_EQUAL   reduce using rule 65 (Save_Int_Const -> .)
    AND             reduce using rule 65 (Save_Int_Const -> .)
    OR              reduce using rule 65 (Save_Int_Const -> .)
    EQUAL           reduce using rule 65 (Save_Int_Const -> .)
    DIFF            reduce using rule 65 (Save_Int_Const -> .)
    PAR_CLOSE       reduce using rule 65 (Save_Int_Const -> .)

    Save_Int_Const                 shift and go to state 36

state 22

    (20) Logical_And -> Logical_Not . And_Quad Multiple_Nots
    (23) And_Quad -> .

    AND             reduce using rule 23 (And_Quad -> .)
    OR              reduce using rule 23 (And_Quad -> .)
    EQUAL           reduce using rule 23 (And_Quad -> .)
    DIFF            reduce using rule 23 (And_Quad -> .)
    PAR_CLOSE       reduce using rule 23 (And_Quad -> .)

    And_Quad                       shift and go to state 37

state 23

    (63) Var_Cte -> BOOL_CONST . Save_Bool_Const
    (69) Save_Bool_Const -> .

    TIMES_SIGN      reduce using rule 69 (Save_Bool_Const -> .)
    DIVIDE_SIGN     reduce using rule 69 (Save_Bool_Const -> .)
    MOD_SIGN        reduce using rule 69 (Save_Bool_Const -> .)
    PLUS_SIGN       reduce using rule 69 (Save_Bool_Const -> .)
    MINUS_SIGN      reduce using rule 69 (Save_Bool_Const -> .)
    LESS            reduce using rule 69 (Save_Bool_Const -> .)
    LESS_EQUAL      reduce using rule 69 (Save_Bool_Const -> .)
    GREATER         reduce using rule 69 (Save_Bool_Const -> .)
    GREATER_EQUAL   reduce using rule 69 (Save_Bool_Const -> .)
    AND             reduce using rule 69 (Save_Bool_Const -> .)
    OR              reduce using rule 69 (Save_Bool_Const -> .)
    EQUAL           reduce using rule 69 (Save_Bool_Const -> .)
    DIFF            reduce using rule 69 (Save_Bool_Const -> .)
    PAR_CLOSE       reduce using rule 69 (Save_Bool_Const -> .)

    Save_Bool_Const                shift and go to state 38

state 24

    (39) Expression -> Term . Sum_Sub_Quad Multiple_Terms
    (43) Sum_Sub_Quad -> .

    PLUS_SIGN       reduce using rule 43 (Sum_Sub_Quad -> .)
    MINUS_SIGN      reduce using rule 43 (Sum_Sub_Quad -> .)
    LESS            reduce using rule 43 (Sum_Sub_Quad -> .)
    LESS_EQUAL      reduce using rule 43 (Sum_Sub_Quad -> .)
    GREATER         reduce using rule 43 (Sum_Sub_Quad -> .)
    GREATER_EQUAL   reduce using rule 43 (Sum_Sub_Quad -> .)
    AND             reduce using rule 43 (Sum_Sub_Quad -> .)
    OR              reduce using rule 43 (Sum_Sub_Quad -> .)
    EQUAL           reduce using rule 43 (Sum_Sub_Quad -> .)
    DIFF            reduce using rule 43 (Sum_Sub_Quad -> .)
    PAR_CLOSE       reduce using rule 43 (Sum_Sub_Quad -> .)

    Sum_Sub_Quad                   shift and go to state 39

state 25

    (46) Term -> Factor . Mult_Div_Mod_Quad Multiple_Factors
    (51) Mult_Div_Mod_Quad -> .

    TIMES_SIGN      reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    DIVIDE_SIGN     reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    MOD_SIGN        reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    PLUS_SIGN       reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    MINUS_SIGN      reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    LESS            reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    LESS_EQUAL      reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    GREATER         reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    GREATER_EQUAL   reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    AND             reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    OR              reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    EQUAL           reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    DIFF            reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    PAR_CLOSE       reduce using rule 51 (Mult_Div_Mod_Quad -> .)

    Mult_Div_Mod_Quad              shift and go to state 40

state 26

    (56) Factor -> Var_Cte .

    TIMES_SIGN      reduce using rule 56 (Factor -> Var_Cte .)
    DIVIDE_SIGN     reduce using rule 56 (Factor -> Var_Cte .)
    MOD_SIGN        reduce using rule 56 (Factor -> Var_Cte .)
    PLUS_SIGN       reduce using rule 56 (Factor -> Var_Cte .)
    MINUS_SIGN      reduce using rule 56 (Factor -> Var_Cte .)
    LESS            reduce using rule 56 (Factor -> Var_Cte .)
    LESS_EQUAL      reduce using rule 56 (Factor -> Var_Cte .)
    GREATER         reduce using rule 56 (Factor -> Var_Cte .)
    GREATER_EQUAL   reduce using rule 56 (Factor -> Var_Cte .)
    AND             reduce using rule 56 (Factor -> Var_Cte .)
    OR              reduce using rule 56 (Factor -> Var_Cte .)
    EQUAL           reduce using rule 56 (Factor -> Var_Cte .)
    DIFF            reduce using rule 56 (Factor -> Var_Cte .)
    PAR_CLOSE       reduce using rule 56 (Factor -> Var_Cte .)


state 27

    (9) Exp -> Logical_Or .
    (10) Exp -> Logical_Or . EQUAL Push_Equal Logical_Or Equity_Quad
    (11) Exp -> Logical_Or . DIFF Push_Diff Logical_Or Equity_Quad

    PAR_CLOSE       reduce using rule 9 (Exp -> Logical_Or .)
    EQUAL           shift and go to state 41
    DIFF            shift and go to state 42


state 28

    (15) Logical_Or -> Logical_And . Or_Quad Multiple_Ands
    (18) Or_Quad -> .

    OR              reduce using rule 18 (Or_Quad -> .)
    EQUAL           reduce using rule 18 (Or_Quad -> .)
    DIFF            reduce using rule 18 (Or_Quad -> .)
    PAR_CLOSE       reduce using rule 18 (Or_Quad -> .)

    Or_Quad                        shift and go to state 43

state 29

    (8) Print -> PRINT PAR_OPEN Exp . PAR_CLOSE SEMICOLON

    PAR_CLOSE       shift and go to state 44


state 30

    (29) Relational -> Expression .
    (30) Relational -> Expression . LESS Push_Less Expression Relational_Quad
    (31) Relational -> Expression . LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (32) Relational -> Expression . GREATER Push_Greater Expression Relational_Quad
    (33) Relational -> Expression . GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad

    AND             reduce using rule 29 (Relational -> Expression .)
    OR              reduce using rule 29 (Relational -> Expression .)
    EQUAL           reduce using rule 29 (Relational -> Expression .)
    DIFF            reduce using rule 29 (Relational -> Expression .)
    PAR_CLOSE       reduce using rule 29 (Relational -> Expression .)
    LESS            shift and go to state 45
    LESS_EQUAL      shift and go to state 46
    GREATER         shift and go to state 48
    GREATER_EQUAL   shift and go to state 47


state 31

    (60) Var_Cte -> MINUS_SIGN . INT_CONST Save_Neg_Int_Const
    (62) Var_Cte -> MINUS_SIGN . FLOAT_CONST Save_Neg_Float_Const

    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50


state 32

    (26) Logical_Not -> NOT . Push_Not Relational Not_Quad
    (28) Push_Not -> .

    PAR_OPEN        reduce using rule 28 (Push_Not -> .)
    INT_CONST       reduce using rule 28 (Push_Not -> .)
    MINUS_SIGN      reduce using rule 28 (Push_Not -> .)
    FLOAT_CONST     reduce using rule 28 (Push_Not -> .)
    BOOL_CONST      reduce using rule 28 (Push_Not -> .)
    STRING_CONST    reduce using rule 28 (Push_Not -> .)

    Push_Not                       shift and go to state 51

state 33

    (55) Factor -> PAR_OPEN Push_False_Bottom . Exp PAR_CLOSE Pop_False_Bottom
    (9) Exp -> . Logical_Or
    (10) Exp -> . Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad
    (11) Exp -> . Logical_Or DIFF Push_Diff Logical_Or Equity_Quad
    (15) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (20) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (25) Logical_Not -> . Relational
    (26) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (29) Relational -> . Expression
    (30) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (31) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (32) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (33) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (39) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (46) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (55) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (56) Factor -> . Var_Cte
    (59) Var_Cte -> . INT_CONST Save_Int_Const
    (60) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (61) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (62) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (63) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (64) Var_Cte -> . STRING_CONST Save_String_Const

    NOT             shift and go to state 32
    PAR_OPEN        shift and go to state 17
    INT_CONST       shift and go to state 21
    MINUS_SIGN      shift and go to state 31
    FLOAT_CONST     shift and go to state 18
    BOOL_CONST      shift and go to state 23
    STRING_CONST    shift and go to state 20

    Factor                         shift and go to state 25
    Relational                     shift and go to state 19
    Logical_Not                    shift and go to state 22
    Term                           shift and go to state 24
    Var_Cte                        shift and go to state 26
    Logical_Or                     shift and go to state 27
    Logical_And                    shift and go to state 28
    Exp                            shift and go to state 52
    Expression                     shift and go to state 30

state 34

    (61) Var_Cte -> FLOAT_CONST Save_Float_Const .

    TIMES_SIGN      reduce using rule 61 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    DIVIDE_SIGN     reduce using rule 61 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    MOD_SIGN        reduce using rule 61 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    PLUS_SIGN       reduce using rule 61 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    MINUS_SIGN      reduce using rule 61 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    LESS            reduce using rule 61 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    LESS_EQUAL      reduce using rule 61 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    GREATER         reduce using rule 61 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    GREATER_EQUAL   reduce using rule 61 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    AND             reduce using rule 61 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    OR              reduce using rule 61 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    PAR_CLOSE       reduce using rule 61 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    EQUAL           reduce using rule 61 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    DIFF            reduce using rule 61 (Var_Cte -> FLOAT_CONST Save_Float_Const .)


state 35

    (64) Var_Cte -> STRING_CONST Save_String_Const .

    TIMES_SIGN      reduce using rule 64 (Var_Cte -> STRING_CONST Save_String_Const .)
    DIVIDE_SIGN     reduce using rule 64 (Var_Cte -> STRING_CONST Save_String_Const .)
    MOD_SIGN        reduce using rule 64 (Var_Cte -> STRING_CONST Save_String_Const .)
    PLUS_SIGN       reduce using rule 64 (Var_Cte -> STRING_CONST Save_String_Const .)
    MINUS_SIGN      reduce using rule 64 (Var_Cte -> STRING_CONST Save_String_Const .)
    LESS            reduce using rule 64 (Var_Cte -> STRING_CONST Save_String_Const .)
    LESS_EQUAL      reduce using rule 64 (Var_Cte -> STRING_CONST Save_String_Const .)
    GREATER         reduce using rule 64 (Var_Cte -> STRING_CONST Save_String_Const .)
    GREATER_EQUAL   reduce using rule 64 (Var_Cte -> STRING_CONST Save_String_Const .)
    AND             reduce using rule 64 (Var_Cte -> STRING_CONST Save_String_Const .)
    OR              reduce using rule 64 (Var_Cte -> STRING_CONST Save_String_Const .)
    PAR_CLOSE       reduce using rule 64 (Var_Cte -> STRING_CONST Save_String_Const .)
    EQUAL           reduce using rule 64 (Var_Cte -> STRING_CONST Save_String_Const .)
    DIFF            reduce using rule 64 (Var_Cte -> STRING_CONST Save_String_Const .)


state 36

    (59) Var_Cte -> INT_CONST Save_Int_Const .

    TIMES_SIGN      reduce using rule 59 (Var_Cte -> INT_CONST Save_Int_Const .)
    DIVIDE_SIGN     reduce using rule 59 (Var_Cte -> INT_CONST Save_Int_Const .)
    MOD_SIGN        reduce using rule 59 (Var_Cte -> INT_CONST Save_Int_Const .)
    PLUS_SIGN       reduce using rule 59 (Var_Cte -> INT_CONST Save_Int_Const .)
    MINUS_SIGN      reduce using rule 59 (Var_Cte -> INT_CONST Save_Int_Const .)
    LESS            reduce using rule 59 (Var_Cte -> INT_CONST Save_Int_Const .)
    LESS_EQUAL      reduce using rule 59 (Var_Cte -> INT_CONST Save_Int_Const .)
    GREATER         reduce using rule 59 (Var_Cte -> INT_CONST Save_Int_Const .)
    GREATER_EQUAL   reduce using rule 59 (Var_Cte -> INT_CONST Save_Int_Const .)
    AND             reduce using rule 59 (Var_Cte -> INT_CONST Save_Int_Const .)
    OR              reduce using rule 59 (Var_Cte -> INT_CONST Save_Int_Const .)
    PAR_CLOSE       reduce using rule 59 (Var_Cte -> INT_CONST Save_Int_Const .)
    EQUAL           reduce using rule 59 (Var_Cte -> INT_CONST Save_Int_Const .)
    DIFF            reduce using rule 59 (Var_Cte -> INT_CONST Save_Int_Const .)


state 37

    (20) Logical_And -> Logical_Not And_Quad . Multiple_Nots
    (21) Multiple_Nots -> . AND Push_And Logical_Not And_Quad Multiple_Nots
    (22) Multiple_Nots -> . Epsilon
    (71) Epsilon -> .

    AND             shift and go to state 53
    OR              reduce using rule 71 (Epsilon -> .)
    EQUAL           reduce using rule 71 (Epsilon -> .)
    DIFF            reduce using rule 71 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 71 (Epsilon -> .)

    Multiple_Nots                  shift and go to state 55
    Epsilon                        shift and go to state 54

state 38

    (63) Var_Cte -> BOOL_CONST Save_Bool_Const .

    TIMES_SIGN      reduce using rule 63 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    DIVIDE_SIGN     reduce using rule 63 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    MOD_SIGN        reduce using rule 63 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    PLUS_SIGN       reduce using rule 63 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    MINUS_SIGN      reduce using rule 63 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    LESS            reduce using rule 63 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    LESS_EQUAL      reduce using rule 63 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    GREATER         reduce using rule 63 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    GREATER_EQUAL   reduce using rule 63 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    AND             reduce using rule 63 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    OR              reduce using rule 63 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    PAR_CLOSE       reduce using rule 63 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    EQUAL           reduce using rule 63 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    DIFF            reduce using rule 63 (Var_Cte -> BOOL_CONST Save_Bool_Const .)


state 39

    (39) Expression -> Term Sum_Sub_Quad . Multiple_Terms
    (40) Multiple_Terms -> . PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms
    (41) Multiple_Terms -> . MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms
    (42) Multiple_Terms -> . Epsilon
    (71) Epsilon -> .

    PLUS_SIGN       shift and go to state 59
    MINUS_SIGN      shift and go to state 58
    LESS            reduce using rule 71 (Epsilon -> .)
    LESS_EQUAL      reduce using rule 71 (Epsilon -> .)
    GREATER         reduce using rule 71 (Epsilon -> .)
    GREATER_EQUAL   reduce using rule 71 (Epsilon -> .)
    AND             reduce using rule 71 (Epsilon -> .)
    OR              reduce using rule 71 (Epsilon -> .)
    EQUAL           reduce using rule 71 (Epsilon -> .)
    DIFF            reduce using rule 71 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 71 (Epsilon -> .)

    Multiple_Terms                 shift and go to state 56
    Epsilon                        shift and go to state 57

state 40

    (46) Term -> Factor Mult_Div_Mod_Quad . Multiple_Factors
    (47) Multiple_Factors -> . TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (48) Multiple_Factors -> . DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (49) Multiple_Factors -> . MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (50) Multiple_Factors -> . Epsilon
    (71) Epsilon -> .

    TIMES_SIGN      shift and go to state 60
    DIVIDE_SIGN     shift and go to state 64
    MOD_SIGN        shift and go to state 61
    PLUS_SIGN       reduce using rule 71 (Epsilon -> .)
    MINUS_SIGN      reduce using rule 71 (Epsilon -> .)
    LESS            reduce using rule 71 (Epsilon -> .)
    LESS_EQUAL      reduce using rule 71 (Epsilon -> .)
    GREATER         reduce using rule 71 (Epsilon -> .)
    GREATER_EQUAL   reduce using rule 71 (Epsilon -> .)
    AND             reduce using rule 71 (Epsilon -> .)
    OR              reduce using rule 71 (Epsilon -> .)
    EQUAL           reduce using rule 71 (Epsilon -> .)
    DIFF            reduce using rule 71 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 71 (Epsilon -> .)

    Epsilon                        shift and go to state 62
    Multiple_Factors               shift and go to state 63

state 41

    (10) Exp -> Logical_Or EQUAL . Push_Equal Logical_Or Equity_Quad
    (13) Push_Equal -> .

    NOT             reduce using rule 13 (Push_Equal -> .)
    PAR_OPEN        reduce using rule 13 (Push_Equal -> .)
    INT_CONST       reduce using rule 13 (Push_Equal -> .)
    MINUS_SIGN      reduce using rule 13 (Push_Equal -> .)
    FLOAT_CONST     reduce using rule 13 (Push_Equal -> .)
    BOOL_CONST      reduce using rule 13 (Push_Equal -> .)
    STRING_CONST    reduce using rule 13 (Push_Equal -> .)

    Push_Equal                     shift and go to state 65

state 42

    (11) Exp -> Logical_Or DIFF . Push_Diff Logical_Or Equity_Quad
    (14) Push_Diff -> .

    NOT             reduce using rule 14 (Push_Diff -> .)
    PAR_OPEN        reduce using rule 14 (Push_Diff -> .)
    INT_CONST       reduce using rule 14 (Push_Diff -> .)
    MINUS_SIGN      reduce using rule 14 (Push_Diff -> .)
    FLOAT_CONST     reduce using rule 14 (Push_Diff -> .)
    BOOL_CONST      reduce using rule 14 (Push_Diff -> .)
    STRING_CONST    reduce using rule 14 (Push_Diff -> .)

    Push_Diff                      shift and go to state 66

state 43

    (15) Logical_Or -> Logical_And Or_Quad . Multiple_Ands
    (16) Multiple_Ands -> . OR Push_Or Logical_And Or_Quad Multiple_Ands
    (17) Multiple_Ands -> . Epsilon
    (71) Epsilon -> .

    OR              shift and go to state 69
    EQUAL           reduce using rule 71 (Epsilon -> .)
    DIFF            reduce using rule 71 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 71 (Epsilon -> .)

    Multiple_Ands                  shift and go to state 67
    Epsilon                        shift and go to state 68

state 44

    (8) Print -> PRINT PAR_OPEN Exp PAR_CLOSE . SEMICOLON

    SEMICOLON       shift and go to state 70


state 45

    (30) Relational -> Expression LESS . Push_Less Expression Relational_Quad
    (35) Push_Less -> .

    PAR_OPEN        reduce using rule 35 (Push_Less -> .)
    INT_CONST       reduce using rule 35 (Push_Less -> .)
    MINUS_SIGN      reduce using rule 35 (Push_Less -> .)
    FLOAT_CONST     reduce using rule 35 (Push_Less -> .)
    BOOL_CONST      reduce using rule 35 (Push_Less -> .)
    STRING_CONST    reduce using rule 35 (Push_Less -> .)

    Push_Less                      shift and go to state 71

state 46

    (31) Relational -> Expression LESS_EQUAL . Push_Less_Equal Expression Relational_Quad
    (36) Push_Less_Equal -> .

    PAR_OPEN        reduce using rule 36 (Push_Less_Equal -> .)
    INT_CONST       reduce using rule 36 (Push_Less_Equal -> .)
    MINUS_SIGN      reduce using rule 36 (Push_Less_Equal -> .)
    FLOAT_CONST     reduce using rule 36 (Push_Less_Equal -> .)
    BOOL_CONST      reduce using rule 36 (Push_Less_Equal -> .)
    STRING_CONST    reduce using rule 36 (Push_Less_Equal -> .)

    Push_Less_Equal                shift and go to state 72

state 47

    (33) Relational -> Expression GREATER_EQUAL . Push_Greater_Equal Expression Relational_Quad
    (38) Push_Greater_Equal -> .

    PAR_OPEN        reduce using rule 38 (Push_Greater_Equal -> .)
    INT_CONST       reduce using rule 38 (Push_Greater_Equal -> .)
    MINUS_SIGN      reduce using rule 38 (Push_Greater_Equal -> .)
    FLOAT_CONST     reduce using rule 38 (Push_Greater_Equal -> .)
    BOOL_CONST      reduce using rule 38 (Push_Greater_Equal -> .)
    STRING_CONST    reduce using rule 38 (Push_Greater_Equal -> .)

    Push_Greater_Equal             shift and go to state 73

state 48

    (32) Relational -> Expression GREATER . Push_Greater Expression Relational_Quad
    (37) Push_Greater -> .

    PAR_OPEN        reduce using rule 37 (Push_Greater -> .)
    INT_CONST       reduce using rule 37 (Push_Greater -> .)
    MINUS_SIGN      reduce using rule 37 (Push_Greater -> .)
    FLOAT_CONST     reduce using rule 37 (Push_Greater -> .)
    BOOL_CONST      reduce using rule 37 (Push_Greater -> .)
    STRING_CONST    reduce using rule 37 (Push_Greater -> .)

    Push_Greater                   shift and go to state 74

state 49

    (60) Var_Cte -> MINUS_SIGN INT_CONST . Save_Neg_Int_Const
    (66) Save_Neg_Int_Const -> .

    TIMES_SIGN      reduce using rule 66 (Save_Neg_Int_Const -> .)
    DIVIDE_SIGN     reduce using rule 66 (Save_Neg_Int_Const -> .)
    MOD_SIGN        reduce using rule 66 (Save_Neg_Int_Const -> .)
    PLUS_SIGN       reduce using rule 66 (Save_Neg_Int_Const -> .)
    MINUS_SIGN      reduce using rule 66 (Save_Neg_Int_Const -> .)
    LESS            reduce using rule 66 (Save_Neg_Int_Const -> .)
    LESS_EQUAL      reduce using rule 66 (Save_Neg_Int_Const -> .)
    GREATER         reduce using rule 66 (Save_Neg_Int_Const -> .)
    GREATER_EQUAL   reduce using rule 66 (Save_Neg_Int_Const -> .)
    AND             reduce using rule 66 (Save_Neg_Int_Const -> .)
    OR              reduce using rule 66 (Save_Neg_Int_Const -> .)
    EQUAL           reduce using rule 66 (Save_Neg_Int_Const -> .)
    DIFF            reduce using rule 66 (Save_Neg_Int_Const -> .)
    PAR_CLOSE       reduce using rule 66 (Save_Neg_Int_Const -> .)

    Save_Neg_Int_Const             shift and go to state 75

state 50

    (62) Var_Cte -> MINUS_SIGN FLOAT_CONST . Save_Neg_Float_Const
    (68) Save_Neg_Float_Const -> .

    TIMES_SIGN      reduce using rule 68 (Save_Neg_Float_Const -> .)
    DIVIDE_SIGN     reduce using rule 68 (Save_Neg_Float_Const -> .)
    MOD_SIGN        reduce using rule 68 (Save_Neg_Float_Const -> .)
    PLUS_SIGN       reduce using rule 68 (Save_Neg_Float_Const -> .)
    MINUS_SIGN      reduce using rule 68 (Save_Neg_Float_Const -> .)
    LESS            reduce using rule 68 (Save_Neg_Float_Const -> .)
    LESS_EQUAL      reduce using rule 68 (Save_Neg_Float_Const -> .)
    GREATER         reduce using rule 68 (Save_Neg_Float_Const -> .)
    GREATER_EQUAL   reduce using rule 68 (Save_Neg_Float_Const -> .)
    AND             reduce using rule 68 (Save_Neg_Float_Const -> .)
    OR              reduce using rule 68 (Save_Neg_Float_Const -> .)
    EQUAL           reduce using rule 68 (Save_Neg_Float_Const -> .)
    DIFF            reduce using rule 68 (Save_Neg_Float_Const -> .)
    PAR_CLOSE       reduce using rule 68 (Save_Neg_Float_Const -> .)

    Save_Neg_Float_Const           shift and go to state 76

state 51

    (26) Logical_Not -> NOT Push_Not . Relational Not_Quad
    (29) Relational -> . Expression
    (30) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (31) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (32) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (33) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (39) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (46) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (55) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (56) Factor -> . Var_Cte
    (59) Var_Cte -> . INT_CONST Save_Int_Const
    (60) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (61) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (62) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (63) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (64) Var_Cte -> . STRING_CONST Save_String_Const

    PAR_OPEN        shift and go to state 17
    INT_CONST       shift and go to state 21
    MINUS_SIGN      shift and go to state 31
    FLOAT_CONST     shift and go to state 18
    BOOL_CONST      shift and go to state 23
    STRING_CONST    shift and go to state 20

    Factor                         shift and go to state 25
    Relational                     shift and go to state 77
    Term                           shift and go to state 24
    Var_Cte                        shift and go to state 26
    Expression                     shift and go to state 30

state 52

    (55) Factor -> PAR_OPEN Push_False_Bottom Exp . PAR_CLOSE Pop_False_Bottom

    PAR_CLOSE       shift and go to state 78


state 53

    (21) Multiple_Nots -> AND . Push_And Logical_Not And_Quad Multiple_Nots
    (24) Push_And -> .

    NOT             reduce using rule 24 (Push_And -> .)
    PAR_OPEN        reduce using rule 24 (Push_And -> .)
    INT_CONST       reduce using rule 24 (Push_And -> .)
    MINUS_SIGN      reduce using rule 24 (Push_And -> .)
    FLOAT_CONST     reduce using rule 24 (Push_And -> .)
    BOOL_CONST      reduce using rule 24 (Push_And -> .)
    STRING_CONST    reduce using rule 24 (Push_And -> .)

    Push_And                       shift and go to state 79

state 54

    (22) Multiple_Nots -> Epsilon .

    OR              reduce using rule 22 (Multiple_Nots -> Epsilon .)
    EQUAL           reduce using rule 22 (Multiple_Nots -> Epsilon .)
    DIFF            reduce using rule 22 (Multiple_Nots -> Epsilon .)
    PAR_CLOSE       reduce using rule 22 (Multiple_Nots -> Epsilon .)


state 55

    (20) Logical_And -> Logical_Not And_Quad Multiple_Nots .

    OR              reduce using rule 20 (Logical_And -> Logical_Not And_Quad Multiple_Nots .)
    EQUAL           reduce using rule 20 (Logical_And -> Logical_Not And_Quad Multiple_Nots .)
    DIFF            reduce using rule 20 (Logical_And -> Logical_Not And_Quad Multiple_Nots .)
    PAR_CLOSE       reduce using rule 20 (Logical_And -> Logical_Not And_Quad Multiple_Nots .)


state 56

    (39) Expression -> Term Sum_Sub_Quad Multiple_Terms .

    LESS            reduce using rule 39 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    LESS_EQUAL      reduce using rule 39 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    GREATER         reduce using rule 39 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    GREATER_EQUAL   reduce using rule 39 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    AND             reduce using rule 39 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    OR              reduce using rule 39 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    EQUAL           reduce using rule 39 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    DIFF            reduce using rule 39 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    PAR_CLOSE       reduce using rule 39 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)


state 57

    (42) Multiple_Terms -> Epsilon .

    LESS            reduce using rule 42 (Multiple_Terms -> Epsilon .)
    LESS_EQUAL      reduce using rule 42 (Multiple_Terms -> Epsilon .)
    GREATER         reduce using rule 42 (Multiple_Terms -> Epsilon .)
    GREATER_EQUAL   reduce using rule 42 (Multiple_Terms -> Epsilon .)
    AND             reduce using rule 42 (Multiple_Terms -> Epsilon .)
    OR              reduce using rule 42 (Multiple_Terms -> Epsilon .)
    EQUAL           reduce using rule 42 (Multiple_Terms -> Epsilon .)
    DIFF            reduce using rule 42 (Multiple_Terms -> Epsilon .)
    PAR_CLOSE       reduce using rule 42 (Multiple_Terms -> Epsilon .)


state 58

    (41) Multiple_Terms -> MINUS_SIGN . Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms
    (45) Push_Minus_Sign -> .

    PAR_OPEN        reduce using rule 45 (Push_Minus_Sign -> .)
    INT_CONST       reduce using rule 45 (Push_Minus_Sign -> .)
    MINUS_SIGN      reduce using rule 45 (Push_Minus_Sign -> .)
    FLOAT_CONST     reduce using rule 45 (Push_Minus_Sign -> .)
    BOOL_CONST      reduce using rule 45 (Push_Minus_Sign -> .)
    STRING_CONST    reduce using rule 45 (Push_Minus_Sign -> .)

    Push_Minus_Sign                shift and go to state 80

state 59

    (40) Multiple_Terms -> PLUS_SIGN . Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms
    (44) Push_Plus_Sign -> .

    PAR_OPEN        reduce using rule 44 (Push_Plus_Sign -> .)
    INT_CONST       reduce using rule 44 (Push_Plus_Sign -> .)
    MINUS_SIGN      reduce using rule 44 (Push_Plus_Sign -> .)
    FLOAT_CONST     reduce using rule 44 (Push_Plus_Sign -> .)
    BOOL_CONST      reduce using rule 44 (Push_Plus_Sign -> .)
    STRING_CONST    reduce using rule 44 (Push_Plus_Sign -> .)

    Push_Plus_Sign                 shift and go to state 81

state 60

    (47) Multiple_Factors -> TIMES_SIGN . Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (52) Push_Times_Sign -> .

    PAR_OPEN        reduce using rule 52 (Push_Times_Sign -> .)
    INT_CONST       reduce using rule 52 (Push_Times_Sign -> .)
    MINUS_SIGN      reduce using rule 52 (Push_Times_Sign -> .)
    FLOAT_CONST     reduce using rule 52 (Push_Times_Sign -> .)
    BOOL_CONST      reduce using rule 52 (Push_Times_Sign -> .)
    STRING_CONST    reduce using rule 52 (Push_Times_Sign -> .)

    Push_Times_Sign                shift and go to state 82

state 61

    (49) Multiple_Factors -> MOD_SIGN . Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (54) Push_Mod_Sign -> .

    PAR_OPEN        reduce using rule 54 (Push_Mod_Sign -> .)
    INT_CONST       reduce using rule 54 (Push_Mod_Sign -> .)
    MINUS_SIGN      reduce using rule 54 (Push_Mod_Sign -> .)
    FLOAT_CONST     reduce using rule 54 (Push_Mod_Sign -> .)
    BOOL_CONST      reduce using rule 54 (Push_Mod_Sign -> .)
    STRING_CONST    reduce using rule 54 (Push_Mod_Sign -> .)

    Push_Mod_Sign                  shift and go to state 83

state 62

    (50) Multiple_Factors -> Epsilon .

    PLUS_SIGN       reduce using rule 50 (Multiple_Factors -> Epsilon .)
    MINUS_SIGN      reduce using rule 50 (Multiple_Factors -> Epsilon .)
    LESS            reduce using rule 50 (Multiple_Factors -> Epsilon .)
    LESS_EQUAL      reduce using rule 50 (Multiple_Factors -> Epsilon .)
    GREATER         reduce using rule 50 (Multiple_Factors -> Epsilon .)
    GREATER_EQUAL   reduce using rule 50 (Multiple_Factors -> Epsilon .)
    AND             reduce using rule 50 (Multiple_Factors -> Epsilon .)
    OR              reduce using rule 50 (Multiple_Factors -> Epsilon .)
    EQUAL           reduce using rule 50 (Multiple_Factors -> Epsilon .)
    DIFF            reduce using rule 50 (Multiple_Factors -> Epsilon .)
    PAR_CLOSE       reduce using rule 50 (Multiple_Factors -> Epsilon .)


state 63

    (46) Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .

    PLUS_SIGN       reduce using rule 46 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    MINUS_SIGN      reduce using rule 46 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS            reduce using rule 46 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS_EQUAL      reduce using rule 46 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER         reduce using rule 46 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER_EQUAL   reduce using rule 46 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    AND             reduce using rule 46 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    OR              reduce using rule 46 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    EQUAL           reduce using rule 46 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    DIFF            reduce using rule 46 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    PAR_CLOSE       reduce using rule 46 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)


state 64

    (48) Multiple_Factors -> DIVIDE_SIGN . Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (53) Push_Divide_Sign -> .

    PAR_OPEN        reduce using rule 53 (Push_Divide_Sign -> .)
    INT_CONST       reduce using rule 53 (Push_Divide_Sign -> .)
    MINUS_SIGN      reduce using rule 53 (Push_Divide_Sign -> .)
    FLOAT_CONST     reduce using rule 53 (Push_Divide_Sign -> .)
    BOOL_CONST      reduce using rule 53 (Push_Divide_Sign -> .)
    STRING_CONST    reduce using rule 53 (Push_Divide_Sign -> .)

    Push_Divide_Sign               shift and go to state 84

state 65

    (10) Exp -> Logical_Or EQUAL Push_Equal . Logical_Or Equity_Quad
    (15) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (20) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (25) Logical_Not -> . Relational
    (26) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (29) Relational -> . Expression
    (30) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (31) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (32) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (33) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (39) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (46) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (55) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (56) Factor -> . Var_Cte
    (59) Var_Cte -> . INT_CONST Save_Int_Const
    (60) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (61) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (62) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (63) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (64) Var_Cte -> . STRING_CONST Save_String_Const

    NOT             shift and go to state 32
    PAR_OPEN        shift and go to state 17
    INT_CONST       shift and go to state 21
    MINUS_SIGN      shift and go to state 31
    FLOAT_CONST     shift and go to state 18
    BOOL_CONST      shift and go to state 23
    STRING_CONST    shift and go to state 20

    Factor                         shift and go to state 25
    Relational                     shift and go to state 19
    Logical_Not                    shift and go to state 22
    Term                           shift and go to state 24
    Var_Cte                        shift and go to state 26
    Logical_Or                     shift and go to state 85
    Logical_And                    shift and go to state 28
    Expression                     shift and go to state 30

state 66

    (11) Exp -> Logical_Or DIFF Push_Diff . Logical_Or Equity_Quad
    (15) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (20) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (25) Logical_Not -> . Relational
    (26) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (29) Relational -> . Expression
    (30) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (31) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (32) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (33) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (39) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (46) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (55) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (56) Factor -> . Var_Cte
    (59) Var_Cte -> . INT_CONST Save_Int_Const
    (60) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (61) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (62) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (63) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (64) Var_Cte -> . STRING_CONST Save_String_Const

    NOT             shift and go to state 32
    PAR_OPEN        shift and go to state 17
    INT_CONST       shift and go to state 21
    MINUS_SIGN      shift and go to state 31
    FLOAT_CONST     shift and go to state 18
    BOOL_CONST      shift and go to state 23
    STRING_CONST    shift and go to state 20

    Factor                         shift and go to state 25
    Relational                     shift and go to state 19
    Logical_Not                    shift and go to state 22
    Term                           shift and go to state 24
    Var_Cte                        shift and go to state 26
    Logical_Or                     shift and go to state 86
    Logical_And                    shift and go to state 28
    Expression                     shift and go to state 30

state 67

    (15) Logical_Or -> Logical_And Or_Quad Multiple_Ands .

    PAR_CLOSE       reduce using rule 15 (Logical_Or -> Logical_And Or_Quad Multiple_Ands .)
    EQUAL           reduce using rule 15 (Logical_Or -> Logical_And Or_Quad Multiple_Ands .)
    DIFF            reduce using rule 15 (Logical_Or -> Logical_And Or_Quad Multiple_Ands .)


state 68

    (17) Multiple_Ands -> Epsilon .

    EQUAL           reduce using rule 17 (Multiple_Ands -> Epsilon .)
    DIFF            reduce using rule 17 (Multiple_Ands -> Epsilon .)
    PAR_CLOSE       reduce using rule 17 (Multiple_Ands -> Epsilon .)


state 69

    (16) Multiple_Ands -> OR . Push_Or Logical_And Or_Quad Multiple_Ands
    (19) Push_Or -> .

    NOT             reduce using rule 19 (Push_Or -> .)
    PAR_OPEN        reduce using rule 19 (Push_Or -> .)
    INT_CONST       reduce using rule 19 (Push_Or -> .)
    MINUS_SIGN      reduce using rule 19 (Push_Or -> .)
    FLOAT_CONST     reduce using rule 19 (Push_Or -> .)
    BOOL_CONST      reduce using rule 19 (Push_Or -> .)
    STRING_CONST    reduce using rule 19 (Push_Or -> .)

    Push_Or                        shift and go to state 87

state 70

    (8) Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON .

    PRINT           reduce using rule 8 (Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON .)
    CURLYB_CLOSE    reduce using rule 8 (Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON .)


state 71

    (30) Relational -> Expression LESS Push_Less . Expression Relational_Quad
    (39) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (46) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (55) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (56) Factor -> . Var_Cte
    (59) Var_Cte -> . INT_CONST Save_Int_Const
    (60) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (61) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (62) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (63) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (64) Var_Cte -> . STRING_CONST Save_String_Const

    PAR_OPEN        shift and go to state 17
    INT_CONST       shift and go to state 21
    MINUS_SIGN      shift and go to state 31
    FLOAT_CONST     shift and go to state 18
    BOOL_CONST      shift and go to state 23
    STRING_CONST    shift and go to state 20

    Term                           shift and go to state 24
    Var_Cte                        shift and go to state 26
    Factor                         shift and go to state 25
    Expression                     shift and go to state 88

state 72

    (31) Relational -> Expression LESS_EQUAL Push_Less_Equal . Expression Relational_Quad
    (39) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (46) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (55) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (56) Factor -> . Var_Cte
    (59) Var_Cte -> . INT_CONST Save_Int_Const
    (60) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (61) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (62) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (63) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (64) Var_Cte -> . STRING_CONST Save_String_Const

    PAR_OPEN        shift and go to state 17
    INT_CONST       shift and go to state 21
    MINUS_SIGN      shift and go to state 31
    FLOAT_CONST     shift and go to state 18
    BOOL_CONST      shift and go to state 23
    STRING_CONST    shift and go to state 20

    Term                           shift and go to state 24
    Var_Cte                        shift and go to state 26
    Factor                         shift and go to state 25
    Expression                     shift and go to state 89

state 73

    (33) Relational -> Expression GREATER_EQUAL Push_Greater_Equal . Expression Relational_Quad
    (39) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (46) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (55) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (56) Factor -> . Var_Cte
    (59) Var_Cte -> . INT_CONST Save_Int_Const
    (60) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (61) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (62) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (63) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (64) Var_Cte -> . STRING_CONST Save_String_Const

    PAR_OPEN        shift and go to state 17
    INT_CONST       shift and go to state 21
    MINUS_SIGN      shift and go to state 31
    FLOAT_CONST     shift and go to state 18
    BOOL_CONST      shift and go to state 23
    STRING_CONST    shift and go to state 20

    Term                           shift and go to state 24
    Var_Cte                        shift and go to state 26
    Factor                         shift and go to state 25
    Expression                     shift and go to state 90

state 74

    (32) Relational -> Expression GREATER Push_Greater . Expression Relational_Quad
    (39) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (46) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (55) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (56) Factor -> . Var_Cte
    (59) Var_Cte -> . INT_CONST Save_Int_Const
    (60) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (61) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (62) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (63) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (64) Var_Cte -> . STRING_CONST Save_String_Const

    PAR_OPEN        shift and go to state 17
    INT_CONST       shift and go to state 21
    MINUS_SIGN      shift and go to state 31
    FLOAT_CONST     shift and go to state 18
    BOOL_CONST      shift and go to state 23
    STRING_CONST    shift and go to state 20

    Term                           shift and go to state 24
    Var_Cte                        shift and go to state 26
    Factor                         shift and go to state 25
    Expression                     shift and go to state 91

state 75

    (60) Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .

    TIMES_SIGN      reduce using rule 60 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    DIVIDE_SIGN     reduce using rule 60 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    MOD_SIGN        reduce using rule 60 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    PLUS_SIGN       reduce using rule 60 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    MINUS_SIGN      reduce using rule 60 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    LESS            reduce using rule 60 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    LESS_EQUAL      reduce using rule 60 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    GREATER         reduce using rule 60 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    GREATER_EQUAL   reduce using rule 60 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    AND             reduce using rule 60 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    OR              reduce using rule 60 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    PAR_CLOSE       reduce using rule 60 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    EQUAL           reduce using rule 60 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    DIFF            reduce using rule 60 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)


state 76

    (62) Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .

    TIMES_SIGN      reduce using rule 62 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    DIVIDE_SIGN     reduce using rule 62 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    MOD_SIGN        reduce using rule 62 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    PLUS_SIGN       reduce using rule 62 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    MINUS_SIGN      reduce using rule 62 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    LESS            reduce using rule 62 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    LESS_EQUAL      reduce using rule 62 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    GREATER         reduce using rule 62 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    GREATER_EQUAL   reduce using rule 62 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    AND             reduce using rule 62 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    OR              reduce using rule 62 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    PAR_CLOSE       reduce using rule 62 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    EQUAL           reduce using rule 62 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    DIFF            reduce using rule 62 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)


state 77

    (26) Logical_Not -> NOT Push_Not Relational . Not_Quad
    (27) Not_Quad -> .

    AND             reduce using rule 27 (Not_Quad -> .)
    OR              reduce using rule 27 (Not_Quad -> .)
    EQUAL           reduce using rule 27 (Not_Quad -> .)
    DIFF            reduce using rule 27 (Not_Quad -> .)
    PAR_CLOSE       reduce using rule 27 (Not_Quad -> .)

    Not_Quad                       shift and go to state 92

state 78

    (55) Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE . Pop_False_Bottom
    (58) Pop_False_Bottom -> .

    TIMES_SIGN      reduce using rule 58 (Pop_False_Bottom -> .)
    DIVIDE_SIGN     reduce using rule 58 (Pop_False_Bottom -> .)
    MOD_SIGN        reduce using rule 58 (Pop_False_Bottom -> .)
    PLUS_SIGN       reduce using rule 58 (Pop_False_Bottom -> .)
    MINUS_SIGN      reduce using rule 58 (Pop_False_Bottom -> .)
    LESS            reduce using rule 58 (Pop_False_Bottom -> .)
    LESS_EQUAL      reduce using rule 58 (Pop_False_Bottom -> .)
    GREATER         reduce using rule 58 (Pop_False_Bottom -> .)
    GREATER_EQUAL   reduce using rule 58 (Pop_False_Bottom -> .)
    AND             reduce using rule 58 (Pop_False_Bottom -> .)
    OR              reduce using rule 58 (Pop_False_Bottom -> .)
    EQUAL           reduce using rule 58 (Pop_False_Bottom -> .)
    DIFF            reduce using rule 58 (Pop_False_Bottom -> .)
    PAR_CLOSE       reduce using rule 58 (Pop_False_Bottom -> .)

    Pop_False_Bottom               shift and go to state 93

state 79

    (21) Multiple_Nots -> AND Push_And . Logical_Not And_Quad Multiple_Nots
    (25) Logical_Not -> . Relational
    (26) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (29) Relational -> . Expression
    (30) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (31) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (32) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (33) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (39) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (46) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (55) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (56) Factor -> . Var_Cte
    (59) Var_Cte -> . INT_CONST Save_Int_Const
    (60) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (61) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (62) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (63) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (64) Var_Cte -> . STRING_CONST Save_String_Const

    NOT             shift and go to state 32
    PAR_OPEN        shift and go to state 17
    INT_CONST       shift and go to state 21
    MINUS_SIGN      shift and go to state 31
    FLOAT_CONST     shift and go to state 18
    BOOL_CONST      shift and go to state 23
    STRING_CONST    shift and go to state 20

    Factor                         shift and go to state 25
    Relational                     shift and go to state 19
    Logical_Not                    shift and go to state 94
    Term                           shift and go to state 24
    Var_Cte                        shift and go to state 26
    Expression                     shift and go to state 30

state 80

    (41) Multiple_Terms -> MINUS_SIGN Push_Minus_Sign . Term Sum_Sub_Quad Multiple_Terms
    (46) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (55) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (56) Factor -> . Var_Cte
    (59) Var_Cte -> . INT_CONST Save_Int_Const
    (60) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (61) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (62) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (63) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (64) Var_Cte -> . STRING_CONST Save_String_Const

    PAR_OPEN        shift and go to state 17
    INT_CONST       shift and go to state 21
    MINUS_SIGN      shift and go to state 31
    FLOAT_CONST     shift and go to state 18
    BOOL_CONST      shift and go to state 23
    STRING_CONST    shift and go to state 20

    Term                           shift and go to state 95
    Var_Cte                        shift and go to state 26
    Factor                         shift and go to state 25

state 81

    (40) Multiple_Terms -> PLUS_SIGN Push_Plus_Sign . Term Sum_Sub_Quad Multiple_Terms
    (46) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (55) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (56) Factor -> . Var_Cte
    (59) Var_Cte -> . INT_CONST Save_Int_Const
    (60) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (61) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (62) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (63) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (64) Var_Cte -> . STRING_CONST Save_String_Const

    PAR_OPEN        shift and go to state 17
    INT_CONST       shift and go to state 21
    MINUS_SIGN      shift and go to state 31
    FLOAT_CONST     shift and go to state 18
    BOOL_CONST      shift and go to state 23
    STRING_CONST    shift and go to state 20

    Term                           shift and go to state 96
    Var_Cte                        shift and go to state 26
    Factor                         shift and go to state 25

state 82

    (47) Multiple_Factors -> TIMES_SIGN Push_Times_Sign . Factor Mult_Div_Mod_Quad Multiple_Factors
    (55) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (56) Factor -> . Var_Cte
    (59) Var_Cte -> . INT_CONST Save_Int_Const
    (60) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (61) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (62) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (63) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (64) Var_Cte -> . STRING_CONST Save_String_Const

    PAR_OPEN        shift and go to state 17
    INT_CONST       shift and go to state 21
    MINUS_SIGN      shift and go to state 31
    FLOAT_CONST     shift and go to state 18
    BOOL_CONST      shift and go to state 23
    STRING_CONST    shift and go to state 20

    Var_Cte                        shift and go to state 26
    Factor                         shift and go to state 97

state 83

    (49) Multiple_Factors -> MOD_SIGN Push_Mod_Sign . Factor Mult_Div_Mod_Quad Multiple_Factors
    (55) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (56) Factor -> . Var_Cte
    (59) Var_Cte -> . INT_CONST Save_Int_Const
    (60) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (61) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (62) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (63) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (64) Var_Cte -> . STRING_CONST Save_String_Const

    PAR_OPEN        shift and go to state 17
    INT_CONST       shift and go to state 21
    MINUS_SIGN      shift and go to state 31
    FLOAT_CONST     shift and go to state 18
    BOOL_CONST      shift and go to state 23
    STRING_CONST    shift and go to state 20

    Var_Cte                        shift and go to state 26
    Factor                         shift and go to state 98

state 84

    (48) Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign . Factor Mult_Div_Mod_Quad Multiple_Factors
    (55) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (56) Factor -> . Var_Cte
    (59) Var_Cte -> . INT_CONST Save_Int_Const
    (60) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (61) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (62) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (63) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (64) Var_Cte -> . STRING_CONST Save_String_Const

    PAR_OPEN        shift and go to state 17
    INT_CONST       shift and go to state 21
    MINUS_SIGN      shift and go to state 31
    FLOAT_CONST     shift and go to state 18
    BOOL_CONST      shift and go to state 23
    STRING_CONST    shift and go to state 20

    Var_Cte                        shift and go to state 26
    Factor                         shift and go to state 99

state 85

    (10) Exp -> Logical_Or EQUAL Push_Equal Logical_Or . Equity_Quad
    (12) Equity_Quad -> .

    PAR_CLOSE       reduce using rule 12 (Equity_Quad -> .)

    Equity_Quad                    shift and go to state 100

state 86

    (11) Exp -> Logical_Or DIFF Push_Diff Logical_Or . Equity_Quad
    (12) Equity_Quad -> .

    PAR_CLOSE       reduce using rule 12 (Equity_Quad -> .)

    Equity_Quad                    shift and go to state 101

state 87

    (16) Multiple_Ands -> OR Push_Or . Logical_And Or_Quad Multiple_Ands
    (20) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (25) Logical_Not -> . Relational
    (26) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (29) Relational -> . Expression
    (30) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (31) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (32) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (33) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (39) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (46) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (55) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (56) Factor -> . Var_Cte
    (59) Var_Cte -> . INT_CONST Save_Int_Const
    (60) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (61) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (62) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (63) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (64) Var_Cte -> . STRING_CONST Save_String_Const

    NOT             shift and go to state 32
    PAR_OPEN        shift and go to state 17
    INT_CONST       shift and go to state 21
    MINUS_SIGN      shift and go to state 31
    FLOAT_CONST     shift and go to state 18
    BOOL_CONST      shift and go to state 23
    STRING_CONST    shift and go to state 20

    Factor                         shift and go to state 25
    Relational                     shift and go to state 19
    Logical_Not                    shift and go to state 22
    Term                           shift and go to state 24
    Var_Cte                        shift and go to state 26
    Logical_And                    shift and go to state 102
    Expression                     shift and go to state 30

state 88

    (30) Relational -> Expression LESS Push_Less Expression . Relational_Quad
    (34) Relational_Quad -> .

    AND             reduce using rule 34 (Relational_Quad -> .)
    OR              reduce using rule 34 (Relational_Quad -> .)
    EQUAL           reduce using rule 34 (Relational_Quad -> .)
    DIFF            reduce using rule 34 (Relational_Quad -> .)
    PAR_CLOSE       reduce using rule 34 (Relational_Quad -> .)

    Relational_Quad                shift and go to state 103

state 89

    (31) Relational -> Expression LESS_EQUAL Push_Less_Equal Expression . Relational_Quad
    (34) Relational_Quad -> .

    AND             reduce using rule 34 (Relational_Quad -> .)
    OR              reduce using rule 34 (Relational_Quad -> .)
    EQUAL           reduce using rule 34 (Relational_Quad -> .)
    DIFF            reduce using rule 34 (Relational_Quad -> .)
    PAR_CLOSE       reduce using rule 34 (Relational_Quad -> .)

    Relational_Quad                shift and go to state 104

state 90

    (33) Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression . Relational_Quad
    (34) Relational_Quad -> .

    AND             reduce using rule 34 (Relational_Quad -> .)
    OR              reduce using rule 34 (Relational_Quad -> .)
    EQUAL           reduce using rule 34 (Relational_Quad -> .)
    DIFF            reduce using rule 34 (Relational_Quad -> .)
    PAR_CLOSE       reduce using rule 34 (Relational_Quad -> .)

    Relational_Quad                shift and go to state 105

state 91

    (32) Relational -> Expression GREATER Push_Greater Expression . Relational_Quad
    (34) Relational_Quad -> .

    AND             reduce using rule 34 (Relational_Quad -> .)
    OR              reduce using rule 34 (Relational_Quad -> .)
    EQUAL           reduce using rule 34 (Relational_Quad -> .)
    DIFF            reduce using rule 34 (Relational_Quad -> .)
    PAR_CLOSE       reduce using rule 34 (Relational_Quad -> .)

    Relational_Quad                shift and go to state 106

state 92

    (26) Logical_Not -> NOT Push_Not Relational Not_Quad .

    AND             reduce using rule 26 (Logical_Not -> NOT Push_Not Relational Not_Quad .)
    OR              reduce using rule 26 (Logical_Not -> NOT Push_Not Relational Not_Quad .)
    EQUAL           reduce using rule 26 (Logical_Not -> NOT Push_Not Relational Not_Quad .)
    DIFF            reduce using rule 26 (Logical_Not -> NOT Push_Not Relational Not_Quad .)
    PAR_CLOSE       reduce using rule 26 (Logical_Not -> NOT Push_Not Relational Not_Quad .)


state 93

    (55) Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .

    TIMES_SIGN      reduce using rule 55 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    DIVIDE_SIGN     reduce using rule 55 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    MOD_SIGN        reduce using rule 55 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    PLUS_SIGN       reduce using rule 55 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    MINUS_SIGN      reduce using rule 55 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    LESS            reduce using rule 55 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    LESS_EQUAL      reduce using rule 55 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    GREATER         reduce using rule 55 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    GREATER_EQUAL   reduce using rule 55 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    AND             reduce using rule 55 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    OR              reduce using rule 55 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    EQUAL           reduce using rule 55 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    DIFF            reduce using rule 55 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    PAR_CLOSE       reduce using rule 55 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)


state 94

    (21) Multiple_Nots -> AND Push_And Logical_Not . And_Quad Multiple_Nots
    (23) And_Quad -> .

    AND             reduce using rule 23 (And_Quad -> .)
    OR              reduce using rule 23 (And_Quad -> .)
    EQUAL           reduce using rule 23 (And_Quad -> .)
    DIFF            reduce using rule 23 (And_Quad -> .)
    PAR_CLOSE       reduce using rule 23 (And_Quad -> .)

    And_Quad                       shift and go to state 107

state 95

    (41) Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term . Sum_Sub_Quad Multiple_Terms
    (43) Sum_Sub_Quad -> .

    PLUS_SIGN       reduce using rule 43 (Sum_Sub_Quad -> .)
    MINUS_SIGN      reduce using rule 43 (Sum_Sub_Quad -> .)
    LESS            reduce using rule 43 (Sum_Sub_Quad -> .)
    LESS_EQUAL      reduce using rule 43 (Sum_Sub_Quad -> .)
    GREATER         reduce using rule 43 (Sum_Sub_Quad -> .)
    GREATER_EQUAL   reduce using rule 43 (Sum_Sub_Quad -> .)
    AND             reduce using rule 43 (Sum_Sub_Quad -> .)
    OR              reduce using rule 43 (Sum_Sub_Quad -> .)
    EQUAL           reduce using rule 43 (Sum_Sub_Quad -> .)
    DIFF            reduce using rule 43 (Sum_Sub_Quad -> .)
    PAR_CLOSE       reduce using rule 43 (Sum_Sub_Quad -> .)

    Sum_Sub_Quad                   shift and go to state 108

state 96

    (40) Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term . Sum_Sub_Quad Multiple_Terms
    (43) Sum_Sub_Quad -> .

    PLUS_SIGN       reduce using rule 43 (Sum_Sub_Quad -> .)
    MINUS_SIGN      reduce using rule 43 (Sum_Sub_Quad -> .)
    LESS            reduce using rule 43 (Sum_Sub_Quad -> .)
    LESS_EQUAL      reduce using rule 43 (Sum_Sub_Quad -> .)
    GREATER         reduce using rule 43 (Sum_Sub_Quad -> .)
    GREATER_EQUAL   reduce using rule 43 (Sum_Sub_Quad -> .)
    AND             reduce using rule 43 (Sum_Sub_Quad -> .)
    OR              reduce using rule 43 (Sum_Sub_Quad -> .)
    EQUAL           reduce using rule 43 (Sum_Sub_Quad -> .)
    DIFF            reduce using rule 43 (Sum_Sub_Quad -> .)
    PAR_CLOSE       reduce using rule 43 (Sum_Sub_Quad -> .)

    Sum_Sub_Quad                   shift and go to state 109

state 97

    (47) Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor . Mult_Div_Mod_Quad Multiple_Factors
    (51) Mult_Div_Mod_Quad -> .

    TIMES_SIGN      reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    DIVIDE_SIGN     reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    MOD_SIGN        reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    PLUS_SIGN       reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    MINUS_SIGN      reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    LESS            reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    LESS_EQUAL      reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    GREATER         reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    GREATER_EQUAL   reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    AND             reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    OR              reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    EQUAL           reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    DIFF            reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    PAR_CLOSE       reduce using rule 51 (Mult_Div_Mod_Quad -> .)

    Mult_Div_Mod_Quad              shift and go to state 110

state 98

    (49) Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor . Mult_Div_Mod_Quad Multiple_Factors
    (51) Mult_Div_Mod_Quad -> .

    TIMES_SIGN      reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    DIVIDE_SIGN     reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    MOD_SIGN        reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    PLUS_SIGN       reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    MINUS_SIGN      reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    LESS            reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    LESS_EQUAL      reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    GREATER         reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    GREATER_EQUAL   reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    AND             reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    OR              reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    EQUAL           reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    DIFF            reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    PAR_CLOSE       reduce using rule 51 (Mult_Div_Mod_Quad -> .)

    Mult_Div_Mod_Quad              shift and go to state 111

state 99

    (48) Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor . Mult_Div_Mod_Quad Multiple_Factors
    (51) Mult_Div_Mod_Quad -> .

    TIMES_SIGN      reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    DIVIDE_SIGN     reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    MOD_SIGN        reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    PLUS_SIGN       reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    MINUS_SIGN      reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    LESS            reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    LESS_EQUAL      reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    GREATER         reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    GREATER_EQUAL   reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    AND             reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    OR              reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    EQUAL           reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    DIFF            reduce using rule 51 (Mult_Div_Mod_Quad -> .)
    PAR_CLOSE       reduce using rule 51 (Mult_Div_Mod_Quad -> .)

    Mult_Div_Mod_Quad              shift and go to state 112

state 100

    (10) Exp -> Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad .

    PAR_CLOSE       reduce using rule 10 (Exp -> Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad .)


state 101

    (11) Exp -> Logical_Or DIFF Push_Diff Logical_Or Equity_Quad .

    PAR_CLOSE       reduce using rule 11 (Exp -> Logical_Or DIFF Push_Diff Logical_Or Equity_Quad .)


state 102

    (16) Multiple_Ands -> OR Push_Or Logical_And . Or_Quad Multiple_Ands
    (18) Or_Quad -> .

    OR              reduce using rule 18 (Or_Quad -> .)
    EQUAL           reduce using rule 18 (Or_Quad -> .)
    DIFF            reduce using rule 18 (Or_Quad -> .)
    PAR_CLOSE       reduce using rule 18 (Or_Quad -> .)

    Or_Quad                        shift and go to state 113

state 103

    (30) Relational -> Expression LESS Push_Less Expression Relational_Quad .

    AND             reduce using rule 30 (Relational -> Expression LESS Push_Less Expression Relational_Quad .)
    OR              reduce using rule 30 (Relational -> Expression LESS Push_Less Expression Relational_Quad .)
    EQUAL           reduce using rule 30 (Relational -> Expression LESS Push_Less Expression Relational_Quad .)
    DIFF            reduce using rule 30 (Relational -> Expression LESS Push_Less Expression Relational_Quad .)
    PAR_CLOSE       reduce using rule 30 (Relational -> Expression LESS Push_Less Expression Relational_Quad .)


state 104

    (31) Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad .

    AND             reduce using rule 31 (Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad .)
    OR              reduce using rule 31 (Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad .)
    EQUAL           reduce using rule 31 (Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad .)
    DIFF            reduce using rule 31 (Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad .)
    PAR_CLOSE       reduce using rule 31 (Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad .)


state 105

    (33) Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad .

    AND             reduce using rule 33 (Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad .)
    OR              reduce using rule 33 (Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad .)
    EQUAL           reduce using rule 33 (Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad .)
    DIFF            reduce using rule 33 (Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad .)
    PAR_CLOSE       reduce using rule 33 (Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad .)


state 106

    (32) Relational -> Expression GREATER Push_Greater Expression Relational_Quad .

    AND             reduce using rule 32 (Relational -> Expression GREATER Push_Greater Expression Relational_Quad .)
    OR              reduce using rule 32 (Relational -> Expression GREATER Push_Greater Expression Relational_Quad .)
    EQUAL           reduce using rule 32 (Relational -> Expression GREATER Push_Greater Expression Relational_Quad .)
    DIFF            reduce using rule 32 (Relational -> Expression GREATER Push_Greater Expression Relational_Quad .)
    PAR_CLOSE       reduce using rule 32 (Relational -> Expression GREATER Push_Greater Expression Relational_Quad .)


state 107

    (21) Multiple_Nots -> AND Push_And Logical_Not And_Quad . Multiple_Nots
    (21) Multiple_Nots -> . AND Push_And Logical_Not And_Quad Multiple_Nots
    (22) Multiple_Nots -> . Epsilon
    (71) Epsilon -> .

    AND             shift and go to state 53
    OR              reduce using rule 71 (Epsilon -> .)
    EQUAL           reduce using rule 71 (Epsilon -> .)
    DIFF            reduce using rule 71 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 71 (Epsilon -> .)

    Multiple_Nots                  shift and go to state 114
    Epsilon                        shift and go to state 54

state 108

    (41) Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad . Multiple_Terms
    (40) Multiple_Terms -> . PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms
    (41) Multiple_Terms -> . MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms
    (42) Multiple_Terms -> . Epsilon
    (71) Epsilon -> .

    PLUS_SIGN       shift and go to state 59
    MINUS_SIGN      shift and go to state 58
    LESS            reduce using rule 71 (Epsilon -> .)
    LESS_EQUAL      reduce using rule 71 (Epsilon -> .)
    GREATER         reduce using rule 71 (Epsilon -> .)
    GREATER_EQUAL   reduce using rule 71 (Epsilon -> .)
    AND             reduce using rule 71 (Epsilon -> .)
    OR              reduce using rule 71 (Epsilon -> .)
    EQUAL           reduce using rule 71 (Epsilon -> .)
    DIFF            reduce using rule 71 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 71 (Epsilon -> .)

    Multiple_Terms                 shift and go to state 115
    Epsilon                        shift and go to state 57

state 109

    (40) Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad . Multiple_Terms
    (40) Multiple_Terms -> . PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms
    (41) Multiple_Terms -> . MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms
    (42) Multiple_Terms -> . Epsilon
    (71) Epsilon -> .

    PLUS_SIGN       shift and go to state 59
    MINUS_SIGN      shift and go to state 58
    LESS            reduce using rule 71 (Epsilon -> .)
    LESS_EQUAL      reduce using rule 71 (Epsilon -> .)
    GREATER         reduce using rule 71 (Epsilon -> .)
    GREATER_EQUAL   reduce using rule 71 (Epsilon -> .)
    AND             reduce using rule 71 (Epsilon -> .)
    OR              reduce using rule 71 (Epsilon -> .)
    EQUAL           reduce using rule 71 (Epsilon -> .)
    DIFF            reduce using rule 71 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 71 (Epsilon -> .)

    Multiple_Terms                 shift and go to state 116
    Epsilon                        shift and go to state 57

state 110

    (47) Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad . Multiple_Factors
    (47) Multiple_Factors -> . TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (48) Multiple_Factors -> . DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (49) Multiple_Factors -> . MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (50) Multiple_Factors -> . Epsilon
    (71) Epsilon -> .

    TIMES_SIGN      shift and go to state 60
    DIVIDE_SIGN     shift and go to state 64
    MOD_SIGN        shift and go to state 61
    PLUS_SIGN       reduce using rule 71 (Epsilon -> .)
    MINUS_SIGN      reduce using rule 71 (Epsilon -> .)
    LESS            reduce using rule 71 (Epsilon -> .)
    LESS_EQUAL      reduce using rule 71 (Epsilon -> .)
    GREATER         reduce using rule 71 (Epsilon -> .)
    GREATER_EQUAL   reduce using rule 71 (Epsilon -> .)
    AND             reduce using rule 71 (Epsilon -> .)
    OR              reduce using rule 71 (Epsilon -> .)
    EQUAL           reduce using rule 71 (Epsilon -> .)
    DIFF            reduce using rule 71 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 71 (Epsilon -> .)

    Epsilon                        shift and go to state 62
    Multiple_Factors               shift and go to state 117

state 111

    (49) Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad . Multiple_Factors
    (47) Multiple_Factors -> . TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (48) Multiple_Factors -> . DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (49) Multiple_Factors -> . MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (50) Multiple_Factors -> . Epsilon
    (71) Epsilon -> .

    TIMES_SIGN      shift and go to state 60
    DIVIDE_SIGN     shift and go to state 64
    MOD_SIGN        shift and go to state 61
    PLUS_SIGN       reduce using rule 71 (Epsilon -> .)
    MINUS_SIGN      reduce using rule 71 (Epsilon -> .)
    LESS            reduce using rule 71 (Epsilon -> .)
    LESS_EQUAL      reduce using rule 71 (Epsilon -> .)
    GREATER         reduce using rule 71 (Epsilon -> .)
    GREATER_EQUAL   reduce using rule 71 (Epsilon -> .)
    AND             reduce using rule 71 (Epsilon -> .)
    OR              reduce using rule 71 (Epsilon -> .)
    EQUAL           reduce using rule 71 (Epsilon -> .)
    DIFF            reduce using rule 71 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 71 (Epsilon -> .)

    Epsilon                        shift and go to state 62
    Multiple_Factors               shift and go to state 118

state 112

    (48) Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad . Multiple_Factors
    (47) Multiple_Factors -> . TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (48) Multiple_Factors -> . DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (49) Multiple_Factors -> . MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (50) Multiple_Factors -> . Epsilon
    (71) Epsilon -> .

    TIMES_SIGN      shift and go to state 60
    DIVIDE_SIGN     shift and go to state 64
    MOD_SIGN        shift and go to state 61
    PLUS_SIGN       reduce using rule 71 (Epsilon -> .)
    MINUS_SIGN      reduce using rule 71 (Epsilon -> .)
    LESS            reduce using rule 71 (Epsilon -> .)
    LESS_EQUAL      reduce using rule 71 (Epsilon -> .)
    GREATER         reduce using rule 71 (Epsilon -> .)
    GREATER_EQUAL   reduce using rule 71 (Epsilon -> .)
    AND             reduce using rule 71 (Epsilon -> .)
    OR              reduce using rule 71 (Epsilon -> .)
    EQUAL           reduce using rule 71 (Epsilon -> .)
    DIFF            reduce using rule 71 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 71 (Epsilon -> .)

    Epsilon                        shift and go to state 62
    Multiple_Factors               shift and go to state 119

state 113

    (16) Multiple_Ands -> OR Push_Or Logical_And Or_Quad . Multiple_Ands
    (16) Multiple_Ands -> . OR Push_Or Logical_And Or_Quad Multiple_Ands
    (17) Multiple_Ands -> . Epsilon
    (71) Epsilon -> .

    OR              shift and go to state 69
    EQUAL           reduce using rule 71 (Epsilon -> .)
    DIFF            reduce using rule 71 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 71 (Epsilon -> .)

    Multiple_Ands                  shift and go to state 120
    Epsilon                        shift and go to state 68

state 114

    (21) Multiple_Nots -> AND Push_And Logical_Not And_Quad Multiple_Nots .

    OR              reduce using rule 21 (Multiple_Nots -> AND Push_And Logical_Not And_Quad Multiple_Nots .)
    EQUAL           reduce using rule 21 (Multiple_Nots -> AND Push_And Logical_Not And_Quad Multiple_Nots .)
    DIFF            reduce using rule 21 (Multiple_Nots -> AND Push_And Logical_Not And_Quad Multiple_Nots .)
    PAR_CLOSE       reduce using rule 21 (Multiple_Nots -> AND Push_And Logical_Not And_Quad Multiple_Nots .)


state 115

    (41) Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .

    LESS            reduce using rule 41 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    LESS_EQUAL      reduce using rule 41 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    GREATER         reduce using rule 41 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    GREATER_EQUAL   reduce using rule 41 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    AND             reduce using rule 41 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    OR              reduce using rule 41 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    EQUAL           reduce using rule 41 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    DIFF            reduce using rule 41 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    PAR_CLOSE       reduce using rule 41 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)


state 116

    (40) Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .

    LESS            reduce using rule 40 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    LESS_EQUAL      reduce using rule 40 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    GREATER         reduce using rule 40 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    GREATER_EQUAL   reduce using rule 40 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    AND             reduce using rule 40 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    OR              reduce using rule 40 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    EQUAL           reduce using rule 40 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    DIFF            reduce using rule 40 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    PAR_CLOSE       reduce using rule 40 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)


state 117

    (47) Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .

    PLUS_SIGN       reduce using rule 47 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    MINUS_SIGN      reduce using rule 47 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS            reduce using rule 47 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS_EQUAL      reduce using rule 47 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER         reduce using rule 47 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER_EQUAL   reduce using rule 47 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    AND             reduce using rule 47 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    OR              reduce using rule 47 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    EQUAL           reduce using rule 47 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    DIFF            reduce using rule 47 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    PAR_CLOSE       reduce using rule 47 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)


state 118

    (49) Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .

    PLUS_SIGN       reduce using rule 49 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    MINUS_SIGN      reduce using rule 49 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS            reduce using rule 49 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS_EQUAL      reduce using rule 49 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER         reduce using rule 49 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER_EQUAL   reduce using rule 49 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    AND             reduce using rule 49 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    OR              reduce using rule 49 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    EQUAL           reduce using rule 49 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    DIFF            reduce using rule 49 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    PAR_CLOSE       reduce using rule 49 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)


state 119

    (48) Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .

    PLUS_SIGN       reduce using rule 48 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    MINUS_SIGN      reduce using rule 48 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS            reduce using rule 48 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS_EQUAL      reduce using rule 48 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER         reduce using rule 48 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER_EQUAL   reduce using rule 48 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    AND             reduce using rule 48 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    OR              reduce using rule 48 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    EQUAL           reduce using rule 48 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    DIFF            reduce using rule 48 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    PAR_CLOSE       reduce using rule 48 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)


state 120

    (16) Multiple_Ands -> OR Push_Or Logical_And Or_Quad Multiple_Ands .

    EQUAL           reduce using rule 16 (Multiple_Ands -> OR Push_Or Logical_And Or_Quad Multiple_Ands .)
    DIFF            reduce using rule 16 (Multiple_Ands -> OR Push_Or Logical_And Or_Quad Multiple_Ands .)
    PAR_CLOSE       reduce using rule 16 (Multiple_Ands -> OR Push_Or Logical_And Or_Quad Multiple_Ands .)

