Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    TRIANGLE
    SQRB_OPEN
    LINE
    POLYGON
    COMMENT
    POINT
    SQRB_CLOSE
    BLOCK_COMMENT
    FUNC
    INPUT
    RECTANGLE

Grammar

Rule 0     S' -> Obi
Rule 1     Obi -> Prev_To_Play Play
Rule 2     Prev_To_Play -> GoTo_Global_Vars Declare_Var GoTo_Play Prev_To_Play
Rule 3     Prev_To_Play -> Epsilon
Rule 4     GoTo_Global_Vars -> <empty>
Rule 5     GoTo_Play -> <empty>
Rule 6     Play -> PLAY Play_Init PAR_OPEN PAR_CLOSE Statements_Block
Rule 7     Play_Init -> <empty>
Rule 8     Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE
Rule 9     Multiple_Statements -> Statement Multiple_Statements
Rule 10    Multiple_Statements -> Epsilon
Rule 11    Statement -> Print
Rule 12    Statement -> Declare_Var
Rule 13    Statement -> Assignment
Rule 14    Statement -> While_Loop
Rule 15    Statement -> If_Eif_Else
Rule 16    Statement -> Draw_Stmt
Rule 17    Draw_Stmt -> DRAW Drawable SEMICOLON
Rule 18    Drawable -> Circle_Func
Rule 19    Drawable -> Square_Func
Rule 20    Circle_Func -> CIRCLE PAR_OPEN Exp COMMA Exp COMMA Exp COMMA Selected_Color PAR_CLOSE
Rule 21    Square_Func -> SQUARE PAR_OPEN Exp COMMA Exp COMMA Exp COMMA Selected_Color PAR_CLOSE
Rule 22    Selected_Color -> RED
Rule 23    Selected_Color -> GREEN
Rule 24    Selected_Color -> BLUE
Rule 25    Selected_Color -> YELLOW
Rule 26    Selected_Color -> PURPLE
Rule 27    Selected_Color -> WHITE
Rule 28    Selected_Color -> BLACK
Rule 29    Selected_Color -> ORANGE
Rule 30    Selected_Color -> CYAN
Rule 31    Selected_Color -> MAGENTA
Rule 32    Selected_Color -> PINK
Rule 33    Selected_Color -> GRAY
Rule 34    Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON
Rule 35    If_Eif_Else -> IF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion Optional_Else
Rule 36    Eif_Recursion -> EIF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion
Rule 37    Eif_Recursion -> Epsilon
Rule 38    Optional_Else -> ELSE Statements_Block
Rule 39    Optional_Else -> Epsilon
Rule 40    If_GoToF_Quad -> <empty>
Rule 41    GoTo_Fill -> <empty>
Rule 42    While_Loop -> WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads
Rule 43    Push_While_Jump -> <empty>
Rule 44    While_Quad -> <empty>
Rule 45    Fill_While_Quads -> <empty>
Rule 46    Declare_Var -> Type ID SEMICOLON
Rule 47    Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON
Rule 48    Type -> INT
Rule 49    Type -> FLOAT
Rule 50    Type -> BOOL
Rule 51    Type -> STRING
Rule 52    Assignment -> ID ASSIGN Push_Assign Exp SEMICOLON
Rule 53    Push_Assign -> <empty>
Rule 54    Exp -> Logical_Or
Rule 55    Exp -> Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad
Rule 56    Exp -> Logical_Or DIFF Push_Diff Logical_Or Equity_Quad
Rule 57    Equity_Quad -> <empty>
Rule 58    Push_Equal -> <empty>
Rule 59    Push_Diff -> <empty>
Rule 60    Logical_Or -> Logical_And Or_Quad Multiple_Ands
Rule 61    Multiple_Ands -> OR Push_Or Logical_And Or_Quad Multiple_Ands
Rule 62    Multiple_Ands -> Epsilon
Rule 63    Or_Quad -> <empty>
Rule 64    Push_Or -> <empty>
Rule 65    Logical_And -> Logical_Not And_Quad Multiple_Nots
Rule 66    Multiple_Nots -> AND Push_And Logical_Not And_Quad Multiple_Nots
Rule 67    Multiple_Nots -> Epsilon
Rule 68    And_Quad -> <empty>
Rule 69    Push_And -> <empty>
Rule 70    Logical_Not -> Relational
Rule 71    Logical_Not -> NOT Push_Not Relational Not_Quad
Rule 72    Not_Quad -> <empty>
Rule 73    Push_Not -> <empty>
Rule 74    Relational -> Expression
Rule 75    Relational -> Expression LESS Push_Less Expression Relational_Quad
Rule 76    Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
Rule 77    Relational -> Expression GREATER Push_Greater Expression Relational_Quad
Rule 78    Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
Rule 79    Relational_Quad -> <empty>
Rule 80    Push_Less -> <empty>
Rule 81    Push_Less_Equal -> <empty>
Rule 82    Push_Greater -> <empty>
Rule 83    Push_Greater_Equal -> <empty>
Rule 84    Expression -> Term Sum_Sub_Quad Multiple_Terms
Rule 85    Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms
Rule 86    Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms
Rule 87    Multiple_Terms -> Epsilon
Rule 88    Sum_Sub_Quad -> <empty>
Rule 89    Push_Plus_Sign -> <empty>
Rule 90    Push_Minus_Sign -> <empty>
Rule 91    Term -> Factor Mult_Div_Mod_Quad Multiple_Factors
Rule 92    Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
Rule 93    Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
Rule 94    Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
Rule 95    Multiple_Factors -> Epsilon
Rule 96    Mult_Div_Mod_Quad -> <empty>
Rule 97    Push_Times_Sign -> <empty>
Rule 98    Push_Divide_Sign -> <empty>
Rule 99    Push_Mod_Sign -> <empty>
Rule 100   Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
Rule 101   Factor -> Var_Cte
Rule 102   Push_False_Bottom -> <empty>
Rule 103   Pop_False_Bottom -> <empty>
Rule 104   Var_Cte -> INT_CONST Save_Int_Const
Rule 105   Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const
Rule 106   Var_Cte -> FLOAT_CONST Save_Float_Const
Rule 107   Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
Rule 108   Var_Cte -> BOOL_CONST Save_Bool_Const
Rule 109   Var_Cte -> STRING_CONST Save_String_Const
Rule 110   Var_Cte -> ID Get_Id_Value
Rule 111   Save_Int_Const -> <empty>
Rule 112   Save_Neg_Int_Const -> <empty>
Rule 113   Save_Float_Const -> <empty>
Rule 114   Save_Neg_Float_Const -> <empty>
Rule 115   Save_Bool_Const -> <empty>
Rule 116   Save_String_Const -> <empty>
Rule 117   Get_Id_Value -> <empty>
Rule 118   Epsilon -> <empty>

Terminals, with rules where they appear

AND                  : 66
ASSIGN               : 47 52
BLACK                : 28
BLOCK_COMMENT        : 
BLUE                 : 24
BOOL                 : 50
BOOL_CONST           : 108
CIRCLE               : 20
COMMA                : 20 20 20 21 21 21
COMMENT              : 
CURLYB_CLOSE         : 8
CURLYB_OPEN          : 8
CYAN                 : 30
DIFF                 : 56
DIVIDE_SIGN          : 93
DRAW                 : 17
EIF                  : 36
ELSE                 : 38
EQUAL                : 55
FLOAT                : 49
FLOAT_CONST          : 106 107
FUNC                 : 
GRAY                 : 33
GREATER              : 77
GREATER_EQUAL        : 78
GREEN                : 23
ID                   : 46 47 52 110
IF                   : 35
INPUT                : 
INT                  : 48
INT_CONST            : 104 105
LESS                 : 75
LESS_EQUAL           : 76
LINE                 : 
MAGENTA              : 31
MINUS_SIGN           : 86 105 107
MOD_SIGN             : 94
NOT                  : 71
OR                   : 61
ORANGE               : 29
PAR_CLOSE            : 6 20 21 34 35 36 42 100
PAR_OPEN             : 6 20 21 34 35 36 42 100
PINK                 : 32
PLAY                 : 6
PLUS_SIGN            : 85
POINT                : 
POLYGON              : 
PRINT                : 34
PURPLE               : 26
RECTANGLE            : 
RED                  : 22
SEMICOLON            : 17 34 46 47 52
SQRB_CLOSE           : 
SQRB_OPEN            : 
SQUARE               : 21
STRING               : 51
STRING_CONST         : 109
TIMES_SIGN           : 92
TRIANGLE             : 
WHILE                : 42
WHITE                : 27
YELLOW               : 25
error                : 

Nonterminals, with rules where they appear

And_Quad             : 65 66
Assignment           : 13
Circle_Func          : 18
Declare_Var          : 2 12
Draw_Stmt            : 16
Drawable             : 17
Eif_Recursion        : 35 36
Epsilon              : 3 10 37 39 62 67 87 95
Equity_Quad          : 55 56
Exp                  : 20 20 20 21 21 21 34 35 36 42 47 52 100
Expression           : 74 75 75 76 76 77 77 78 78
Factor               : 91 92 93 94
Fill_While_Quads     : 42
Get_Id_Value         : 110
GoTo_Fill            : 35 36
GoTo_Global_Vars     : 2
GoTo_Play            : 2
If_Eif_Else          : 15
If_GoToF_Quad        : 35 36
Logical_And          : 60 61
Logical_Not          : 65 66
Logical_Or           : 54 55 55 56 56
Mult_Div_Mod_Quad    : 91 92 93 94
Multiple_Ands        : 60 61
Multiple_Factors     : 91 92 93 94
Multiple_Nots        : 65 66
Multiple_Statements  : 8 9
Multiple_Terms       : 84 85 86
Not_Quad             : 71
Obi                  : 0
Optional_Else        : 35
Or_Quad              : 60 61
Play                 : 1
Play_Init            : 6
Pop_False_Bottom     : 100
Prev_To_Play         : 1 2
Print                : 11
Push_And             : 66
Push_Assign          : 47 52
Push_Diff            : 56
Push_Divide_Sign     : 93
Push_Equal           : 55
Push_False_Bottom    : 100
Push_Greater         : 77
Push_Greater_Equal   : 78
Push_Less            : 75
Push_Less_Equal      : 76
Push_Minus_Sign      : 86
Push_Mod_Sign        : 94
Push_Not             : 71
Push_Or              : 61
Push_Plus_Sign       : 85
Push_Times_Sign      : 92
Push_While_Jump      : 42
Relational           : 70 71
Relational_Quad      : 75 76 77 78
Save_Bool_Const      : 108
Save_Float_Const     : 106
Save_Int_Const       : 104
Save_Neg_Float_Const : 107
Save_Neg_Int_Const   : 105
Save_String_Const    : 109
Selected_Color       : 20 21
Square_Func          : 19
Statement            : 9
Statements_Block     : 6 35 36 38 42
Sum_Sub_Quad         : 84 85 86
Term                 : 84 85 86
Type                 : 46 47
Var_Cte              : 101
While_Loop           : 14
While_Quad           : 42

Parsing method: LALR

state 0

    (0) S' -> . Obi
    (1) Obi -> . Prev_To_Play Play
    (2) Prev_To_Play -> . GoTo_Global_Vars Declare_Var GoTo_Play Prev_To_Play
    (3) Prev_To_Play -> . Epsilon
    (4) GoTo_Global_Vars -> .
    (118) Epsilon -> .

    INT             reduce using rule 4 (GoTo_Global_Vars -> .)
    FLOAT           reduce using rule 4 (GoTo_Global_Vars -> .)
    BOOL            reduce using rule 4 (GoTo_Global_Vars -> .)
    STRING          reduce using rule 4 (GoTo_Global_Vars -> .)
    PLAY            reduce using rule 118 (Epsilon -> .)

    Obi                            shift and go to state 1
    Epsilon                        shift and go to state 2
    Prev_To_Play                   shift and go to state 3
    GoTo_Global_Vars               shift and go to state 4

state 1

    (0) S' -> Obi .



state 2

    (3) Prev_To_Play -> Epsilon .

    PLAY            reduce using rule 3 (Prev_To_Play -> Epsilon .)


state 3

    (1) Obi -> Prev_To_Play . Play
    (6) Play -> . PLAY Play_Init PAR_OPEN PAR_CLOSE Statements_Block

    PLAY            shift and go to state 6

    Play                           shift and go to state 5

state 4

    (2) Prev_To_Play -> GoTo_Global_Vars . Declare_Var GoTo_Play Prev_To_Play
    (46) Declare_Var -> . Type ID SEMICOLON
    (47) Declare_Var -> . Type ID ASSIGN Push_Assign Exp SEMICOLON
    (48) Type -> . INT
    (49) Type -> . FLOAT
    (50) Type -> . BOOL
    (51) Type -> . STRING

    INT             shift and go to state 8
    FLOAT           shift and go to state 10
    BOOL            shift and go to state 11
    STRING          shift and go to state 7

    Declare_Var                    shift and go to state 9
    Type                           shift and go to state 12

state 5

    (1) Obi -> Prev_To_Play Play .

    $end            reduce using rule 1 (Obi -> Prev_To_Play Play .)


state 6

    (6) Play -> PLAY . Play_Init PAR_OPEN PAR_CLOSE Statements_Block
    (7) Play_Init -> .

    PAR_OPEN        reduce using rule 7 (Play_Init -> .)

    Play_Init                      shift and go to state 13

state 7

    (51) Type -> STRING .

    ID              reduce using rule 51 (Type -> STRING .)


state 8

    (48) Type -> INT .

    ID              reduce using rule 48 (Type -> INT .)


state 9

    (2) Prev_To_Play -> GoTo_Global_Vars Declare_Var . GoTo_Play Prev_To_Play
    (5) GoTo_Play -> .

    INT             reduce using rule 5 (GoTo_Play -> .)
    FLOAT           reduce using rule 5 (GoTo_Play -> .)
    BOOL            reduce using rule 5 (GoTo_Play -> .)
    STRING          reduce using rule 5 (GoTo_Play -> .)
    PLAY            reduce using rule 5 (GoTo_Play -> .)

    GoTo_Play                      shift and go to state 14

state 10

    (49) Type -> FLOAT .

    ID              reduce using rule 49 (Type -> FLOAT .)


state 11

    (50) Type -> BOOL .

    ID              reduce using rule 50 (Type -> BOOL .)


state 12

    (46) Declare_Var -> Type . ID SEMICOLON
    (47) Declare_Var -> Type . ID ASSIGN Push_Assign Exp SEMICOLON

    ID              shift and go to state 15


state 13

    (6) Play -> PLAY Play_Init . PAR_OPEN PAR_CLOSE Statements_Block

    PAR_OPEN        shift and go to state 16


state 14

    (2) Prev_To_Play -> GoTo_Global_Vars Declare_Var GoTo_Play . Prev_To_Play
    (2) Prev_To_Play -> . GoTo_Global_Vars Declare_Var GoTo_Play Prev_To_Play
    (3) Prev_To_Play -> . Epsilon
    (4) GoTo_Global_Vars -> .
    (118) Epsilon -> .

    INT             reduce using rule 4 (GoTo_Global_Vars -> .)
    FLOAT           reduce using rule 4 (GoTo_Global_Vars -> .)
    BOOL            reduce using rule 4 (GoTo_Global_Vars -> .)
    STRING          reduce using rule 4 (GoTo_Global_Vars -> .)
    PLAY            reduce using rule 118 (Epsilon -> .)

    Prev_To_Play                   shift and go to state 17
    GoTo_Global_Vars               shift and go to state 4
    Epsilon                        shift and go to state 2

state 15

    (46) Declare_Var -> Type ID . SEMICOLON
    (47) Declare_Var -> Type ID . ASSIGN Push_Assign Exp SEMICOLON

    SEMICOLON       shift and go to state 18
    ASSIGN          shift and go to state 19


state 16

    (6) Play -> PLAY Play_Init PAR_OPEN . PAR_CLOSE Statements_Block

    PAR_CLOSE       shift and go to state 20


state 17

    (2) Prev_To_Play -> GoTo_Global_Vars Declare_Var GoTo_Play Prev_To_Play .

    PLAY            reduce using rule 2 (Prev_To_Play -> GoTo_Global_Vars Declare_Var GoTo_Play Prev_To_Play .)


state 18

    (46) Declare_Var -> Type ID SEMICOLON .

    PRINT           reduce using rule 46 (Declare_Var -> Type ID SEMICOLON .)
    ID              reduce using rule 46 (Declare_Var -> Type ID SEMICOLON .)
    WHILE           reduce using rule 46 (Declare_Var -> Type ID SEMICOLON .)
    IF              reduce using rule 46 (Declare_Var -> Type ID SEMICOLON .)
    DRAW            reduce using rule 46 (Declare_Var -> Type ID SEMICOLON .)
    INT             reduce using rule 46 (Declare_Var -> Type ID SEMICOLON .)
    FLOAT           reduce using rule 46 (Declare_Var -> Type ID SEMICOLON .)
    BOOL            reduce using rule 46 (Declare_Var -> Type ID SEMICOLON .)
    STRING          reduce using rule 46 (Declare_Var -> Type ID SEMICOLON .)
    CURLYB_CLOSE    reduce using rule 46 (Declare_Var -> Type ID SEMICOLON .)
    PLAY            reduce using rule 46 (Declare_Var -> Type ID SEMICOLON .)


state 19

    (47) Declare_Var -> Type ID ASSIGN . Push_Assign Exp SEMICOLON
    (53) Push_Assign -> .

    NOT             reduce using rule 53 (Push_Assign -> .)
    PAR_OPEN        reduce using rule 53 (Push_Assign -> .)
    INT_CONST       reduce using rule 53 (Push_Assign -> .)
    MINUS_SIGN      reduce using rule 53 (Push_Assign -> .)
    FLOAT_CONST     reduce using rule 53 (Push_Assign -> .)
    BOOL_CONST      reduce using rule 53 (Push_Assign -> .)
    STRING_CONST    reduce using rule 53 (Push_Assign -> .)
    ID              reduce using rule 53 (Push_Assign -> .)

    Push_Assign                    shift and go to state 21

state 20

    (6) Play -> PLAY Play_Init PAR_OPEN PAR_CLOSE . Statements_Block
    (8) Statements_Block -> . CURLYB_OPEN Multiple_Statements CURLYB_CLOSE

    CURLYB_OPEN     shift and go to state 23

    Statements_Block               shift and go to state 22

state 21

    (47) Declare_Var -> Type ID ASSIGN Push_Assign . Exp SEMICOLON
    (54) Exp -> . Logical_Or
    (55) Exp -> . Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad
    (56) Exp -> . Logical_Or DIFF Push_Diff Logical_Or Equity_Quad
    (60) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (65) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (70) Logical_Not -> . Relational
    (71) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (74) Relational -> . Expression
    (75) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (76) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (77) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (78) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (84) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (91) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (100) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (101) Factor -> . Var_Cte
    (104) Var_Cte -> . INT_CONST Save_Int_Const
    (105) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (106) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (107) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (108) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (109) Var_Cte -> . STRING_CONST Save_String_Const
    (110) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 40
    PAR_OPEN        shift and go to state 24
    INT_CONST       shift and go to state 27
    MINUS_SIGN      shift and go to state 39
    FLOAT_CONST     shift and go to state 25
    BOOL_CONST      shift and go to state 29
    STRING_CONST    shift and go to state 30
    ID              shift and go to state 38

    Factor                         shift and go to state 32
    Relational                     shift and go to state 26
    Logical_Not                    shift and go to state 28
    Term                           shift and go to state 31
    Var_Cte                        shift and go to state 33
    Logical_Or                     shift and go to state 34
    Logical_And                    shift and go to state 35
    Exp                            shift and go to state 36
    Expression                     shift and go to state 37

state 22

    (6) Play -> PLAY Play_Init PAR_OPEN PAR_CLOSE Statements_Block .

    $end            reduce using rule 6 (Play -> PLAY Play_Init PAR_OPEN PAR_CLOSE Statements_Block .)


state 23

    (8) Statements_Block -> CURLYB_OPEN . Multiple_Statements CURLYB_CLOSE
    (9) Multiple_Statements -> . Statement Multiple_Statements
    (10) Multiple_Statements -> . Epsilon
    (11) Statement -> . Print
    (12) Statement -> . Declare_Var
    (13) Statement -> . Assignment
    (14) Statement -> . While_Loop
    (15) Statement -> . If_Eif_Else
    (16) Statement -> . Draw_Stmt
    (118) Epsilon -> .
    (34) Print -> . PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON
    (46) Declare_Var -> . Type ID SEMICOLON
    (47) Declare_Var -> . Type ID ASSIGN Push_Assign Exp SEMICOLON
    (52) Assignment -> . ID ASSIGN Push_Assign Exp SEMICOLON
    (42) While_Loop -> . WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads
    (35) If_Eif_Else -> . IF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion Optional_Else
    (17) Draw_Stmt -> . DRAW Drawable SEMICOLON
    (48) Type -> . INT
    (49) Type -> . FLOAT
    (50) Type -> . BOOL
    (51) Type -> . STRING

    CURLYB_CLOSE    reduce using rule 118 (Epsilon -> .)
    PRINT           shift and go to state 45
    ID              shift and go to state 52
    WHILE           shift and go to state 43
    IF              shift and go to state 53
    DRAW            shift and go to state 41
    INT             shift and go to state 8
    FLOAT           shift and go to state 10
    BOOL            shift and go to state 11
    STRING          shift and go to state 7

    Multiple_Statements            shift and go to state 48
    While_Loop                     shift and go to state 49
    Epsilon                        shift and go to state 47
    If_Eif_Else                    shift and go to state 51
    Draw_Stmt                      shift and go to state 46
    Declare_Var                    shift and go to state 50
    Statement                      shift and go to state 44
    Assignment                     shift and go to state 54
    Print                          shift and go to state 42
    Type                           shift and go to state 12

state 24

    (100) Factor -> PAR_OPEN . Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (102) Push_False_Bottom -> .

    NOT             reduce using rule 102 (Push_False_Bottom -> .)
    PAR_OPEN        reduce using rule 102 (Push_False_Bottom -> .)
    INT_CONST       reduce using rule 102 (Push_False_Bottom -> .)
    MINUS_SIGN      reduce using rule 102 (Push_False_Bottom -> .)
    FLOAT_CONST     reduce using rule 102 (Push_False_Bottom -> .)
    BOOL_CONST      reduce using rule 102 (Push_False_Bottom -> .)
    STRING_CONST    reduce using rule 102 (Push_False_Bottom -> .)
    ID              reduce using rule 102 (Push_False_Bottom -> .)

    Push_False_Bottom              shift and go to state 55

state 25

    (106) Var_Cte -> FLOAT_CONST . Save_Float_Const
    (113) Save_Float_Const -> .

    TIMES_SIGN      reduce using rule 113 (Save_Float_Const -> .)
    DIVIDE_SIGN     reduce using rule 113 (Save_Float_Const -> .)
    MOD_SIGN        reduce using rule 113 (Save_Float_Const -> .)
    PLUS_SIGN       reduce using rule 113 (Save_Float_Const -> .)
    MINUS_SIGN      reduce using rule 113 (Save_Float_Const -> .)
    LESS            reduce using rule 113 (Save_Float_Const -> .)
    LESS_EQUAL      reduce using rule 113 (Save_Float_Const -> .)
    GREATER         reduce using rule 113 (Save_Float_Const -> .)
    GREATER_EQUAL   reduce using rule 113 (Save_Float_Const -> .)
    AND             reduce using rule 113 (Save_Float_Const -> .)
    OR              reduce using rule 113 (Save_Float_Const -> .)
    EQUAL           reduce using rule 113 (Save_Float_Const -> .)
    DIFF            reduce using rule 113 (Save_Float_Const -> .)
    SEMICOLON       reduce using rule 113 (Save_Float_Const -> .)
    PAR_CLOSE       reduce using rule 113 (Save_Float_Const -> .)
    COMMA           reduce using rule 113 (Save_Float_Const -> .)

    Save_Float_Const               shift and go to state 56

state 26

    (70) Logical_Not -> Relational .

    AND             reduce using rule 70 (Logical_Not -> Relational .)
    OR              reduce using rule 70 (Logical_Not -> Relational .)
    SEMICOLON       reduce using rule 70 (Logical_Not -> Relational .)
    PAR_CLOSE       reduce using rule 70 (Logical_Not -> Relational .)
    COMMA           reduce using rule 70 (Logical_Not -> Relational .)
    EQUAL           reduce using rule 70 (Logical_Not -> Relational .)
    DIFF            reduce using rule 70 (Logical_Not -> Relational .)


state 27

    (104) Var_Cte -> INT_CONST . Save_Int_Const
    (111) Save_Int_Const -> .

    TIMES_SIGN      reduce using rule 111 (Save_Int_Const -> .)
    DIVIDE_SIGN     reduce using rule 111 (Save_Int_Const -> .)
    MOD_SIGN        reduce using rule 111 (Save_Int_Const -> .)
    PLUS_SIGN       reduce using rule 111 (Save_Int_Const -> .)
    MINUS_SIGN      reduce using rule 111 (Save_Int_Const -> .)
    LESS            reduce using rule 111 (Save_Int_Const -> .)
    LESS_EQUAL      reduce using rule 111 (Save_Int_Const -> .)
    GREATER         reduce using rule 111 (Save_Int_Const -> .)
    GREATER_EQUAL   reduce using rule 111 (Save_Int_Const -> .)
    AND             reduce using rule 111 (Save_Int_Const -> .)
    OR              reduce using rule 111 (Save_Int_Const -> .)
    EQUAL           reduce using rule 111 (Save_Int_Const -> .)
    DIFF            reduce using rule 111 (Save_Int_Const -> .)
    SEMICOLON       reduce using rule 111 (Save_Int_Const -> .)
    PAR_CLOSE       reduce using rule 111 (Save_Int_Const -> .)
    COMMA           reduce using rule 111 (Save_Int_Const -> .)

    Save_Int_Const                 shift and go to state 57

state 28

    (65) Logical_And -> Logical_Not . And_Quad Multiple_Nots
    (68) And_Quad -> .

    AND             reduce using rule 68 (And_Quad -> .)
    OR              reduce using rule 68 (And_Quad -> .)
    EQUAL           reduce using rule 68 (And_Quad -> .)
    DIFF            reduce using rule 68 (And_Quad -> .)
    SEMICOLON       reduce using rule 68 (And_Quad -> .)
    PAR_CLOSE       reduce using rule 68 (And_Quad -> .)
    COMMA           reduce using rule 68 (And_Quad -> .)

    And_Quad                       shift and go to state 58

state 29

    (108) Var_Cte -> BOOL_CONST . Save_Bool_Const
    (115) Save_Bool_Const -> .

    TIMES_SIGN      reduce using rule 115 (Save_Bool_Const -> .)
    DIVIDE_SIGN     reduce using rule 115 (Save_Bool_Const -> .)
    MOD_SIGN        reduce using rule 115 (Save_Bool_Const -> .)
    PLUS_SIGN       reduce using rule 115 (Save_Bool_Const -> .)
    MINUS_SIGN      reduce using rule 115 (Save_Bool_Const -> .)
    LESS            reduce using rule 115 (Save_Bool_Const -> .)
    LESS_EQUAL      reduce using rule 115 (Save_Bool_Const -> .)
    GREATER         reduce using rule 115 (Save_Bool_Const -> .)
    GREATER_EQUAL   reduce using rule 115 (Save_Bool_Const -> .)
    AND             reduce using rule 115 (Save_Bool_Const -> .)
    OR              reduce using rule 115 (Save_Bool_Const -> .)
    EQUAL           reduce using rule 115 (Save_Bool_Const -> .)
    DIFF            reduce using rule 115 (Save_Bool_Const -> .)
    SEMICOLON       reduce using rule 115 (Save_Bool_Const -> .)
    PAR_CLOSE       reduce using rule 115 (Save_Bool_Const -> .)
    COMMA           reduce using rule 115 (Save_Bool_Const -> .)

    Save_Bool_Const                shift and go to state 59

state 30

    (109) Var_Cte -> STRING_CONST . Save_String_Const
    (116) Save_String_Const -> .

    TIMES_SIGN      reduce using rule 116 (Save_String_Const -> .)
    DIVIDE_SIGN     reduce using rule 116 (Save_String_Const -> .)
    MOD_SIGN        reduce using rule 116 (Save_String_Const -> .)
    PLUS_SIGN       reduce using rule 116 (Save_String_Const -> .)
    MINUS_SIGN      reduce using rule 116 (Save_String_Const -> .)
    LESS            reduce using rule 116 (Save_String_Const -> .)
    LESS_EQUAL      reduce using rule 116 (Save_String_Const -> .)
    GREATER         reduce using rule 116 (Save_String_Const -> .)
    GREATER_EQUAL   reduce using rule 116 (Save_String_Const -> .)
    AND             reduce using rule 116 (Save_String_Const -> .)
    OR              reduce using rule 116 (Save_String_Const -> .)
    EQUAL           reduce using rule 116 (Save_String_Const -> .)
    DIFF            reduce using rule 116 (Save_String_Const -> .)
    SEMICOLON       reduce using rule 116 (Save_String_Const -> .)
    PAR_CLOSE       reduce using rule 116 (Save_String_Const -> .)
    COMMA           reduce using rule 116 (Save_String_Const -> .)

    Save_String_Const              shift and go to state 60

state 31

    (84) Expression -> Term . Sum_Sub_Quad Multiple_Terms
    (88) Sum_Sub_Quad -> .

    PLUS_SIGN       reduce using rule 88 (Sum_Sub_Quad -> .)
    MINUS_SIGN      reduce using rule 88 (Sum_Sub_Quad -> .)
    LESS            reduce using rule 88 (Sum_Sub_Quad -> .)
    LESS_EQUAL      reduce using rule 88 (Sum_Sub_Quad -> .)
    GREATER         reduce using rule 88 (Sum_Sub_Quad -> .)
    GREATER_EQUAL   reduce using rule 88 (Sum_Sub_Quad -> .)
    AND             reduce using rule 88 (Sum_Sub_Quad -> .)
    OR              reduce using rule 88 (Sum_Sub_Quad -> .)
    EQUAL           reduce using rule 88 (Sum_Sub_Quad -> .)
    DIFF            reduce using rule 88 (Sum_Sub_Quad -> .)
    SEMICOLON       reduce using rule 88 (Sum_Sub_Quad -> .)
    PAR_CLOSE       reduce using rule 88 (Sum_Sub_Quad -> .)
    COMMA           reduce using rule 88 (Sum_Sub_Quad -> .)

    Sum_Sub_Quad                   shift and go to state 61

state 32

    (91) Term -> Factor . Mult_Div_Mod_Quad Multiple_Factors
    (96) Mult_Div_Mod_Quad -> .

    TIMES_SIGN      reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    DIVIDE_SIGN     reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    MOD_SIGN        reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    PLUS_SIGN       reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    MINUS_SIGN      reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    LESS            reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    LESS_EQUAL      reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    GREATER         reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    GREATER_EQUAL   reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    AND             reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    OR              reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    EQUAL           reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    DIFF            reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    SEMICOLON       reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    PAR_CLOSE       reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    COMMA           reduce using rule 96 (Mult_Div_Mod_Quad -> .)

    Mult_Div_Mod_Quad              shift and go to state 62

state 33

    (101) Factor -> Var_Cte .

    TIMES_SIGN      reduce using rule 101 (Factor -> Var_Cte .)
    DIVIDE_SIGN     reduce using rule 101 (Factor -> Var_Cte .)
    MOD_SIGN        reduce using rule 101 (Factor -> Var_Cte .)
    PLUS_SIGN       reduce using rule 101 (Factor -> Var_Cte .)
    MINUS_SIGN      reduce using rule 101 (Factor -> Var_Cte .)
    LESS            reduce using rule 101 (Factor -> Var_Cte .)
    LESS_EQUAL      reduce using rule 101 (Factor -> Var_Cte .)
    GREATER         reduce using rule 101 (Factor -> Var_Cte .)
    GREATER_EQUAL   reduce using rule 101 (Factor -> Var_Cte .)
    AND             reduce using rule 101 (Factor -> Var_Cte .)
    OR              reduce using rule 101 (Factor -> Var_Cte .)
    EQUAL           reduce using rule 101 (Factor -> Var_Cte .)
    DIFF            reduce using rule 101 (Factor -> Var_Cte .)
    COMMA           reduce using rule 101 (Factor -> Var_Cte .)
    SEMICOLON       reduce using rule 101 (Factor -> Var_Cte .)
    PAR_CLOSE       reduce using rule 101 (Factor -> Var_Cte .)


state 34

    (54) Exp -> Logical_Or .
    (55) Exp -> Logical_Or . EQUAL Push_Equal Logical_Or Equity_Quad
    (56) Exp -> Logical_Or . DIFF Push_Diff Logical_Or Equity_Quad

    SEMICOLON       reduce using rule 54 (Exp -> Logical_Or .)
    COMMA           reduce using rule 54 (Exp -> Logical_Or .)
    PAR_CLOSE       reduce using rule 54 (Exp -> Logical_Or .)
    EQUAL           shift and go to state 63
    DIFF            shift and go to state 64


state 35

    (60) Logical_Or -> Logical_And . Or_Quad Multiple_Ands
    (63) Or_Quad -> .

    OR              reduce using rule 63 (Or_Quad -> .)
    EQUAL           reduce using rule 63 (Or_Quad -> .)
    DIFF            reduce using rule 63 (Or_Quad -> .)
    SEMICOLON       reduce using rule 63 (Or_Quad -> .)
    PAR_CLOSE       reduce using rule 63 (Or_Quad -> .)
    COMMA           reduce using rule 63 (Or_Quad -> .)

    Or_Quad                        shift and go to state 65

state 36

    (47) Declare_Var -> Type ID ASSIGN Push_Assign Exp . SEMICOLON

    SEMICOLON       shift and go to state 66


state 37

    (74) Relational -> Expression .
    (75) Relational -> Expression . LESS Push_Less Expression Relational_Quad
    (76) Relational -> Expression . LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (77) Relational -> Expression . GREATER Push_Greater Expression Relational_Quad
    (78) Relational -> Expression . GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad

    AND             reduce using rule 74 (Relational -> Expression .)
    OR              reduce using rule 74 (Relational -> Expression .)
    EQUAL           reduce using rule 74 (Relational -> Expression .)
    DIFF            reduce using rule 74 (Relational -> Expression .)
    PAR_CLOSE       reduce using rule 74 (Relational -> Expression .)
    COMMA           reduce using rule 74 (Relational -> Expression .)
    SEMICOLON       reduce using rule 74 (Relational -> Expression .)
    LESS            shift and go to state 67
    LESS_EQUAL      shift and go to state 68
    GREATER         shift and go to state 70
    GREATER_EQUAL   shift and go to state 69


state 38

    (110) Var_Cte -> ID . Get_Id_Value
    (117) Get_Id_Value -> .

    TIMES_SIGN      reduce using rule 117 (Get_Id_Value -> .)
    DIVIDE_SIGN     reduce using rule 117 (Get_Id_Value -> .)
    MOD_SIGN        reduce using rule 117 (Get_Id_Value -> .)
    PLUS_SIGN       reduce using rule 117 (Get_Id_Value -> .)
    MINUS_SIGN      reduce using rule 117 (Get_Id_Value -> .)
    LESS            reduce using rule 117 (Get_Id_Value -> .)
    LESS_EQUAL      reduce using rule 117 (Get_Id_Value -> .)
    GREATER         reduce using rule 117 (Get_Id_Value -> .)
    GREATER_EQUAL   reduce using rule 117 (Get_Id_Value -> .)
    AND             reduce using rule 117 (Get_Id_Value -> .)
    OR              reduce using rule 117 (Get_Id_Value -> .)
    EQUAL           reduce using rule 117 (Get_Id_Value -> .)
    DIFF            reduce using rule 117 (Get_Id_Value -> .)
    SEMICOLON       reduce using rule 117 (Get_Id_Value -> .)
    PAR_CLOSE       reduce using rule 117 (Get_Id_Value -> .)
    COMMA           reduce using rule 117 (Get_Id_Value -> .)

    Get_Id_Value                   shift and go to state 71

state 39

    (105) Var_Cte -> MINUS_SIGN . INT_CONST Save_Neg_Int_Const
    (107) Var_Cte -> MINUS_SIGN . FLOAT_CONST Save_Neg_Float_Const

    INT_CONST       shift and go to state 72
    FLOAT_CONST     shift and go to state 73


state 40

    (71) Logical_Not -> NOT . Push_Not Relational Not_Quad
    (73) Push_Not -> .

    PAR_OPEN        reduce using rule 73 (Push_Not -> .)
    INT_CONST       reduce using rule 73 (Push_Not -> .)
    MINUS_SIGN      reduce using rule 73 (Push_Not -> .)
    FLOAT_CONST     reduce using rule 73 (Push_Not -> .)
    BOOL_CONST      reduce using rule 73 (Push_Not -> .)
    STRING_CONST    reduce using rule 73 (Push_Not -> .)
    ID              reduce using rule 73 (Push_Not -> .)

    Push_Not                       shift and go to state 74

state 41

    (17) Draw_Stmt -> DRAW . Drawable SEMICOLON
    (18) Drawable -> . Circle_Func
    (19) Drawable -> . Square_Func
    (20) Circle_Func -> . CIRCLE PAR_OPEN Exp COMMA Exp COMMA Exp COMMA Selected_Color PAR_CLOSE
    (21) Square_Func -> . SQUARE PAR_OPEN Exp COMMA Exp COMMA Exp COMMA Selected_Color PAR_CLOSE

    CIRCLE          shift and go to state 78
    SQUARE          shift and go to state 76

    Square_Func                    shift and go to state 77
    Drawable                       shift and go to state 79
    Circle_Func                    shift and go to state 75

state 42

    (11) Statement -> Print .

    PRINT           reduce using rule 11 (Statement -> Print .)
    ID              reduce using rule 11 (Statement -> Print .)
    WHILE           reduce using rule 11 (Statement -> Print .)
    IF              reduce using rule 11 (Statement -> Print .)
    DRAW            reduce using rule 11 (Statement -> Print .)
    INT             reduce using rule 11 (Statement -> Print .)
    FLOAT           reduce using rule 11 (Statement -> Print .)
    BOOL            reduce using rule 11 (Statement -> Print .)
    STRING          reduce using rule 11 (Statement -> Print .)
    CURLYB_CLOSE    reduce using rule 11 (Statement -> Print .)


state 43

    (42) While_Loop -> WHILE . Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads
    (43) Push_While_Jump -> .

    PAR_OPEN        reduce using rule 43 (Push_While_Jump -> .)

    Push_While_Jump                shift and go to state 80

state 44

    (9) Multiple_Statements -> Statement . Multiple_Statements
    (9) Multiple_Statements -> . Statement Multiple_Statements
    (10) Multiple_Statements -> . Epsilon
    (11) Statement -> . Print
    (12) Statement -> . Declare_Var
    (13) Statement -> . Assignment
    (14) Statement -> . While_Loop
    (15) Statement -> . If_Eif_Else
    (16) Statement -> . Draw_Stmt
    (118) Epsilon -> .
    (34) Print -> . PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON
    (46) Declare_Var -> . Type ID SEMICOLON
    (47) Declare_Var -> . Type ID ASSIGN Push_Assign Exp SEMICOLON
    (52) Assignment -> . ID ASSIGN Push_Assign Exp SEMICOLON
    (42) While_Loop -> . WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads
    (35) If_Eif_Else -> . IF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion Optional_Else
    (17) Draw_Stmt -> . DRAW Drawable SEMICOLON
    (48) Type -> . INT
    (49) Type -> . FLOAT
    (50) Type -> . BOOL
    (51) Type -> . STRING

    CURLYB_CLOSE    reduce using rule 118 (Epsilon -> .)
    PRINT           shift and go to state 45
    ID              shift and go to state 52
    WHILE           shift and go to state 43
    IF              shift and go to state 53
    DRAW            shift and go to state 41
    INT             shift and go to state 8
    FLOAT           shift and go to state 10
    BOOL            shift and go to state 11
    STRING          shift and go to state 7

    Multiple_Statements            shift and go to state 81
    While_Loop                     shift and go to state 49
    Epsilon                        shift and go to state 47
    If_Eif_Else                    shift and go to state 51
    Draw_Stmt                      shift and go to state 46
    Declare_Var                    shift and go to state 50
    Statement                      shift and go to state 44
    Assignment                     shift and go to state 54
    Print                          shift and go to state 42
    Type                           shift and go to state 12

state 45

    (34) Print -> PRINT . PAR_OPEN Exp PAR_CLOSE SEMICOLON

    PAR_OPEN        shift and go to state 82


state 46

    (16) Statement -> Draw_Stmt .

    PRINT           reduce using rule 16 (Statement -> Draw_Stmt .)
    ID              reduce using rule 16 (Statement -> Draw_Stmt .)
    WHILE           reduce using rule 16 (Statement -> Draw_Stmt .)
    IF              reduce using rule 16 (Statement -> Draw_Stmt .)
    DRAW            reduce using rule 16 (Statement -> Draw_Stmt .)
    INT             reduce using rule 16 (Statement -> Draw_Stmt .)
    FLOAT           reduce using rule 16 (Statement -> Draw_Stmt .)
    BOOL            reduce using rule 16 (Statement -> Draw_Stmt .)
    STRING          reduce using rule 16 (Statement -> Draw_Stmt .)
    CURLYB_CLOSE    reduce using rule 16 (Statement -> Draw_Stmt .)


state 47

    (10) Multiple_Statements -> Epsilon .

    CURLYB_CLOSE    reduce using rule 10 (Multiple_Statements -> Epsilon .)


state 48

    (8) Statements_Block -> CURLYB_OPEN Multiple_Statements . CURLYB_CLOSE

    CURLYB_CLOSE    shift and go to state 83


state 49

    (14) Statement -> While_Loop .

    PRINT           reduce using rule 14 (Statement -> While_Loop .)
    ID              reduce using rule 14 (Statement -> While_Loop .)
    WHILE           reduce using rule 14 (Statement -> While_Loop .)
    IF              reduce using rule 14 (Statement -> While_Loop .)
    DRAW            reduce using rule 14 (Statement -> While_Loop .)
    INT             reduce using rule 14 (Statement -> While_Loop .)
    FLOAT           reduce using rule 14 (Statement -> While_Loop .)
    BOOL            reduce using rule 14 (Statement -> While_Loop .)
    STRING          reduce using rule 14 (Statement -> While_Loop .)
    CURLYB_CLOSE    reduce using rule 14 (Statement -> While_Loop .)


state 50

    (12) Statement -> Declare_Var .

    PRINT           reduce using rule 12 (Statement -> Declare_Var .)
    ID              reduce using rule 12 (Statement -> Declare_Var .)
    WHILE           reduce using rule 12 (Statement -> Declare_Var .)
    IF              reduce using rule 12 (Statement -> Declare_Var .)
    DRAW            reduce using rule 12 (Statement -> Declare_Var .)
    INT             reduce using rule 12 (Statement -> Declare_Var .)
    FLOAT           reduce using rule 12 (Statement -> Declare_Var .)
    BOOL            reduce using rule 12 (Statement -> Declare_Var .)
    STRING          reduce using rule 12 (Statement -> Declare_Var .)
    CURLYB_CLOSE    reduce using rule 12 (Statement -> Declare_Var .)


state 51

    (15) Statement -> If_Eif_Else .

    PRINT           reduce using rule 15 (Statement -> If_Eif_Else .)
    ID              reduce using rule 15 (Statement -> If_Eif_Else .)
    WHILE           reduce using rule 15 (Statement -> If_Eif_Else .)
    IF              reduce using rule 15 (Statement -> If_Eif_Else .)
    DRAW            reduce using rule 15 (Statement -> If_Eif_Else .)
    INT             reduce using rule 15 (Statement -> If_Eif_Else .)
    FLOAT           reduce using rule 15 (Statement -> If_Eif_Else .)
    BOOL            reduce using rule 15 (Statement -> If_Eif_Else .)
    STRING          reduce using rule 15 (Statement -> If_Eif_Else .)
    CURLYB_CLOSE    reduce using rule 15 (Statement -> If_Eif_Else .)


state 52

    (52) Assignment -> ID . ASSIGN Push_Assign Exp SEMICOLON

    ASSIGN          shift and go to state 84


state 53

    (35) If_Eif_Else -> IF . PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion Optional_Else

    PAR_OPEN        shift and go to state 85


state 54

    (13) Statement -> Assignment .

    PRINT           reduce using rule 13 (Statement -> Assignment .)
    ID              reduce using rule 13 (Statement -> Assignment .)
    WHILE           reduce using rule 13 (Statement -> Assignment .)
    IF              reduce using rule 13 (Statement -> Assignment .)
    DRAW            reduce using rule 13 (Statement -> Assignment .)
    INT             reduce using rule 13 (Statement -> Assignment .)
    FLOAT           reduce using rule 13 (Statement -> Assignment .)
    BOOL            reduce using rule 13 (Statement -> Assignment .)
    STRING          reduce using rule 13 (Statement -> Assignment .)
    CURLYB_CLOSE    reduce using rule 13 (Statement -> Assignment .)


state 55

    (100) Factor -> PAR_OPEN Push_False_Bottom . Exp PAR_CLOSE Pop_False_Bottom
    (54) Exp -> . Logical_Or
    (55) Exp -> . Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad
    (56) Exp -> . Logical_Or DIFF Push_Diff Logical_Or Equity_Quad
    (60) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (65) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (70) Logical_Not -> . Relational
    (71) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (74) Relational -> . Expression
    (75) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (76) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (77) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (78) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (84) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (91) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (100) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (101) Factor -> . Var_Cte
    (104) Var_Cte -> . INT_CONST Save_Int_Const
    (105) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (106) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (107) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (108) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (109) Var_Cte -> . STRING_CONST Save_String_Const
    (110) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 40
    PAR_OPEN        shift and go to state 24
    INT_CONST       shift and go to state 27
    MINUS_SIGN      shift and go to state 39
    FLOAT_CONST     shift and go to state 25
    BOOL_CONST      shift and go to state 29
    STRING_CONST    shift and go to state 30
    ID              shift and go to state 38

    Factor                         shift and go to state 32
    Relational                     shift and go to state 26
    Logical_Not                    shift and go to state 28
    Term                           shift and go to state 31
    Var_Cte                        shift and go to state 33
    Logical_Or                     shift and go to state 34
    Logical_And                    shift and go to state 35
    Exp                            shift and go to state 86
    Expression                     shift and go to state 37

state 56

    (106) Var_Cte -> FLOAT_CONST Save_Float_Const .

    TIMES_SIGN      reduce using rule 106 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    DIVIDE_SIGN     reduce using rule 106 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    MOD_SIGN        reduce using rule 106 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    PLUS_SIGN       reduce using rule 106 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    MINUS_SIGN      reduce using rule 106 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    LESS            reduce using rule 106 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    LESS_EQUAL      reduce using rule 106 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    GREATER         reduce using rule 106 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    GREATER_EQUAL   reduce using rule 106 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    AND             reduce using rule 106 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    OR              reduce using rule 106 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    EQUAL           reduce using rule 106 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    DIFF            reduce using rule 106 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    SEMICOLON       reduce using rule 106 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    PAR_CLOSE       reduce using rule 106 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    COMMA           reduce using rule 106 (Var_Cte -> FLOAT_CONST Save_Float_Const .)


state 57

    (104) Var_Cte -> INT_CONST Save_Int_Const .

    TIMES_SIGN      reduce using rule 104 (Var_Cte -> INT_CONST Save_Int_Const .)
    DIVIDE_SIGN     reduce using rule 104 (Var_Cte -> INT_CONST Save_Int_Const .)
    MOD_SIGN        reduce using rule 104 (Var_Cte -> INT_CONST Save_Int_Const .)
    PLUS_SIGN       reduce using rule 104 (Var_Cte -> INT_CONST Save_Int_Const .)
    MINUS_SIGN      reduce using rule 104 (Var_Cte -> INT_CONST Save_Int_Const .)
    LESS            reduce using rule 104 (Var_Cte -> INT_CONST Save_Int_Const .)
    LESS_EQUAL      reduce using rule 104 (Var_Cte -> INT_CONST Save_Int_Const .)
    GREATER         reduce using rule 104 (Var_Cte -> INT_CONST Save_Int_Const .)
    GREATER_EQUAL   reduce using rule 104 (Var_Cte -> INT_CONST Save_Int_Const .)
    AND             reduce using rule 104 (Var_Cte -> INT_CONST Save_Int_Const .)
    OR              reduce using rule 104 (Var_Cte -> INT_CONST Save_Int_Const .)
    EQUAL           reduce using rule 104 (Var_Cte -> INT_CONST Save_Int_Const .)
    DIFF            reduce using rule 104 (Var_Cte -> INT_CONST Save_Int_Const .)
    SEMICOLON       reduce using rule 104 (Var_Cte -> INT_CONST Save_Int_Const .)
    PAR_CLOSE       reduce using rule 104 (Var_Cte -> INT_CONST Save_Int_Const .)
    COMMA           reduce using rule 104 (Var_Cte -> INT_CONST Save_Int_Const .)


state 58

    (65) Logical_And -> Logical_Not And_Quad . Multiple_Nots
    (66) Multiple_Nots -> . AND Push_And Logical_Not And_Quad Multiple_Nots
    (67) Multiple_Nots -> . Epsilon
    (118) Epsilon -> .

    AND             shift and go to state 87
    OR              reduce using rule 118 (Epsilon -> .)
    EQUAL           reduce using rule 118 (Epsilon -> .)
    DIFF            reduce using rule 118 (Epsilon -> .)
    SEMICOLON       reduce using rule 118 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 118 (Epsilon -> .)
    COMMA           reduce using rule 118 (Epsilon -> .)

    Multiple_Nots                  shift and go to state 89
    Epsilon                        shift and go to state 88

state 59

    (108) Var_Cte -> BOOL_CONST Save_Bool_Const .

    TIMES_SIGN      reduce using rule 108 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    DIVIDE_SIGN     reduce using rule 108 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    MOD_SIGN        reduce using rule 108 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    PLUS_SIGN       reduce using rule 108 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    MINUS_SIGN      reduce using rule 108 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    LESS            reduce using rule 108 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    LESS_EQUAL      reduce using rule 108 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    GREATER         reduce using rule 108 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    GREATER_EQUAL   reduce using rule 108 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    AND             reduce using rule 108 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    OR              reduce using rule 108 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    EQUAL           reduce using rule 108 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    DIFF            reduce using rule 108 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    SEMICOLON       reduce using rule 108 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    PAR_CLOSE       reduce using rule 108 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    COMMA           reduce using rule 108 (Var_Cte -> BOOL_CONST Save_Bool_Const .)


state 60

    (109) Var_Cte -> STRING_CONST Save_String_Const .

    TIMES_SIGN      reduce using rule 109 (Var_Cte -> STRING_CONST Save_String_Const .)
    DIVIDE_SIGN     reduce using rule 109 (Var_Cte -> STRING_CONST Save_String_Const .)
    MOD_SIGN        reduce using rule 109 (Var_Cte -> STRING_CONST Save_String_Const .)
    PLUS_SIGN       reduce using rule 109 (Var_Cte -> STRING_CONST Save_String_Const .)
    MINUS_SIGN      reduce using rule 109 (Var_Cte -> STRING_CONST Save_String_Const .)
    LESS            reduce using rule 109 (Var_Cte -> STRING_CONST Save_String_Const .)
    LESS_EQUAL      reduce using rule 109 (Var_Cte -> STRING_CONST Save_String_Const .)
    GREATER         reduce using rule 109 (Var_Cte -> STRING_CONST Save_String_Const .)
    GREATER_EQUAL   reduce using rule 109 (Var_Cte -> STRING_CONST Save_String_Const .)
    AND             reduce using rule 109 (Var_Cte -> STRING_CONST Save_String_Const .)
    OR              reduce using rule 109 (Var_Cte -> STRING_CONST Save_String_Const .)
    EQUAL           reduce using rule 109 (Var_Cte -> STRING_CONST Save_String_Const .)
    DIFF            reduce using rule 109 (Var_Cte -> STRING_CONST Save_String_Const .)
    SEMICOLON       reduce using rule 109 (Var_Cte -> STRING_CONST Save_String_Const .)
    PAR_CLOSE       reduce using rule 109 (Var_Cte -> STRING_CONST Save_String_Const .)
    COMMA           reduce using rule 109 (Var_Cte -> STRING_CONST Save_String_Const .)


state 61

    (84) Expression -> Term Sum_Sub_Quad . Multiple_Terms
    (85) Multiple_Terms -> . PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms
    (86) Multiple_Terms -> . MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms
    (87) Multiple_Terms -> . Epsilon
    (118) Epsilon -> .

    PLUS_SIGN       shift and go to state 93
    MINUS_SIGN      shift and go to state 92
    LESS            reduce using rule 118 (Epsilon -> .)
    LESS_EQUAL      reduce using rule 118 (Epsilon -> .)
    GREATER         reduce using rule 118 (Epsilon -> .)
    GREATER_EQUAL   reduce using rule 118 (Epsilon -> .)
    AND             reduce using rule 118 (Epsilon -> .)
    OR              reduce using rule 118 (Epsilon -> .)
    EQUAL           reduce using rule 118 (Epsilon -> .)
    DIFF            reduce using rule 118 (Epsilon -> .)
    SEMICOLON       reduce using rule 118 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 118 (Epsilon -> .)
    COMMA           reduce using rule 118 (Epsilon -> .)

    Multiple_Terms                 shift and go to state 90
    Epsilon                        shift and go to state 91

state 62

    (91) Term -> Factor Mult_Div_Mod_Quad . Multiple_Factors
    (92) Multiple_Factors -> . TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (93) Multiple_Factors -> . DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (94) Multiple_Factors -> . MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (95) Multiple_Factors -> . Epsilon
    (118) Epsilon -> .

    TIMES_SIGN      shift and go to state 94
    DIVIDE_SIGN     shift and go to state 98
    MOD_SIGN        shift and go to state 95
    PLUS_SIGN       reduce using rule 118 (Epsilon -> .)
    MINUS_SIGN      reduce using rule 118 (Epsilon -> .)
    LESS            reduce using rule 118 (Epsilon -> .)
    LESS_EQUAL      reduce using rule 118 (Epsilon -> .)
    GREATER         reduce using rule 118 (Epsilon -> .)
    GREATER_EQUAL   reduce using rule 118 (Epsilon -> .)
    AND             reduce using rule 118 (Epsilon -> .)
    OR              reduce using rule 118 (Epsilon -> .)
    EQUAL           reduce using rule 118 (Epsilon -> .)
    DIFF            reduce using rule 118 (Epsilon -> .)
    SEMICOLON       reduce using rule 118 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 118 (Epsilon -> .)
    COMMA           reduce using rule 118 (Epsilon -> .)

    Epsilon                        shift and go to state 96
    Multiple_Factors               shift and go to state 97

state 63

    (55) Exp -> Logical_Or EQUAL . Push_Equal Logical_Or Equity_Quad
    (58) Push_Equal -> .

    NOT             reduce using rule 58 (Push_Equal -> .)
    PAR_OPEN        reduce using rule 58 (Push_Equal -> .)
    INT_CONST       reduce using rule 58 (Push_Equal -> .)
    MINUS_SIGN      reduce using rule 58 (Push_Equal -> .)
    FLOAT_CONST     reduce using rule 58 (Push_Equal -> .)
    BOOL_CONST      reduce using rule 58 (Push_Equal -> .)
    STRING_CONST    reduce using rule 58 (Push_Equal -> .)
    ID              reduce using rule 58 (Push_Equal -> .)

    Push_Equal                     shift and go to state 99

state 64

    (56) Exp -> Logical_Or DIFF . Push_Diff Logical_Or Equity_Quad
    (59) Push_Diff -> .

    NOT             reduce using rule 59 (Push_Diff -> .)
    PAR_OPEN        reduce using rule 59 (Push_Diff -> .)
    INT_CONST       reduce using rule 59 (Push_Diff -> .)
    MINUS_SIGN      reduce using rule 59 (Push_Diff -> .)
    FLOAT_CONST     reduce using rule 59 (Push_Diff -> .)
    BOOL_CONST      reduce using rule 59 (Push_Diff -> .)
    STRING_CONST    reduce using rule 59 (Push_Diff -> .)
    ID              reduce using rule 59 (Push_Diff -> .)

    Push_Diff                      shift and go to state 100

state 65

    (60) Logical_Or -> Logical_And Or_Quad . Multiple_Ands
    (61) Multiple_Ands -> . OR Push_Or Logical_And Or_Quad Multiple_Ands
    (62) Multiple_Ands -> . Epsilon
    (118) Epsilon -> .

    OR              shift and go to state 103
    EQUAL           reduce using rule 118 (Epsilon -> .)
    DIFF            reduce using rule 118 (Epsilon -> .)
    SEMICOLON       reduce using rule 118 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 118 (Epsilon -> .)
    COMMA           reduce using rule 118 (Epsilon -> .)

    Multiple_Ands                  shift and go to state 101
    Epsilon                        shift and go to state 102

state 66

    (47) Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON .

    PRINT           reduce using rule 47 (Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON .)
    ID              reduce using rule 47 (Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON .)
    WHILE           reduce using rule 47 (Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON .)
    IF              reduce using rule 47 (Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON .)
    DRAW            reduce using rule 47 (Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON .)
    INT             reduce using rule 47 (Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON .)
    FLOAT           reduce using rule 47 (Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON .)
    BOOL            reduce using rule 47 (Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON .)
    STRING          reduce using rule 47 (Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON .)
    CURLYB_CLOSE    reduce using rule 47 (Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON .)
    PLAY            reduce using rule 47 (Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON .)


state 67

    (75) Relational -> Expression LESS . Push_Less Expression Relational_Quad
    (80) Push_Less -> .

    PAR_OPEN        reduce using rule 80 (Push_Less -> .)
    INT_CONST       reduce using rule 80 (Push_Less -> .)
    MINUS_SIGN      reduce using rule 80 (Push_Less -> .)
    FLOAT_CONST     reduce using rule 80 (Push_Less -> .)
    BOOL_CONST      reduce using rule 80 (Push_Less -> .)
    STRING_CONST    reduce using rule 80 (Push_Less -> .)
    ID              reduce using rule 80 (Push_Less -> .)

    Push_Less                      shift and go to state 104

state 68

    (76) Relational -> Expression LESS_EQUAL . Push_Less_Equal Expression Relational_Quad
    (81) Push_Less_Equal -> .

    PAR_OPEN        reduce using rule 81 (Push_Less_Equal -> .)
    INT_CONST       reduce using rule 81 (Push_Less_Equal -> .)
    MINUS_SIGN      reduce using rule 81 (Push_Less_Equal -> .)
    FLOAT_CONST     reduce using rule 81 (Push_Less_Equal -> .)
    BOOL_CONST      reduce using rule 81 (Push_Less_Equal -> .)
    STRING_CONST    reduce using rule 81 (Push_Less_Equal -> .)
    ID              reduce using rule 81 (Push_Less_Equal -> .)

    Push_Less_Equal                shift and go to state 105

state 69

    (78) Relational -> Expression GREATER_EQUAL . Push_Greater_Equal Expression Relational_Quad
    (83) Push_Greater_Equal -> .

    PAR_OPEN        reduce using rule 83 (Push_Greater_Equal -> .)
    INT_CONST       reduce using rule 83 (Push_Greater_Equal -> .)
    MINUS_SIGN      reduce using rule 83 (Push_Greater_Equal -> .)
    FLOAT_CONST     reduce using rule 83 (Push_Greater_Equal -> .)
    BOOL_CONST      reduce using rule 83 (Push_Greater_Equal -> .)
    STRING_CONST    reduce using rule 83 (Push_Greater_Equal -> .)
    ID              reduce using rule 83 (Push_Greater_Equal -> .)

    Push_Greater_Equal             shift and go to state 106

state 70

    (77) Relational -> Expression GREATER . Push_Greater Expression Relational_Quad
    (82) Push_Greater -> .

    PAR_OPEN        reduce using rule 82 (Push_Greater -> .)
    INT_CONST       reduce using rule 82 (Push_Greater -> .)
    MINUS_SIGN      reduce using rule 82 (Push_Greater -> .)
    FLOAT_CONST     reduce using rule 82 (Push_Greater -> .)
    BOOL_CONST      reduce using rule 82 (Push_Greater -> .)
    STRING_CONST    reduce using rule 82 (Push_Greater -> .)
    ID              reduce using rule 82 (Push_Greater -> .)

    Push_Greater                   shift and go to state 107

state 71

    (110) Var_Cte -> ID Get_Id_Value .

    TIMES_SIGN      reduce using rule 110 (Var_Cte -> ID Get_Id_Value .)
    DIVIDE_SIGN     reduce using rule 110 (Var_Cte -> ID Get_Id_Value .)
    MOD_SIGN        reduce using rule 110 (Var_Cte -> ID Get_Id_Value .)
    PLUS_SIGN       reduce using rule 110 (Var_Cte -> ID Get_Id_Value .)
    MINUS_SIGN      reduce using rule 110 (Var_Cte -> ID Get_Id_Value .)
    LESS            reduce using rule 110 (Var_Cte -> ID Get_Id_Value .)
    LESS_EQUAL      reduce using rule 110 (Var_Cte -> ID Get_Id_Value .)
    GREATER         reduce using rule 110 (Var_Cte -> ID Get_Id_Value .)
    GREATER_EQUAL   reduce using rule 110 (Var_Cte -> ID Get_Id_Value .)
    AND             reduce using rule 110 (Var_Cte -> ID Get_Id_Value .)
    OR              reduce using rule 110 (Var_Cte -> ID Get_Id_Value .)
    EQUAL           reduce using rule 110 (Var_Cte -> ID Get_Id_Value .)
    DIFF            reduce using rule 110 (Var_Cte -> ID Get_Id_Value .)
    SEMICOLON       reduce using rule 110 (Var_Cte -> ID Get_Id_Value .)
    PAR_CLOSE       reduce using rule 110 (Var_Cte -> ID Get_Id_Value .)
    COMMA           reduce using rule 110 (Var_Cte -> ID Get_Id_Value .)


state 72

    (105) Var_Cte -> MINUS_SIGN INT_CONST . Save_Neg_Int_Const
    (112) Save_Neg_Int_Const -> .

    TIMES_SIGN      reduce using rule 112 (Save_Neg_Int_Const -> .)
    DIVIDE_SIGN     reduce using rule 112 (Save_Neg_Int_Const -> .)
    MOD_SIGN        reduce using rule 112 (Save_Neg_Int_Const -> .)
    PLUS_SIGN       reduce using rule 112 (Save_Neg_Int_Const -> .)
    MINUS_SIGN      reduce using rule 112 (Save_Neg_Int_Const -> .)
    LESS            reduce using rule 112 (Save_Neg_Int_Const -> .)
    LESS_EQUAL      reduce using rule 112 (Save_Neg_Int_Const -> .)
    GREATER         reduce using rule 112 (Save_Neg_Int_Const -> .)
    GREATER_EQUAL   reduce using rule 112 (Save_Neg_Int_Const -> .)
    AND             reduce using rule 112 (Save_Neg_Int_Const -> .)
    OR              reduce using rule 112 (Save_Neg_Int_Const -> .)
    EQUAL           reduce using rule 112 (Save_Neg_Int_Const -> .)
    DIFF            reduce using rule 112 (Save_Neg_Int_Const -> .)
    SEMICOLON       reduce using rule 112 (Save_Neg_Int_Const -> .)
    PAR_CLOSE       reduce using rule 112 (Save_Neg_Int_Const -> .)
    COMMA           reduce using rule 112 (Save_Neg_Int_Const -> .)

    Save_Neg_Int_Const             shift and go to state 108

state 73

    (107) Var_Cte -> MINUS_SIGN FLOAT_CONST . Save_Neg_Float_Const
    (114) Save_Neg_Float_Const -> .

    TIMES_SIGN      reduce using rule 114 (Save_Neg_Float_Const -> .)
    DIVIDE_SIGN     reduce using rule 114 (Save_Neg_Float_Const -> .)
    MOD_SIGN        reduce using rule 114 (Save_Neg_Float_Const -> .)
    PLUS_SIGN       reduce using rule 114 (Save_Neg_Float_Const -> .)
    MINUS_SIGN      reduce using rule 114 (Save_Neg_Float_Const -> .)
    LESS            reduce using rule 114 (Save_Neg_Float_Const -> .)
    LESS_EQUAL      reduce using rule 114 (Save_Neg_Float_Const -> .)
    GREATER         reduce using rule 114 (Save_Neg_Float_Const -> .)
    GREATER_EQUAL   reduce using rule 114 (Save_Neg_Float_Const -> .)
    AND             reduce using rule 114 (Save_Neg_Float_Const -> .)
    OR              reduce using rule 114 (Save_Neg_Float_Const -> .)
    EQUAL           reduce using rule 114 (Save_Neg_Float_Const -> .)
    DIFF            reduce using rule 114 (Save_Neg_Float_Const -> .)
    SEMICOLON       reduce using rule 114 (Save_Neg_Float_Const -> .)
    PAR_CLOSE       reduce using rule 114 (Save_Neg_Float_Const -> .)
    COMMA           reduce using rule 114 (Save_Neg_Float_Const -> .)

    Save_Neg_Float_Const           shift and go to state 109

state 74

    (71) Logical_Not -> NOT Push_Not . Relational Not_Quad
    (74) Relational -> . Expression
    (75) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (76) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (77) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (78) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (84) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (91) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (100) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (101) Factor -> . Var_Cte
    (104) Var_Cte -> . INT_CONST Save_Int_Const
    (105) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (106) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (107) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (108) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (109) Var_Cte -> . STRING_CONST Save_String_Const
    (110) Var_Cte -> . ID Get_Id_Value

    PAR_OPEN        shift and go to state 24
    INT_CONST       shift and go to state 27
    MINUS_SIGN      shift and go to state 39
    FLOAT_CONST     shift and go to state 25
    BOOL_CONST      shift and go to state 29
    STRING_CONST    shift and go to state 30
    ID              shift and go to state 38

    Factor                         shift and go to state 32
    Relational                     shift and go to state 110
    Term                           shift and go to state 31
    Var_Cte                        shift and go to state 33
    Expression                     shift and go to state 37

state 75

    (18) Drawable -> Circle_Func .

    SEMICOLON       reduce using rule 18 (Drawable -> Circle_Func .)


state 76

    (21) Square_Func -> SQUARE . PAR_OPEN Exp COMMA Exp COMMA Exp COMMA Selected_Color PAR_CLOSE

    PAR_OPEN        shift and go to state 111


state 77

    (19) Drawable -> Square_Func .

    SEMICOLON       reduce using rule 19 (Drawable -> Square_Func .)


state 78

    (20) Circle_Func -> CIRCLE . PAR_OPEN Exp COMMA Exp COMMA Exp COMMA Selected_Color PAR_CLOSE

    PAR_OPEN        shift and go to state 112


state 79

    (17) Draw_Stmt -> DRAW Drawable . SEMICOLON

    SEMICOLON       shift and go to state 113


state 80

    (42) While_Loop -> WHILE Push_While_Jump . PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads

    PAR_OPEN        shift and go to state 114


state 81

    (9) Multiple_Statements -> Statement Multiple_Statements .

    CURLYB_CLOSE    reduce using rule 9 (Multiple_Statements -> Statement Multiple_Statements .)


state 82

    (34) Print -> PRINT PAR_OPEN . Exp PAR_CLOSE SEMICOLON
    (54) Exp -> . Logical_Or
    (55) Exp -> . Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad
    (56) Exp -> . Logical_Or DIFF Push_Diff Logical_Or Equity_Quad
    (60) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (65) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (70) Logical_Not -> . Relational
    (71) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (74) Relational -> . Expression
    (75) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (76) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (77) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (78) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (84) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (91) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (100) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (101) Factor -> . Var_Cte
    (104) Var_Cte -> . INT_CONST Save_Int_Const
    (105) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (106) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (107) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (108) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (109) Var_Cte -> . STRING_CONST Save_String_Const
    (110) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 40
    PAR_OPEN        shift and go to state 24
    INT_CONST       shift and go to state 27
    MINUS_SIGN      shift and go to state 39
    FLOAT_CONST     shift and go to state 25
    BOOL_CONST      shift and go to state 29
    STRING_CONST    shift and go to state 30
    ID              shift and go to state 38

    Factor                         shift and go to state 32
    Relational                     shift and go to state 26
    Logical_Not                    shift and go to state 28
    Term                           shift and go to state 31
    Var_Cte                        shift and go to state 33
    Logical_Or                     shift and go to state 34
    Logical_And                    shift and go to state 35
    Exp                            shift and go to state 115
    Expression                     shift and go to state 37

state 83

    (8) Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE .

    EIF             reduce using rule 8 (Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE .)
    ELSE            reduce using rule 8 (Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE .)
    PRINT           reduce using rule 8 (Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE .)
    ID              reduce using rule 8 (Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE .)
    WHILE           reduce using rule 8 (Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE .)
    IF              reduce using rule 8 (Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE .)
    DRAW            reduce using rule 8 (Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE .)
    INT             reduce using rule 8 (Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE .)
    FLOAT           reduce using rule 8 (Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE .)
    BOOL            reduce using rule 8 (Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE .)
    STRING          reduce using rule 8 (Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE .)
    CURLYB_CLOSE    reduce using rule 8 (Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE .)
    $end            reduce using rule 8 (Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE .)


state 84

    (52) Assignment -> ID ASSIGN . Push_Assign Exp SEMICOLON
    (53) Push_Assign -> .

    NOT             reduce using rule 53 (Push_Assign -> .)
    PAR_OPEN        reduce using rule 53 (Push_Assign -> .)
    INT_CONST       reduce using rule 53 (Push_Assign -> .)
    MINUS_SIGN      reduce using rule 53 (Push_Assign -> .)
    FLOAT_CONST     reduce using rule 53 (Push_Assign -> .)
    BOOL_CONST      reduce using rule 53 (Push_Assign -> .)
    STRING_CONST    reduce using rule 53 (Push_Assign -> .)
    ID              reduce using rule 53 (Push_Assign -> .)

    Push_Assign                    shift and go to state 116

state 85

    (35) If_Eif_Else -> IF PAR_OPEN . Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion Optional_Else
    (54) Exp -> . Logical_Or
    (55) Exp -> . Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad
    (56) Exp -> . Logical_Or DIFF Push_Diff Logical_Or Equity_Quad
    (60) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (65) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (70) Logical_Not -> . Relational
    (71) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (74) Relational -> . Expression
    (75) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (76) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (77) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (78) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (84) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (91) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (100) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (101) Factor -> . Var_Cte
    (104) Var_Cte -> . INT_CONST Save_Int_Const
    (105) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (106) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (107) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (108) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (109) Var_Cte -> . STRING_CONST Save_String_Const
    (110) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 40
    PAR_OPEN        shift and go to state 24
    INT_CONST       shift and go to state 27
    MINUS_SIGN      shift and go to state 39
    FLOAT_CONST     shift and go to state 25
    BOOL_CONST      shift and go to state 29
    STRING_CONST    shift and go to state 30
    ID              shift and go to state 38

    Factor                         shift and go to state 32
    Relational                     shift and go to state 26
    Logical_Not                    shift and go to state 28
    Term                           shift and go to state 31
    Var_Cte                        shift and go to state 33
    Logical_Or                     shift and go to state 34
    Logical_And                    shift and go to state 35
    Exp                            shift and go to state 117
    Expression                     shift and go to state 37

state 86

    (100) Factor -> PAR_OPEN Push_False_Bottom Exp . PAR_CLOSE Pop_False_Bottom

    PAR_CLOSE       shift and go to state 118


state 87

    (66) Multiple_Nots -> AND . Push_And Logical_Not And_Quad Multiple_Nots
    (69) Push_And -> .

    NOT             reduce using rule 69 (Push_And -> .)
    PAR_OPEN        reduce using rule 69 (Push_And -> .)
    INT_CONST       reduce using rule 69 (Push_And -> .)
    MINUS_SIGN      reduce using rule 69 (Push_And -> .)
    FLOAT_CONST     reduce using rule 69 (Push_And -> .)
    BOOL_CONST      reduce using rule 69 (Push_And -> .)
    STRING_CONST    reduce using rule 69 (Push_And -> .)
    ID              reduce using rule 69 (Push_And -> .)

    Push_And                       shift and go to state 119

state 88

    (67) Multiple_Nots -> Epsilon .

    OR              reduce using rule 67 (Multiple_Nots -> Epsilon .)
    EQUAL           reduce using rule 67 (Multiple_Nots -> Epsilon .)
    DIFF            reduce using rule 67 (Multiple_Nots -> Epsilon .)
    SEMICOLON       reduce using rule 67 (Multiple_Nots -> Epsilon .)
    PAR_CLOSE       reduce using rule 67 (Multiple_Nots -> Epsilon .)
    COMMA           reduce using rule 67 (Multiple_Nots -> Epsilon .)


state 89

    (65) Logical_And -> Logical_Not And_Quad Multiple_Nots .

    OR              reduce using rule 65 (Logical_And -> Logical_Not And_Quad Multiple_Nots .)
    EQUAL           reduce using rule 65 (Logical_And -> Logical_Not And_Quad Multiple_Nots .)
    DIFF            reduce using rule 65 (Logical_And -> Logical_Not And_Quad Multiple_Nots .)
    COMMA           reduce using rule 65 (Logical_And -> Logical_Not And_Quad Multiple_Nots .)
    SEMICOLON       reduce using rule 65 (Logical_And -> Logical_Not And_Quad Multiple_Nots .)
    PAR_CLOSE       reduce using rule 65 (Logical_And -> Logical_Not And_Quad Multiple_Nots .)


state 90

    (84) Expression -> Term Sum_Sub_Quad Multiple_Terms .

    LESS            reduce using rule 84 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    LESS_EQUAL      reduce using rule 84 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    GREATER         reduce using rule 84 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    GREATER_EQUAL   reduce using rule 84 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    AND             reduce using rule 84 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    OR              reduce using rule 84 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    EQUAL           reduce using rule 84 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    DIFF            reduce using rule 84 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    SEMICOLON       reduce using rule 84 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    PAR_CLOSE       reduce using rule 84 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    COMMA           reduce using rule 84 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)


state 91

    (87) Multiple_Terms -> Epsilon .

    LESS            reduce using rule 87 (Multiple_Terms -> Epsilon .)
    LESS_EQUAL      reduce using rule 87 (Multiple_Terms -> Epsilon .)
    GREATER         reduce using rule 87 (Multiple_Terms -> Epsilon .)
    GREATER_EQUAL   reduce using rule 87 (Multiple_Terms -> Epsilon .)
    AND             reduce using rule 87 (Multiple_Terms -> Epsilon .)
    OR              reduce using rule 87 (Multiple_Terms -> Epsilon .)
    EQUAL           reduce using rule 87 (Multiple_Terms -> Epsilon .)
    DIFF            reduce using rule 87 (Multiple_Terms -> Epsilon .)
    SEMICOLON       reduce using rule 87 (Multiple_Terms -> Epsilon .)
    PAR_CLOSE       reduce using rule 87 (Multiple_Terms -> Epsilon .)
    COMMA           reduce using rule 87 (Multiple_Terms -> Epsilon .)


state 92

    (86) Multiple_Terms -> MINUS_SIGN . Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms
    (90) Push_Minus_Sign -> .

    PAR_OPEN        reduce using rule 90 (Push_Minus_Sign -> .)
    INT_CONST       reduce using rule 90 (Push_Minus_Sign -> .)
    MINUS_SIGN      reduce using rule 90 (Push_Minus_Sign -> .)
    FLOAT_CONST     reduce using rule 90 (Push_Minus_Sign -> .)
    BOOL_CONST      reduce using rule 90 (Push_Minus_Sign -> .)
    STRING_CONST    reduce using rule 90 (Push_Minus_Sign -> .)
    ID              reduce using rule 90 (Push_Minus_Sign -> .)

    Push_Minus_Sign                shift and go to state 120

state 93

    (85) Multiple_Terms -> PLUS_SIGN . Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms
    (89) Push_Plus_Sign -> .

    PAR_OPEN        reduce using rule 89 (Push_Plus_Sign -> .)
    INT_CONST       reduce using rule 89 (Push_Plus_Sign -> .)
    MINUS_SIGN      reduce using rule 89 (Push_Plus_Sign -> .)
    FLOAT_CONST     reduce using rule 89 (Push_Plus_Sign -> .)
    BOOL_CONST      reduce using rule 89 (Push_Plus_Sign -> .)
    STRING_CONST    reduce using rule 89 (Push_Plus_Sign -> .)
    ID              reduce using rule 89 (Push_Plus_Sign -> .)

    Push_Plus_Sign                 shift and go to state 121

state 94

    (92) Multiple_Factors -> TIMES_SIGN . Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (97) Push_Times_Sign -> .

    PAR_OPEN        reduce using rule 97 (Push_Times_Sign -> .)
    INT_CONST       reduce using rule 97 (Push_Times_Sign -> .)
    MINUS_SIGN      reduce using rule 97 (Push_Times_Sign -> .)
    FLOAT_CONST     reduce using rule 97 (Push_Times_Sign -> .)
    BOOL_CONST      reduce using rule 97 (Push_Times_Sign -> .)
    STRING_CONST    reduce using rule 97 (Push_Times_Sign -> .)
    ID              reduce using rule 97 (Push_Times_Sign -> .)

    Push_Times_Sign                shift and go to state 122

state 95

    (94) Multiple_Factors -> MOD_SIGN . Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (99) Push_Mod_Sign -> .

    PAR_OPEN        reduce using rule 99 (Push_Mod_Sign -> .)
    INT_CONST       reduce using rule 99 (Push_Mod_Sign -> .)
    MINUS_SIGN      reduce using rule 99 (Push_Mod_Sign -> .)
    FLOAT_CONST     reduce using rule 99 (Push_Mod_Sign -> .)
    BOOL_CONST      reduce using rule 99 (Push_Mod_Sign -> .)
    STRING_CONST    reduce using rule 99 (Push_Mod_Sign -> .)
    ID              reduce using rule 99 (Push_Mod_Sign -> .)

    Push_Mod_Sign                  shift and go to state 123

state 96

    (95) Multiple_Factors -> Epsilon .

    PLUS_SIGN       reduce using rule 95 (Multiple_Factors -> Epsilon .)
    MINUS_SIGN      reduce using rule 95 (Multiple_Factors -> Epsilon .)
    LESS            reduce using rule 95 (Multiple_Factors -> Epsilon .)
    LESS_EQUAL      reduce using rule 95 (Multiple_Factors -> Epsilon .)
    GREATER         reduce using rule 95 (Multiple_Factors -> Epsilon .)
    GREATER_EQUAL   reduce using rule 95 (Multiple_Factors -> Epsilon .)
    AND             reduce using rule 95 (Multiple_Factors -> Epsilon .)
    OR              reduce using rule 95 (Multiple_Factors -> Epsilon .)
    EQUAL           reduce using rule 95 (Multiple_Factors -> Epsilon .)
    DIFF            reduce using rule 95 (Multiple_Factors -> Epsilon .)
    SEMICOLON       reduce using rule 95 (Multiple_Factors -> Epsilon .)
    PAR_CLOSE       reduce using rule 95 (Multiple_Factors -> Epsilon .)
    COMMA           reduce using rule 95 (Multiple_Factors -> Epsilon .)


state 97

    (91) Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .

    PLUS_SIGN       reduce using rule 91 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    MINUS_SIGN      reduce using rule 91 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS            reduce using rule 91 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS_EQUAL      reduce using rule 91 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER         reduce using rule 91 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER_EQUAL   reduce using rule 91 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    AND             reduce using rule 91 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    OR              reduce using rule 91 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    EQUAL           reduce using rule 91 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    DIFF            reduce using rule 91 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    SEMICOLON       reduce using rule 91 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    PAR_CLOSE       reduce using rule 91 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    COMMA           reduce using rule 91 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)


state 98

    (93) Multiple_Factors -> DIVIDE_SIGN . Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (98) Push_Divide_Sign -> .

    PAR_OPEN        reduce using rule 98 (Push_Divide_Sign -> .)
    INT_CONST       reduce using rule 98 (Push_Divide_Sign -> .)
    MINUS_SIGN      reduce using rule 98 (Push_Divide_Sign -> .)
    FLOAT_CONST     reduce using rule 98 (Push_Divide_Sign -> .)
    BOOL_CONST      reduce using rule 98 (Push_Divide_Sign -> .)
    STRING_CONST    reduce using rule 98 (Push_Divide_Sign -> .)
    ID              reduce using rule 98 (Push_Divide_Sign -> .)

    Push_Divide_Sign               shift and go to state 124

state 99

    (55) Exp -> Logical_Or EQUAL Push_Equal . Logical_Or Equity_Quad
    (60) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (65) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (70) Logical_Not -> . Relational
    (71) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (74) Relational -> . Expression
    (75) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (76) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (77) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (78) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (84) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (91) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (100) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (101) Factor -> . Var_Cte
    (104) Var_Cte -> . INT_CONST Save_Int_Const
    (105) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (106) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (107) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (108) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (109) Var_Cte -> . STRING_CONST Save_String_Const
    (110) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 40
    PAR_OPEN        shift and go to state 24
    INT_CONST       shift and go to state 27
    MINUS_SIGN      shift and go to state 39
    FLOAT_CONST     shift and go to state 25
    BOOL_CONST      shift and go to state 29
    STRING_CONST    shift and go to state 30
    ID              shift and go to state 38

    Factor                         shift and go to state 32
    Relational                     shift and go to state 26
    Logical_Not                    shift and go to state 28
    Term                           shift and go to state 31
    Var_Cte                        shift and go to state 33
    Logical_Or                     shift and go to state 125
    Logical_And                    shift and go to state 35
    Expression                     shift and go to state 37

state 100

    (56) Exp -> Logical_Or DIFF Push_Diff . Logical_Or Equity_Quad
    (60) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (65) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (70) Logical_Not -> . Relational
    (71) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (74) Relational -> . Expression
    (75) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (76) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (77) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (78) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (84) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (91) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (100) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (101) Factor -> . Var_Cte
    (104) Var_Cte -> . INT_CONST Save_Int_Const
    (105) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (106) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (107) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (108) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (109) Var_Cte -> . STRING_CONST Save_String_Const
    (110) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 40
    PAR_OPEN        shift and go to state 24
    INT_CONST       shift and go to state 27
    MINUS_SIGN      shift and go to state 39
    FLOAT_CONST     shift and go to state 25
    BOOL_CONST      shift and go to state 29
    STRING_CONST    shift and go to state 30
    ID              shift and go to state 38

    Factor                         shift and go to state 32
    Relational                     shift and go to state 26
    Logical_Not                    shift and go to state 28
    Term                           shift and go to state 31
    Var_Cte                        shift and go to state 33
    Logical_Or                     shift and go to state 126
    Logical_And                    shift and go to state 35
    Expression                     shift and go to state 37

state 101

    (60) Logical_Or -> Logical_And Or_Quad Multiple_Ands .

    EQUAL           reduce using rule 60 (Logical_Or -> Logical_And Or_Quad Multiple_Ands .)
    DIFF            reduce using rule 60 (Logical_Or -> Logical_And Or_Quad Multiple_Ands .)
    PAR_CLOSE       reduce using rule 60 (Logical_Or -> Logical_And Or_Quad Multiple_Ands .)
    COMMA           reduce using rule 60 (Logical_Or -> Logical_And Or_Quad Multiple_Ands .)
    SEMICOLON       reduce using rule 60 (Logical_Or -> Logical_And Or_Quad Multiple_Ands .)


state 102

    (62) Multiple_Ands -> Epsilon .

    EQUAL           reduce using rule 62 (Multiple_Ands -> Epsilon .)
    DIFF            reduce using rule 62 (Multiple_Ands -> Epsilon .)
    SEMICOLON       reduce using rule 62 (Multiple_Ands -> Epsilon .)
    PAR_CLOSE       reduce using rule 62 (Multiple_Ands -> Epsilon .)
    COMMA           reduce using rule 62 (Multiple_Ands -> Epsilon .)


state 103

    (61) Multiple_Ands -> OR . Push_Or Logical_And Or_Quad Multiple_Ands
    (64) Push_Or -> .

    NOT             reduce using rule 64 (Push_Or -> .)
    PAR_OPEN        reduce using rule 64 (Push_Or -> .)
    INT_CONST       reduce using rule 64 (Push_Or -> .)
    MINUS_SIGN      reduce using rule 64 (Push_Or -> .)
    FLOAT_CONST     reduce using rule 64 (Push_Or -> .)
    BOOL_CONST      reduce using rule 64 (Push_Or -> .)
    STRING_CONST    reduce using rule 64 (Push_Or -> .)
    ID              reduce using rule 64 (Push_Or -> .)

    Push_Or                        shift and go to state 127

state 104

    (75) Relational -> Expression LESS Push_Less . Expression Relational_Quad
    (84) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (91) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (100) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (101) Factor -> . Var_Cte
    (104) Var_Cte -> . INT_CONST Save_Int_Const
    (105) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (106) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (107) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (108) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (109) Var_Cte -> . STRING_CONST Save_String_Const
    (110) Var_Cte -> . ID Get_Id_Value

    PAR_OPEN        shift and go to state 24
    INT_CONST       shift and go to state 27
    MINUS_SIGN      shift and go to state 39
    FLOAT_CONST     shift and go to state 25
    BOOL_CONST      shift and go to state 29
    STRING_CONST    shift and go to state 30
    ID              shift and go to state 38

    Term                           shift and go to state 31
    Var_Cte                        shift and go to state 33
    Factor                         shift and go to state 32
    Expression                     shift and go to state 128

state 105

    (76) Relational -> Expression LESS_EQUAL Push_Less_Equal . Expression Relational_Quad
    (84) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (91) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (100) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (101) Factor -> . Var_Cte
    (104) Var_Cte -> . INT_CONST Save_Int_Const
    (105) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (106) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (107) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (108) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (109) Var_Cte -> . STRING_CONST Save_String_Const
    (110) Var_Cte -> . ID Get_Id_Value

    PAR_OPEN        shift and go to state 24
    INT_CONST       shift and go to state 27
    MINUS_SIGN      shift and go to state 39
    FLOAT_CONST     shift and go to state 25
    BOOL_CONST      shift and go to state 29
    STRING_CONST    shift and go to state 30
    ID              shift and go to state 38

    Term                           shift and go to state 31
    Var_Cte                        shift and go to state 33
    Factor                         shift and go to state 32
    Expression                     shift and go to state 129

state 106

    (78) Relational -> Expression GREATER_EQUAL Push_Greater_Equal . Expression Relational_Quad
    (84) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (91) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (100) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (101) Factor -> . Var_Cte
    (104) Var_Cte -> . INT_CONST Save_Int_Const
    (105) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (106) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (107) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (108) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (109) Var_Cte -> . STRING_CONST Save_String_Const
    (110) Var_Cte -> . ID Get_Id_Value

    PAR_OPEN        shift and go to state 24
    INT_CONST       shift and go to state 27
    MINUS_SIGN      shift and go to state 39
    FLOAT_CONST     shift and go to state 25
    BOOL_CONST      shift and go to state 29
    STRING_CONST    shift and go to state 30
    ID              shift and go to state 38

    Term                           shift and go to state 31
    Var_Cte                        shift and go to state 33
    Factor                         shift and go to state 32
    Expression                     shift and go to state 130

state 107

    (77) Relational -> Expression GREATER Push_Greater . Expression Relational_Quad
    (84) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (91) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (100) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (101) Factor -> . Var_Cte
    (104) Var_Cte -> . INT_CONST Save_Int_Const
    (105) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (106) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (107) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (108) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (109) Var_Cte -> . STRING_CONST Save_String_Const
    (110) Var_Cte -> . ID Get_Id_Value

    PAR_OPEN        shift and go to state 24
    INT_CONST       shift and go to state 27
    MINUS_SIGN      shift and go to state 39
    FLOAT_CONST     shift and go to state 25
    BOOL_CONST      shift and go to state 29
    STRING_CONST    shift and go to state 30
    ID              shift and go to state 38

    Term                           shift and go to state 31
    Var_Cte                        shift and go to state 33
    Factor                         shift and go to state 32
    Expression                     shift and go to state 131

state 108

    (105) Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .

    TIMES_SIGN      reduce using rule 105 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    DIVIDE_SIGN     reduce using rule 105 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    MOD_SIGN        reduce using rule 105 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    PLUS_SIGN       reduce using rule 105 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    MINUS_SIGN      reduce using rule 105 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    LESS            reduce using rule 105 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    LESS_EQUAL      reduce using rule 105 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    GREATER         reduce using rule 105 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    GREATER_EQUAL   reduce using rule 105 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    AND             reduce using rule 105 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    OR              reduce using rule 105 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    EQUAL           reduce using rule 105 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    DIFF            reduce using rule 105 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    SEMICOLON       reduce using rule 105 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    PAR_CLOSE       reduce using rule 105 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    COMMA           reduce using rule 105 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)


state 109

    (107) Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .

    TIMES_SIGN      reduce using rule 107 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    DIVIDE_SIGN     reduce using rule 107 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    MOD_SIGN        reduce using rule 107 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    PLUS_SIGN       reduce using rule 107 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    MINUS_SIGN      reduce using rule 107 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    LESS            reduce using rule 107 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    LESS_EQUAL      reduce using rule 107 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    GREATER         reduce using rule 107 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    GREATER_EQUAL   reduce using rule 107 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    AND             reduce using rule 107 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    OR              reduce using rule 107 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    EQUAL           reduce using rule 107 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    DIFF            reduce using rule 107 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    SEMICOLON       reduce using rule 107 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    PAR_CLOSE       reduce using rule 107 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    COMMA           reduce using rule 107 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)


state 110

    (71) Logical_Not -> NOT Push_Not Relational . Not_Quad
    (72) Not_Quad -> .

    AND             reduce using rule 72 (Not_Quad -> .)
    OR              reduce using rule 72 (Not_Quad -> .)
    EQUAL           reduce using rule 72 (Not_Quad -> .)
    DIFF            reduce using rule 72 (Not_Quad -> .)
    SEMICOLON       reduce using rule 72 (Not_Quad -> .)
    PAR_CLOSE       reduce using rule 72 (Not_Quad -> .)
    COMMA           reduce using rule 72 (Not_Quad -> .)

    Not_Quad                       shift and go to state 132

state 111

    (21) Square_Func -> SQUARE PAR_OPEN . Exp COMMA Exp COMMA Exp COMMA Selected_Color PAR_CLOSE
    (54) Exp -> . Logical_Or
    (55) Exp -> . Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad
    (56) Exp -> . Logical_Or DIFF Push_Diff Logical_Or Equity_Quad
    (60) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (65) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (70) Logical_Not -> . Relational
    (71) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (74) Relational -> . Expression
    (75) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (76) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (77) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (78) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (84) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (91) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (100) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (101) Factor -> . Var_Cte
    (104) Var_Cte -> . INT_CONST Save_Int_Const
    (105) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (106) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (107) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (108) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (109) Var_Cte -> . STRING_CONST Save_String_Const
    (110) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 40
    PAR_OPEN        shift and go to state 24
    INT_CONST       shift and go to state 27
    MINUS_SIGN      shift and go to state 39
    FLOAT_CONST     shift and go to state 25
    BOOL_CONST      shift and go to state 29
    STRING_CONST    shift and go to state 30
    ID              shift and go to state 38

    Factor                         shift and go to state 32
    Relational                     shift and go to state 26
    Logical_Not                    shift and go to state 28
    Term                           shift and go to state 31
    Var_Cte                        shift and go to state 33
    Logical_Or                     shift and go to state 34
    Logical_And                    shift and go to state 35
    Exp                            shift and go to state 133
    Expression                     shift and go to state 37

state 112

    (20) Circle_Func -> CIRCLE PAR_OPEN . Exp COMMA Exp COMMA Exp COMMA Selected_Color PAR_CLOSE
    (54) Exp -> . Logical_Or
    (55) Exp -> . Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad
    (56) Exp -> . Logical_Or DIFF Push_Diff Logical_Or Equity_Quad
    (60) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (65) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (70) Logical_Not -> . Relational
    (71) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (74) Relational -> . Expression
    (75) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (76) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (77) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (78) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (84) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (91) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (100) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (101) Factor -> . Var_Cte
    (104) Var_Cte -> . INT_CONST Save_Int_Const
    (105) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (106) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (107) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (108) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (109) Var_Cte -> . STRING_CONST Save_String_Const
    (110) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 40
    PAR_OPEN        shift and go to state 24
    INT_CONST       shift and go to state 27
    MINUS_SIGN      shift and go to state 39
    FLOAT_CONST     shift and go to state 25
    BOOL_CONST      shift and go to state 29
    STRING_CONST    shift and go to state 30
    ID              shift and go to state 38

    Factor                         shift and go to state 32
    Relational                     shift and go to state 26
    Logical_Not                    shift and go to state 28
    Term                           shift and go to state 31
    Var_Cte                        shift and go to state 33
    Logical_Or                     shift and go to state 34
    Logical_And                    shift and go to state 35
    Exp                            shift and go to state 134
    Expression                     shift and go to state 37

state 113

    (17) Draw_Stmt -> DRAW Drawable SEMICOLON .

    PRINT           reduce using rule 17 (Draw_Stmt -> DRAW Drawable SEMICOLON .)
    ID              reduce using rule 17 (Draw_Stmt -> DRAW Drawable SEMICOLON .)
    WHILE           reduce using rule 17 (Draw_Stmt -> DRAW Drawable SEMICOLON .)
    IF              reduce using rule 17 (Draw_Stmt -> DRAW Drawable SEMICOLON .)
    DRAW            reduce using rule 17 (Draw_Stmt -> DRAW Drawable SEMICOLON .)
    INT             reduce using rule 17 (Draw_Stmt -> DRAW Drawable SEMICOLON .)
    FLOAT           reduce using rule 17 (Draw_Stmt -> DRAW Drawable SEMICOLON .)
    BOOL            reduce using rule 17 (Draw_Stmt -> DRAW Drawable SEMICOLON .)
    STRING          reduce using rule 17 (Draw_Stmt -> DRAW Drawable SEMICOLON .)
    CURLYB_CLOSE    reduce using rule 17 (Draw_Stmt -> DRAW Drawable SEMICOLON .)


state 114

    (42) While_Loop -> WHILE Push_While_Jump PAR_OPEN . Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads
    (54) Exp -> . Logical_Or
    (55) Exp -> . Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad
    (56) Exp -> . Logical_Or DIFF Push_Diff Logical_Or Equity_Quad
    (60) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (65) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (70) Logical_Not -> . Relational
    (71) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (74) Relational -> . Expression
    (75) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (76) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (77) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (78) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (84) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (91) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (100) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (101) Factor -> . Var_Cte
    (104) Var_Cte -> . INT_CONST Save_Int_Const
    (105) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (106) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (107) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (108) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (109) Var_Cte -> . STRING_CONST Save_String_Const
    (110) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 40
    PAR_OPEN        shift and go to state 24
    INT_CONST       shift and go to state 27
    MINUS_SIGN      shift and go to state 39
    FLOAT_CONST     shift and go to state 25
    BOOL_CONST      shift and go to state 29
    STRING_CONST    shift and go to state 30
    ID              shift and go to state 38

    Exp                            shift and go to state 135
    Factor                         shift and go to state 32
    Relational                     shift and go to state 26
    Logical_Not                    shift and go to state 28
    Term                           shift and go to state 31
    Var_Cte                        shift and go to state 33
    Logical_Or                     shift and go to state 34
    Logical_And                    shift and go to state 35
    Expression                     shift and go to state 37

state 115

    (34) Print -> PRINT PAR_OPEN Exp . PAR_CLOSE SEMICOLON

    PAR_CLOSE       shift and go to state 136


state 116

    (52) Assignment -> ID ASSIGN Push_Assign . Exp SEMICOLON
    (54) Exp -> . Logical_Or
    (55) Exp -> . Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad
    (56) Exp -> . Logical_Or DIFF Push_Diff Logical_Or Equity_Quad
    (60) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (65) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (70) Logical_Not -> . Relational
    (71) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (74) Relational -> . Expression
    (75) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (76) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (77) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (78) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (84) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (91) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (100) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (101) Factor -> . Var_Cte
    (104) Var_Cte -> . INT_CONST Save_Int_Const
    (105) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (106) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (107) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (108) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (109) Var_Cte -> . STRING_CONST Save_String_Const
    (110) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 40
    PAR_OPEN        shift and go to state 24
    INT_CONST       shift and go to state 27
    MINUS_SIGN      shift and go to state 39
    FLOAT_CONST     shift and go to state 25
    BOOL_CONST      shift and go to state 29
    STRING_CONST    shift and go to state 30
    ID              shift and go to state 38

    Factor                         shift and go to state 32
    Relational                     shift and go to state 26
    Logical_Not                    shift and go to state 28
    Term                           shift and go to state 31
    Var_Cte                        shift and go to state 33
    Logical_Or                     shift and go to state 34
    Logical_And                    shift and go to state 35
    Exp                            shift and go to state 137
    Expression                     shift and go to state 37

state 117

    (35) If_Eif_Else -> IF PAR_OPEN Exp . PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion Optional_Else

    PAR_CLOSE       shift and go to state 138


state 118

    (100) Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE . Pop_False_Bottom
    (103) Pop_False_Bottom -> .

    TIMES_SIGN      reduce using rule 103 (Pop_False_Bottom -> .)
    DIVIDE_SIGN     reduce using rule 103 (Pop_False_Bottom -> .)
    MOD_SIGN        reduce using rule 103 (Pop_False_Bottom -> .)
    PLUS_SIGN       reduce using rule 103 (Pop_False_Bottom -> .)
    MINUS_SIGN      reduce using rule 103 (Pop_False_Bottom -> .)
    LESS            reduce using rule 103 (Pop_False_Bottom -> .)
    LESS_EQUAL      reduce using rule 103 (Pop_False_Bottom -> .)
    GREATER         reduce using rule 103 (Pop_False_Bottom -> .)
    GREATER_EQUAL   reduce using rule 103 (Pop_False_Bottom -> .)
    AND             reduce using rule 103 (Pop_False_Bottom -> .)
    OR              reduce using rule 103 (Pop_False_Bottom -> .)
    EQUAL           reduce using rule 103 (Pop_False_Bottom -> .)
    DIFF            reduce using rule 103 (Pop_False_Bottom -> .)
    SEMICOLON       reduce using rule 103 (Pop_False_Bottom -> .)
    PAR_CLOSE       reduce using rule 103 (Pop_False_Bottom -> .)
    COMMA           reduce using rule 103 (Pop_False_Bottom -> .)

    Pop_False_Bottom               shift and go to state 139

state 119

    (66) Multiple_Nots -> AND Push_And . Logical_Not And_Quad Multiple_Nots
    (70) Logical_Not -> . Relational
    (71) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (74) Relational -> . Expression
    (75) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (76) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (77) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (78) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (84) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (91) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (100) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (101) Factor -> . Var_Cte
    (104) Var_Cte -> . INT_CONST Save_Int_Const
    (105) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (106) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (107) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (108) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (109) Var_Cte -> . STRING_CONST Save_String_Const
    (110) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 40
    PAR_OPEN        shift and go to state 24
    INT_CONST       shift and go to state 27
    MINUS_SIGN      shift and go to state 39
    FLOAT_CONST     shift and go to state 25
    BOOL_CONST      shift and go to state 29
    STRING_CONST    shift and go to state 30
    ID              shift and go to state 38

    Factor                         shift and go to state 32
    Relational                     shift and go to state 26
    Logical_Not                    shift and go to state 140
    Term                           shift and go to state 31
    Var_Cte                        shift and go to state 33
    Expression                     shift and go to state 37

state 120

    (86) Multiple_Terms -> MINUS_SIGN Push_Minus_Sign . Term Sum_Sub_Quad Multiple_Terms
    (91) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (100) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (101) Factor -> . Var_Cte
    (104) Var_Cte -> . INT_CONST Save_Int_Const
    (105) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (106) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (107) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (108) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (109) Var_Cte -> . STRING_CONST Save_String_Const
    (110) Var_Cte -> . ID Get_Id_Value

    PAR_OPEN        shift and go to state 24
    INT_CONST       shift and go to state 27
    MINUS_SIGN      shift and go to state 39
    FLOAT_CONST     shift and go to state 25
    BOOL_CONST      shift and go to state 29
    STRING_CONST    shift and go to state 30
    ID              shift and go to state 38

    Term                           shift and go to state 141
    Var_Cte                        shift and go to state 33
    Factor                         shift and go to state 32

state 121

    (85) Multiple_Terms -> PLUS_SIGN Push_Plus_Sign . Term Sum_Sub_Quad Multiple_Terms
    (91) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (100) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (101) Factor -> . Var_Cte
    (104) Var_Cte -> . INT_CONST Save_Int_Const
    (105) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (106) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (107) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (108) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (109) Var_Cte -> . STRING_CONST Save_String_Const
    (110) Var_Cte -> . ID Get_Id_Value

    PAR_OPEN        shift and go to state 24
    INT_CONST       shift and go to state 27
    MINUS_SIGN      shift and go to state 39
    FLOAT_CONST     shift and go to state 25
    BOOL_CONST      shift and go to state 29
    STRING_CONST    shift and go to state 30
    ID              shift and go to state 38

    Term                           shift and go to state 142
    Var_Cte                        shift and go to state 33
    Factor                         shift and go to state 32

state 122

    (92) Multiple_Factors -> TIMES_SIGN Push_Times_Sign . Factor Mult_Div_Mod_Quad Multiple_Factors
    (100) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (101) Factor -> . Var_Cte
    (104) Var_Cte -> . INT_CONST Save_Int_Const
    (105) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (106) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (107) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (108) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (109) Var_Cte -> . STRING_CONST Save_String_Const
    (110) Var_Cte -> . ID Get_Id_Value

    PAR_OPEN        shift and go to state 24
    INT_CONST       shift and go to state 27
    MINUS_SIGN      shift and go to state 39
    FLOAT_CONST     shift and go to state 25
    BOOL_CONST      shift and go to state 29
    STRING_CONST    shift and go to state 30
    ID              shift and go to state 38

    Var_Cte                        shift and go to state 33
    Factor                         shift and go to state 143

state 123

    (94) Multiple_Factors -> MOD_SIGN Push_Mod_Sign . Factor Mult_Div_Mod_Quad Multiple_Factors
    (100) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (101) Factor -> . Var_Cte
    (104) Var_Cte -> . INT_CONST Save_Int_Const
    (105) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (106) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (107) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (108) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (109) Var_Cte -> . STRING_CONST Save_String_Const
    (110) Var_Cte -> . ID Get_Id_Value

    PAR_OPEN        shift and go to state 24
    INT_CONST       shift and go to state 27
    MINUS_SIGN      shift and go to state 39
    FLOAT_CONST     shift and go to state 25
    BOOL_CONST      shift and go to state 29
    STRING_CONST    shift and go to state 30
    ID              shift and go to state 38

    Var_Cte                        shift and go to state 33
    Factor                         shift and go to state 144

state 124

    (93) Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign . Factor Mult_Div_Mod_Quad Multiple_Factors
    (100) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (101) Factor -> . Var_Cte
    (104) Var_Cte -> . INT_CONST Save_Int_Const
    (105) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (106) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (107) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (108) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (109) Var_Cte -> . STRING_CONST Save_String_Const
    (110) Var_Cte -> . ID Get_Id_Value

    PAR_OPEN        shift and go to state 24
    INT_CONST       shift and go to state 27
    MINUS_SIGN      shift and go to state 39
    FLOAT_CONST     shift and go to state 25
    BOOL_CONST      shift and go to state 29
    STRING_CONST    shift and go to state 30
    ID              shift and go to state 38

    Var_Cte                        shift and go to state 33
    Factor                         shift and go to state 145

state 125

    (55) Exp -> Logical_Or EQUAL Push_Equal Logical_Or . Equity_Quad
    (57) Equity_Quad -> .

    SEMICOLON       reduce using rule 57 (Equity_Quad -> .)
    PAR_CLOSE       reduce using rule 57 (Equity_Quad -> .)
    COMMA           reduce using rule 57 (Equity_Quad -> .)

    Equity_Quad                    shift and go to state 146

state 126

    (56) Exp -> Logical_Or DIFF Push_Diff Logical_Or . Equity_Quad
    (57) Equity_Quad -> .

    SEMICOLON       reduce using rule 57 (Equity_Quad -> .)
    PAR_CLOSE       reduce using rule 57 (Equity_Quad -> .)
    COMMA           reduce using rule 57 (Equity_Quad -> .)

    Equity_Quad                    shift and go to state 147

state 127

    (61) Multiple_Ands -> OR Push_Or . Logical_And Or_Quad Multiple_Ands
    (65) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (70) Logical_Not -> . Relational
    (71) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (74) Relational -> . Expression
    (75) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (76) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (77) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (78) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (84) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (91) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (100) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (101) Factor -> . Var_Cte
    (104) Var_Cte -> . INT_CONST Save_Int_Const
    (105) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (106) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (107) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (108) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (109) Var_Cte -> . STRING_CONST Save_String_Const
    (110) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 40
    PAR_OPEN        shift and go to state 24
    INT_CONST       shift and go to state 27
    MINUS_SIGN      shift and go to state 39
    FLOAT_CONST     shift and go to state 25
    BOOL_CONST      shift and go to state 29
    STRING_CONST    shift and go to state 30
    ID              shift and go to state 38

    Factor                         shift and go to state 32
    Relational                     shift and go to state 26
    Logical_Not                    shift and go to state 28
    Term                           shift and go to state 31
    Var_Cte                        shift and go to state 33
    Logical_And                    shift and go to state 148
    Expression                     shift and go to state 37

state 128

    (75) Relational -> Expression LESS Push_Less Expression . Relational_Quad
    (79) Relational_Quad -> .

    AND             reduce using rule 79 (Relational_Quad -> .)
    OR              reduce using rule 79 (Relational_Quad -> .)
    EQUAL           reduce using rule 79 (Relational_Quad -> .)
    DIFF            reduce using rule 79 (Relational_Quad -> .)
    SEMICOLON       reduce using rule 79 (Relational_Quad -> .)
    PAR_CLOSE       reduce using rule 79 (Relational_Quad -> .)
    COMMA           reduce using rule 79 (Relational_Quad -> .)

    Relational_Quad                shift and go to state 149

state 129

    (76) Relational -> Expression LESS_EQUAL Push_Less_Equal Expression . Relational_Quad
    (79) Relational_Quad -> .

    AND             reduce using rule 79 (Relational_Quad -> .)
    OR              reduce using rule 79 (Relational_Quad -> .)
    EQUAL           reduce using rule 79 (Relational_Quad -> .)
    DIFF            reduce using rule 79 (Relational_Quad -> .)
    SEMICOLON       reduce using rule 79 (Relational_Quad -> .)
    PAR_CLOSE       reduce using rule 79 (Relational_Quad -> .)
    COMMA           reduce using rule 79 (Relational_Quad -> .)

    Relational_Quad                shift and go to state 150

state 130

    (78) Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression . Relational_Quad
    (79) Relational_Quad -> .

    AND             reduce using rule 79 (Relational_Quad -> .)
    OR              reduce using rule 79 (Relational_Quad -> .)
    EQUAL           reduce using rule 79 (Relational_Quad -> .)
    DIFF            reduce using rule 79 (Relational_Quad -> .)
    SEMICOLON       reduce using rule 79 (Relational_Quad -> .)
    PAR_CLOSE       reduce using rule 79 (Relational_Quad -> .)
    COMMA           reduce using rule 79 (Relational_Quad -> .)

    Relational_Quad                shift and go to state 151

state 131

    (77) Relational -> Expression GREATER Push_Greater Expression . Relational_Quad
    (79) Relational_Quad -> .

    AND             reduce using rule 79 (Relational_Quad -> .)
    OR              reduce using rule 79 (Relational_Quad -> .)
    EQUAL           reduce using rule 79 (Relational_Quad -> .)
    DIFF            reduce using rule 79 (Relational_Quad -> .)
    SEMICOLON       reduce using rule 79 (Relational_Quad -> .)
    PAR_CLOSE       reduce using rule 79 (Relational_Quad -> .)
    COMMA           reduce using rule 79 (Relational_Quad -> .)

    Relational_Quad                shift and go to state 152

state 132

    (71) Logical_Not -> NOT Push_Not Relational Not_Quad .

    AND             reduce using rule 71 (Logical_Not -> NOT Push_Not Relational Not_Quad .)
    OR              reduce using rule 71 (Logical_Not -> NOT Push_Not Relational Not_Quad .)
    SEMICOLON       reduce using rule 71 (Logical_Not -> NOT Push_Not Relational Not_Quad .)
    PAR_CLOSE       reduce using rule 71 (Logical_Not -> NOT Push_Not Relational Not_Quad .)
    COMMA           reduce using rule 71 (Logical_Not -> NOT Push_Not Relational Not_Quad .)
    EQUAL           reduce using rule 71 (Logical_Not -> NOT Push_Not Relational Not_Quad .)
    DIFF            reduce using rule 71 (Logical_Not -> NOT Push_Not Relational Not_Quad .)


state 133

    (21) Square_Func -> SQUARE PAR_OPEN Exp . COMMA Exp COMMA Exp COMMA Selected_Color PAR_CLOSE

    COMMA           shift and go to state 153


state 134

    (20) Circle_Func -> CIRCLE PAR_OPEN Exp . COMMA Exp COMMA Exp COMMA Selected_Color PAR_CLOSE

    COMMA           shift and go to state 154


state 135

    (42) While_Loop -> WHILE Push_While_Jump PAR_OPEN Exp . PAR_CLOSE While_Quad Statements_Block Fill_While_Quads

    PAR_CLOSE       shift and go to state 155


state 136

    (34) Print -> PRINT PAR_OPEN Exp PAR_CLOSE . SEMICOLON

    SEMICOLON       shift and go to state 156


state 137

    (52) Assignment -> ID ASSIGN Push_Assign Exp . SEMICOLON

    SEMICOLON       shift and go to state 157


state 138

    (35) If_Eif_Else -> IF PAR_OPEN Exp PAR_CLOSE . If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion Optional_Else
    (40) If_GoToF_Quad -> .

    CURLYB_OPEN     reduce using rule 40 (If_GoToF_Quad -> .)

    If_GoToF_Quad                  shift and go to state 158

state 139

    (100) Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .

    TIMES_SIGN      reduce using rule 100 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    DIVIDE_SIGN     reduce using rule 100 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    MOD_SIGN        reduce using rule 100 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    PLUS_SIGN       reduce using rule 100 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    MINUS_SIGN      reduce using rule 100 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    LESS            reduce using rule 100 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    LESS_EQUAL      reduce using rule 100 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    GREATER         reduce using rule 100 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    GREATER_EQUAL   reduce using rule 100 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    AND             reduce using rule 100 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    OR              reduce using rule 100 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    EQUAL           reduce using rule 100 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    DIFF            reduce using rule 100 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    COMMA           reduce using rule 100 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    SEMICOLON       reduce using rule 100 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    PAR_CLOSE       reduce using rule 100 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)


state 140

    (66) Multiple_Nots -> AND Push_And Logical_Not . And_Quad Multiple_Nots
    (68) And_Quad -> .

    AND             reduce using rule 68 (And_Quad -> .)
    OR              reduce using rule 68 (And_Quad -> .)
    EQUAL           reduce using rule 68 (And_Quad -> .)
    DIFF            reduce using rule 68 (And_Quad -> .)
    SEMICOLON       reduce using rule 68 (And_Quad -> .)
    PAR_CLOSE       reduce using rule 68 (And_Quad -> .)
    COMMA           reduce using rule 68 (And_Quad -> .)

    And_Quad                       shift and go to state 159

state 141

    (86) Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term . Sum_Sub_Quad Multiple_Terms
    (88) Sum_Sub_Quad -> .

    PLUS_SIGN       reduce using rule 88 (Sum_Sub_Quad -> .)
    MINUS_SIGN      reduce using rule 88 (Sum_Sub_Quad -> .)
    LESS            reduce using rule 88 (Sum_Sub_Quad -> .)
    LESS_EQUAL      reduce using rule 88 (Sum_Sub_Quad -> .)
    GREATER         reduce using rule 88 (Sum_Sub_Quad -> .)
    GREATER_EQUAL   reduce using rule 88 (Sum_Sub_Quad -> .)
    AND             reduce using rule 88 (Sum_Sub_Quad -> .)
    OR              reduce using rule 88 (Sum_Sub_Quad -> .)
    EQUAL           reduce using rule 88 (Sum_Sub_Quad -> .)
    DIFF            reduce using rule 88 (Sum_Sub_Quad -> .)
    SEMICOLON       reduce using rule 88 (Sum_Sub_Quad -> .)
    PAR_CLOSE       reduce using rule 88 (Sum_Sub_Quad -> .)
    COMMA           reduce using rule 88 (Sum_Sub_Quad -> .)

    Sum_Sub_Quad                   shift and go to state 160

state 142

    (85) Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term . Sum_Sub_Quad Multiple_Terms
    (88) Sum_Sub_Quad -> .

    PLUS_SIGN       reduce using rule 88 (Sum_Sub_Quad -> .)
    MINUS_SIGN      reduce using rule 88 (Sum_Sub_Quad -> .)
    LESS            reduce using rule 88 (Sum_Sub_Quad -> .)
    LESS_EQUAL      reduce using rule 88 (Sum_Sub_Quad -> .)
    GREATER         reduce using rule 88 (Sum_Sub_Quad -> .)
    GREATER_EQUAL   reduce using rule 88 (Sum_Sub_Quad -> .)
    AND             reduce using rule 88 (Sum_Sub_Quad -> .)
    OR              reduce using rule 88 (Sum_Sub_Quad -> .)
    EQUAL           reduce using rule 88 (Sum_Sub_Quad -> .)
    DIFF            reduce using rule 88 (Sum_Sub_Quad -> .)
    SEMICOLON       reduce using rule 88 (Sum_Sub_Quad -> .)
    PAR_CLOSE       reduce using rule 88 (Sum_Sub_Quad -> .)
    COMMA           reduce using rule 88 (Sum_Sub_Quad -> .)

    Sum_Sub_Quad                   shift and go to state 161

state 143

    (92) Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor . Mult_Div_Mod_Quad Multiple_Factors
    (96) Mult_Div_Mod_Quad -> .

    TIMES_SIGN      reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    DIVIDE_SIGN     reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    MOD_SIGN        reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    PLUS_SIGN       reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    MINUS_SIGN      reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    LESS            reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    LESS_EQUAL      reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    GREATER         reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    GREATER_EQUAL   reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    AND             reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    OR              reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    EQUAL           reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    DIFF            reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    SEMICOLON       reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    PAR_CLOSE       reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    COMMA           reduce using rule 96 (Mult_Div_Mod_Quad -> .)

    Mult_Div_Mod_Quad              shift and go to state 162

state 144

    (94) Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor . Mult_Div_Mod_Quad Multiple_Factors
    (96) Mult_Div_Mod_Quad -> .

    TIMES_SIGN      reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    DIVIDE_SIGN     reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    MOD_SIGN        reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    PLUS_SIGN       reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    MINUS_SIGN      reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    LESS            reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    LESS_EQUAL      reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    GREATER         reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    GREATER_EQUAL   reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    AND             reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    OR              reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    EQUAL           reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    DIFF            reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    SEMICOLON       reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    PAR_CLOSE       reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    COMMA           reduce using rule 96 (Mult_Div_Mod_Quad -> .)

    Mult_Div_Mod_Quad              shift and go to state 163

state 145

    (93) Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor . Mult_Div_Mod_Quad Multiple_Factors
    (96) Mult_Div_Mod_Quad -> .

    TIMES_SIGN      reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    DIVIDE_SIGN     reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    MOD_SIGN        reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    PLUS_SIGN       reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    MINUS_SIGN      reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    LESS            reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    LESS_EQUAL      reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    GREATER         reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    GREATER_EQUAL   reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    AND             reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    OR              reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    EQUAL           reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    DIFF            reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    SEMICOLON       reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    PAR_CLOSE       reduce using rule 96 (Mult_Div_Mod_Quad -> .)
    COMMA           reduce using rule 96 (Mult_Div_Mod_Quad -> .)

    Mult_Div_Mod_Quad              shift and go to state 164

state 146

    (55) Exp -> Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad .

    SEMICOLON       reduce using rule 55 (Exp -> Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad .)
    COMMA           reduce using rule 55 (Exp -> Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad .)
    PAR_CLOSE       reduce using rule 55 (Exp -> Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad .)


state 147

    (56) Exp -> Logical_Or DIFF Push_Diff Logical_Or Equity_Quad .

    SEMICOLON       reduce using rule 56 (Exp -> Logical_Or DIFF Push_Diff Logical_Or Equity_Quad .)
    COMMA           reduce using rule 56 (Exp -> Logical_Or DIFF Push_Diff Logical_Or Equity_Quad .)
    PAR_CLOSE       reduce using rule 56 (Exp -> Logical_Or DIFF Push_Diff Logical_Or Equity_Quad .)


state 148

    (61) Multiple_Ands -> OR Push_Or Logical_And . Or_Quad Multiple_Ands
    (63) Or_Quad -> .

    OR              reduce using rule 63 (Or_Quad -> .)
    EQUAL           reduce using rule 63 (Or_Quad -> .)
    DIFF            reduce using rule 63 (Or_Quad -> .)
    SEMICOLON       reduce using rule 63 (Or_Quad -> .)
    PAR_CLOSE       reduce using rule 63 (Or_Quad -> .)
    COMMA           reduce using rule 63 (Or_Quad -> .)

    Or_Quad                        shift and go to state 165

state 149

    (75) Relational -> Expression LESS Push_Less Expression Relational_Quad .

    AND             reduce using rule 75 (Relational -> Expression LESS Push_Less Expression Relational_Quad .)
    OR              reduce using rule 75 (Relational -> Expression LESS Push_Less Expression Relational_Quad .)
    EQUAL           reduce using rule 75 (Relational -> Expression LESS Push_Less Expression Relational_Quad .)
    DIFF            reduce using rule 75 (Relational -> Expression LESS Push_Less Expression Relational_Quad .)
    PAR_CLOSE       reduce using rule 75 (Relational -> Expression LESS Push_Less Expression Relational_Quad .)
    COMMA           reduce using rule 75 (Relational -> Expression LESS Push_Less Expression Relational_Quad .)
    SEMICOLON       reduce using rule 75 (Relational -> Expression LESS Push_Less Expression Relational_Quad .)


state 150

    (76) Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad .

    AND             reduce using rule 76 (Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad .)
    OR              reduce using rule 76 (Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad .)
    EQUAL           reduce using rule 76 (Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad .)
    DIFF            reduce using rule 76 (Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad .)
    PAR_CLOSE       reduce using rule 76 (Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad .)
    COMMA           reduce using rule 76 (Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad .)
    SEMICOLON       reduce using rule 76 (Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad .)


state 151

    (78) Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad .

    AND             reduce using rule 78 (Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad .)
    OR              reduce using rule 78 (Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad .)
    EQUAL           reduce using rule 78 (Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad .)
    DIFF            reduce using rule 78 (Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad .)
    PAR_CLOSE       reduce using rule 78 (Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad .)
    COMMA           reduce using rule 78 (Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad .)
    SEMICOLON       reduce using rule 78 (Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad .)


state 152

    (77) Relational -> Expression GREATER Push_Greater Expression Relational_Quad .

    AND             reduce using rule 77 (Relational -> Expression GREATER Push_Greater Expression Relational_Quad .)
    OR              reduce using rule 77 (Relational -> Expression GREATER Push_Greater Expression Relational_Quad .)
    EQUAL           reduce using rule 77 (Relational -> Expression GREATER Push_Greater Expression Relational_Quad .)
    DIFF            reduce using rule 77 (Relational -> Expression GREATER Push_Greater Expression Relational_Quad .)
    PAR_CLOSE       reduce using rule 77 (Relational -> Expression GREATER Push_Greater Expression Relational_Quad .)
    COMMA           reduce using rule 77 (Relational -> Expression GREATER Push_Greater Expression Relational_Quad .)
    SEMICOLON       reduce using rule 77 (Relational -> Expression GREATER Push_Greater Expression Relational_Quad .)


state 153

    (21) Square_Func -> SQUARE PAR_OPEN Exp COMMA . Exp COMMA Exp COMMA Selected_Color PAR_CLOSE
    (54) Exp -> . Logical_Or
    (55) Exp -> . Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad
    (56) Exp -> . Logical_Or DIFF Push_Diff Logical_Or Equity_Quad
    (60) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (65) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (70) Logical_Not -> . Relational
    (71) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (74) Relational -> . Expression
    (75) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (76) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (77) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (78) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (84) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (91) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (100) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (101) Factor -> . Var_Cte
    (104) Var_Cte -> . INT_CONST Save_Int_Const
    (105) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (106) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (107) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (108) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (109) Var_Cte -> . STRING_CONST Save_String_Const
    (110) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 40
    PAR_OPEN        shift and go to state 24
    INT_CONST       shift and go to state 27
    MINUS_SIGN      shift and go to state 39
    FLOAT_CONST     shift and go to state 25
    BOOL_CONST      shift and go to state 29
    STRING_CONST    shift and go to state 30
    ID              shift and go to state 38

    Factor                         shift and go to state 32
    Relational                     shift and go to state 26
    Logical_Not                    shift and go to state 28
    Term                           shift and go to state 31
    Var_Cte                        shift and go to state 33
    Logical_Or                     shift and go to state 34
    Logical_And                    shift and go to state 35
    Exp                            shift and go to state 166
    Expression                     shift and go to state 37

state 154

    (20) Circle_Func -> CIRCLE PAR_OPEN Exp COMMA . Exp COMMA Exp COMMA Selected_Color PAR_CLOSE
    (54) Exp -> . Logical_Or
    (55) Exp -> . Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad
    (56) Exp -> . Logical_Or DIFF Push_Diff Logical_Or Equity_Quad
    (60) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (65) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (70) Logical_Not -> . Relational
    (71) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (74) Relational -> . Expression
    (75) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (76) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (77) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (78) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (84) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (91) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (100) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (101) Factor -> . Var_Cte
    (104) Var_Cte -> . INT_CONST Save_Int_Const
    (105) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (106) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (107) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (108) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (109) Var_Cte -> . STRING_CONST Save_String_Const
    (110) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 40
    PAR_OPEN        shift and go to state 24
    INT_CONST       shift and go to state 27
    MINUS_SIGN      shift and go to state 39
    FLOAT_CONST     shift and go to state 25
    BOOL_CONST      shift and go to state 29
    STRING_CONST    shift and go to state 30
    ID              shift and go to state 38

    Factor                         shift and go to state 32
    Relational                     shift and go to state 26
    Logical_Not                    shift and go to state 28
    Term                           shift and go to state 31
    Var_Cte                        shift and go to state 33
    Logical_Or                     shift and go to state 34
    Logical_And                    shift and go to state 35
    Exp                            shift and go to state 167
    Expression                     shift and go to state 37

state 155

    (42) While_Loop -> WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE . While_Quad Statements_Block Fill_While_Quads
    (44) While_Quad -> .

    CURLYB_OPEN     reduce using rule 44 (While_Quad -> .)

    While_Quad                     shift and go to state 168

state 156

    (34) Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON .

    PRINT           reduce using rule 34 (Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON .)
    ID              reduce using rule 34 (Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON .)
    WHILE           reduce using rule 34 (Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON .)
    IF              reduce using rule 34 (Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON .)
    DRAW            reduce using rule 34 (Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON .)
    INT             reduce using rule 34 (Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON .)
    FLOAT           reduce using rule 34 (Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON .)
    BOOL            reduce using rule 34 (Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON .)
    STRING          reduce using rule 34 (Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON .)
    CURLYB_CLOSE    reduce using rule 34 (Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON .)


state 157

    (52) Assignment -> ID ASSIGN Push_Assign Exp SEMICOLON .

    PRINT           reduce using rule 52 (Assignment -> ID ASSIGN Push_Assign Exp SEMICOLON .)
    ID              reduce using rule 52 (Assignment -> ID ASSIGN Push_Assign Exp SEMICOLON .)
    WHILE           reduce using rule 52 (Assignment -> ID ASSIGN Push_Assign Exp SEMICOLON .)
    IF              reduce using rule 52 (Assignment -> ID ASSIGN Push_Assign Exp SEMICOLON .)
    DRAW            reduce using rule 52 (Assignment -> ID ASSIGN Push_Assign Exp SEMICOLON .)
    INT             reduce using rule 52 (Assignment -> ID ASSIGN Push_Assign Exp SEMICOLON .)
    FLOAT           reduce using rule 52 (Assignment -> ID ASSIGN Push_Assign Exp SEMICOLON .)
    BOOL            reduce using rule 52 (Assignment -> ID ASSIGN Push_Assign Exp SEMICOLON .)
    STRING          reduce using rule 52 (Assignment -> ID ASSIGN Push_Assign Exp SEMICOLON .)
    CURLYB_CLOSE    reduce using rule 52 (Assignment -> ID ASSIGN Push_Assign Exp SEMICOLON .)


state 158

    (35) If_Eif_Else -> IF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad . Statements_Block GoTo_Fill Eif_Recursion Optional_Else
    (8) Statements_Block -> . CURLYB_OPEN Multiple_Statements CURLYB_CLOSE

    CURLYB_OPEN     shift and go to state 23

    Statements_Block               shift and go to state 169

state 159

    (66) Multiple_Nots -> AND Push_And Logical_Not And_Quad . Multiple_Nots
    (66) Multiple_Nots -> . AND Push_And Logical_Not And_Quad Multiple_Nots
    (67) Multiple_Nots -> . Epsilon
    (118) Epsilon -> .

    AND             shift and go to state 87
    OR              reduce using rule 118 (Epsilon -> .)
    EQUAL           reduce using rule 118 (Epsilon -> .)
    DIFF            reduce using rule 118 (Epsilon -> .)
    SEMICOLON       reduce using rule 118 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 118 (Epsilon -> .)
    COMMA           reduce using rule 118 (Epsilon -> .)

    Multiple_Nots                  shift and go to state 170
    Epsilon                        shift and go to state 88

state 160

    (86) Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad . Multiple_Terms
    (85) Multiple_Terms -> . PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms
    (86) Multiple_Terms -> . MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms
    (87) Multiple_Terms -> . Epsilon
    (118) Epsilon -> .

    PLUS_SIGN       shift and go to state 93
    MINUS_SIGN      shift and go to state 92
    LESS            reduce using rule 118 (Epsilon -> .)
    LESS_EQUAL      reduce using rule 118 (Epsilon -> .)
    GREATER         reduce using rule 118 (Epsilon -> .)
    GREATER_EQUAL   reduce using rule 118 (Epsilon -> .)
    AND             reduce using rule 118 (Epsilon -> .)
    OR              reduce using rule 118 (Epsilon -> .)
    EQUAL           reduce using rule 118 (Epsilon -> .)
    DIFF            reduce using rule 118 (Epsilon -> .)
    SEMICOLON       reduce using rule 118 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 118 (Epsilon -> .)
    COMMA           reduce using rule 118 (Epsilon -> .)

    Multiple_Terms                 shift and go to state 171
    Epsilon                        shift and go to state 91

state 161

    (85) Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad . Multiple_Terms
    (85) Multiple_Terms -> . PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms
    (86) Multiple_Terms -> . MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms
    (87) Multiple_Terms -> . Epsilon
    (118) Epsilon -> .

    PLUS_SIGN       shift and go to state 93
    MINUS_SIGN      shift and go to state 92
    LESS            reduce using rule 118 (Epsilon -> .)
    LESS_EQUAL      reduce using rule 118 (Epsilon -> .)
    GREATER         reduce using rule 118 (Epsilon -> .)
    GREATER_EQUAL   reduce using rule 118 (Epsilon -> .)
    AND             reduce using rule 118 (Epsilon -> .)
    OR              reduce using rule 118 (Epsilon -> .)
    EQUAL           reduce using rule 118 (Epsilon -> .)
    DIFF            reduce using rule 118 (Epsilon -> .)
    SEMICOLON       reduce using rule 118 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 118 (Epsilon -> .)
    COMMA           reduce using rule 118 (Epsilon -> .)

    Multiple_Terms                 shift and go to state 172
    Epsilon                        shift and go to state 91

state 162

    (92) Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad . Multiple_Factors
    (92) Multiple_Factors -> . TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (93) Multiple_Factors -> . DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (94) Multiple_Factors -> . MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (95) Multiple_Factors -> . Epsilon
    (118) Epsilon -> .

    TIMES_SIGN      shift and go to state 94
    DIVIDE_SIGN     shift and go to state 98
    MOD_SIGN        shift and go to state 95
    PLUS_SIGN       reduce using rule 118 (Epsilon -> .)
    MINUS_SIGN      reduce using rule 118 (Epsilon -> .)
    LESS            reduce using rule 118 (Epsilon -> .)
    LESS_EQUAL      reduce using rule 118 (Epsilon -> .)
    GREATER         reduce using rule 118 (Epsilon -> .)
    GREATER_EQUAL   reduce using rule 118 (Epsilon -> .)
    AND             reduce using rule 118 (Epsilon -> .)
    OR              reduce using rule 118 (Epsilon -> .)
    EQUAL           reduce using rule 118 (Epsilon -> .)
    DIFF            reduce using rule 118 (Epsilon -> .)
    SEMICOLON       reduce using rule 118 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 118 (Epsilon -> .)
    COMMA           reduce using rule 118 (Epsilon -> .)

    Epsilon                        shift and go to state 96
    Multiple_Factors               shift and go to state 173

state 163

    (94) Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad . Multiple_Factors
    (92) Multiple_Factors -> . TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (93) Multiple_Factors -> . DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (94) Multiple_Factors -> . MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (95) Multiple_Factors -> . Epsilon
    (118) Epsilon -> .

    TIMES_SIGN      shift and go to state 94
    DIVIDE_SIGN     shift and go to state 98
    MOD_SIGN        shift and go to state 95
    PLUS_SIGN       reduce using rule 118 (Epsilon -> .)
    MINUS_SIGN      reduce using rule 118 (Epsilon -> .)
    LESS            reduce using rule 118 (Epsilon -> .)
    LESS_EQUAL      reduce using rule 118 (Epsilon -> .)
    GREATER         reduce using rule 118 (Epsilon -> .)
    GREATER_EQUAL   reduce using rule 118 (Epsilon -> .)
    AND             reduce using rule 118 (Epsilon -> .)
    OR              reduce using rule 118 (Epsilon -> .)
    EQUAL           reduce using rule 118 (Epsilon -> .)
    DIFF            reduce using rule 118 (Epsilon -> .)
    SEMICOLON       reduce using rule 118 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 118 (Epsilon -> .)
    COMMA           reduce using rule 118 (Epsilon -> .)

    Epsilon                        shift and go to state 96
    Multiple_Factors               shift and go to state 174

state 164

    (93) Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad . Multiple_Factors
    (92) Multiple_Factors -> . TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (93) Multiple_Factors -> . DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (94) Multiple_Factors -> . MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (95) Multiple_Factors -> . Epsilon
    (118) Epsilon -> .

    TIMES_SIGN      shift and go to state 94
    DIVIDE_SIGN     shift and go to state 98
    MOD_SIGN        shift and go to state 95
    PLUS_SIGN       reduce using rule 118 (Epsilon -> .)
    MINUS_SIGN      reduce using rule 118 (Epsilon -> .)
    LESS            reduce using rule 118 (Epsilon -> .)
    LESS_EQUAL      reduce using rule 118 (Epsilon -> .)
    GREATER         reduce using rule 118 (Epsilon -> .)
    GREATER_EQUAL   reduce using rule 118 (Epsilon -> .)
    AND             reduce using rule 118 (Epsilon -> .)
    OR              reduce using rule 118 (Epsilon -> .)
    EQUAL           reduce using rule 118 (Epsilon -> .)
    DIFF            reduce using rule 118 (Epsilon -> .)
    SEMICOLON       reduce using rule 118 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 118 (Epsilon -> .)
    COMMA           reduce using rule 118 (Epsilon -> .)

    Epsilon                        shift and go to state 96
    Multiple_Factors               shift and go to state 175

state 165

    (61) Multiple_Ands -> OR Push_Or Logical_And Or_Quad . Multiple_Ands
    (61) Multiple_Ands -> . OR Push_Or Logical_And Or_Quad Multiple_Ands
    (62) Multiple_Ands -> . Epsilon
    (118) Epsilon -> .

    OR              shift and go to state 103
    EQUAL           reduce using rule 118 (Epsilon -> .)
    DIFF            reduce using rule 118 (Epsilon -> .)
    SEMICOLON       reduce using rule 118 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 118 (Epsilon -> .)
    COMMA           reduce using rule 118 (Epsilon -> .)

    Multiple_Ands                  shift and go to state 176
    Epsilon                        shift and go to state 102

state 166

    (21) Square_Func -> SQUARE PAR_OPEN Exp COMMA Exp . COMMA Exp COMMA Selected_Color PAR_CLOSE

    COMMA           shift and go to state 177


state 167

    (20) Circle_Func -> CIRCLE PAR_OPEN Exp COMMA Exp . COMMA Exp COMMA Selected_Color PAR_CLOSE

    COMMA           shift and go to state 178


state 168

    (42) While_Loop -> WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad . Statements_Block Fill_While_Quads
    (8) Statements_Block -> . CURLYB_OPEN Multiple_Statements CURLYB_CLOSE

    CURLYB_OPEN     shift and go to state 23

    Statements_Block               shift and go to state 179

state 169

    (35) If_Eif_Else -> IF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block . GoTo_Fill Eif_Recursion Optional_Else
    (41) GoTo_Fill -> .

    EIF             reduce using rule 41 (GoTo_Fill -> .)
    ELSE            reduce using rule 41 (GoTo_Fill -> .)
    PRINT           reduce using rule 41 (GoTo_Fill -> .)
    ID              reduce using rule 41 (GoTo_Fill -> .)
    WHILE           reduce using rule 41 (GoTo_Fill -> .)
    IF              reduce using rule 41 (GoTo_Fill -> .)
    DRAW            reduce using rule 41 (GoTo_Fill -> .)
    INT             reduce using rule 41 (GoTo_Fill -> .)
    FLOAT           reduce using rule 41 (GoTo_Fill -> .)
    BOOL            reduce using rule 41 (GoTo_Fill -> .)
    STRING          reduce using rule 41 (GoTo_Fill -> .)
    CURLYB_CLOSE    reduce using rule 41 (GoTo_Fill -> .)

    GoTo_Fill                      shift and go to state 180

state 170

    (66) Multiple_Nots -> AND Push_And Logical_Not And_Quad Multiple_Nots .

    OR              reduce using rule 66 (Multiple_Nots -> AND Push_And Logical_Not And_Quad Multiple_Nots .)
    EQUAL           reduce using rule 66 (Multiple_Nots -> AND Push_And Logical_Not And_Quad Multiple_Nots .)
    DIFF            reduce using rule 66 (Multiple_Nots -> AND Push_And Logical_Not And_Quad Multiple_Nots .)
    SEMICOLON       reduce using rule 66 (Multiple_Nots -> AND Push_And Logical_Not And_Quad Multiple_Nots .)
    PAR_CLOSE       reduce using rule 66 (Multiple_Nots -> AND Push_And Logical_Not And_Quad Multiple_Nots .)
    COMMA           reduce using rule 66 (Multiple_Nots -> AND Push_And Logical_Not And_Quad Multiple_Nots .)


state 171

    (86) Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .

    LESS            reduce using rule 86 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    LESS_EQUAL      reduce using rule 86 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    GREATER         reduce using rule 86 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    GREATER_EQUAL   reduce using rule 86 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    AND             reduce using rule 86 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    OR              reduce using rule 86 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    EQUAL           reduce using rule 86 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    DIFF            reduce using rule 86 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    SEMICOLON       reduce using rule 86 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    PAR_CLOSE       reduce using rule 86 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    COMMA           reduce using rule 86 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)


state 172

    (85) Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .

    LESS            reduce using rule 85 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    LESS_EQUAL      reduce using rule 85 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    GREATER         reduce using rule 85 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    GREATER_EQUAL   reduce using rule 85 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    AND             reduce using rule 85 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    OR              reduce using rule 85 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    EQUAL           reduce using rule 85 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    DIFF            reduce using rule 85 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    SEMICOLON       reduce using rule 85 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    PAR_CLOSE       reduce using rule 85 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    COMMA           reduce using rule 85 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)


state 173

    (92) Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .

    PLUS_SIGN       reduce using rule 92 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    MINUS_SIGN      reduce using rule 92 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS            reduce using rule 92 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS_EQUAL      reduce using rule 92 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER         reduce using rule 92 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER_EQUAL   reduce using rule 92 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    AND             reduce using rule 92 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    OR              reduce using rule 92 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    EQUAL           reduce using rule 92 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    DIFF            reduce using rule 92 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    SEMICOLON       reduce using rule 92 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    PAR_CLOSE       reduce using rule 92 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    COMMA           reduce using rule 92 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)


state 174

    (94) Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .

    PLUS_SIGN       reduce using rule 94 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    MINUS_SIGN      reduce using rule 94 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS            reduce using rule 94 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS_EQUAL      reduce using rule 94 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER         reduce using rule 94 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER_EQUAL   reduce using rule 94 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    AND             reduce using rule 94 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    OR              reduce using rule 94 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    EQUAL           reduce using rule 94 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    DIFF            reduce using rule 94 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    SEMICOLON       reduce using rule 94 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    PAR_CLOSE       reduce using rule 94 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    COMMA           reduce using rule 94 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)


state 175

    (93) Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .

    PLUS_SIGN       reduce using rule 93 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    MINUS_SIGN      reduce using rule 93 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS            reduce using rule 93 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS_EQUAL      reduce using rule 93 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER         reduce using rule 93 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER_EQUAL   reduce using rule 93 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    AND             reduce using rule 93 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    OR              reduce using rule 93 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    EQUAL           reduce using rule 93 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    DIFF            reduce using rule 93 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    SEMICOLON       reduce using rule 93 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    PAR_CLOSE       reduce using rule 93 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    COMMA           reduce using rule 93 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)


state 176

    (61) Multiple_Ands -> OR Push_Or Logical_And Or_Quad Multiple_Ands .

    EQUAL           reduce using rule 61 (Multiple_Ands -> OR Push_Or Logical_And Or_Quad Multiple_Ands .)
    DIFF            reduce using rule 61 (Multiple_Ands -> OR Push_Or Logical_And Or_Quad Multiple_Ands .)
    SEMICOLON       reduce using rule 61 (Multiple_Ands -> OR Push_Or Logical_And Or_Quad Multiple_Ands .)
    PAR_CLOSE       reduce using rule 61 (Multiple_Ands -> OR Push_Or Logical_And Or_Quad Multiple_Ands .)
    COMMA           reduce using rule 61 (Multiple_Ands -> OR Push_Or Logical_And Or_Quad Multiple_Ands .)


state 177

    (21) Square_Func -> SQUARE PAR_OPEN Exp COMMA Exp COMMA . Exp COMMA Selected_Color PAR_CLOSE
    (54) Exp -> . Logical_Or
    (55) Exp -> . Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad
    (56) Exp -> . Logical_Or DIFF Push_Diff Logical_Or Equity_Quad
    (60) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (65) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (70) Logical_Not -> . Relational
    (71) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (74) Relational -> . Expression
    (75) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (76) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (77) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (78) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (84) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (91) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (100) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (101) Factor -> . Var_Cte
    (104) Var_Cte -> . INT_CONST Save_Int_Const
    (105) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (106) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (107) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (108) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (109) Var_Cte -> . STRING_CONST Save_String_Const
    (110) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 40
    PAR_OPEN        shift and go to state 24
    INT_CONST       shift and go to state 27
    MINUS_SIGN      shift and go to state 39
    FLOAT_CONST     shift and go to state 25
    BOOL_CONST      shift and go to state 29
    STRING_CONST    shift and go to state 30
    ID              shift and go to state 38

    Factor                         shift and go to state 32
    Relational                     shift and go to state 26
    Logical_Not                    shift and go to state 28
    Term                           shift and go to state 31
    Var_Cte                        shift and go to state 33
    Logical_Or                     shift and go to state 34
    Logical_And                    shift and go to state 35
    Exp                            shift and go to state 181
    Expression                     shift and go to state 37

state 178

    (20) Circle_Func -> CIRCLE PAR_OPEN Exp COMMA Exp COMMA . Exp COMMA Selected_Color PAR_CLOSE
    (54) Exp -> . Logical_Or
    (55) Exp -> . Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad
    (56) Exp -> . Logical_Or DIFF Push_Diff Logical_Or Equity_Quad
    (60) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (65) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (70) Logical_Not -> . Relational
    (71) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (74) Relational -> . Expression
    (75) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (76) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (77) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (78) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (84) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (91) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (100) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (101) Factor -> . Var_Cte
    (104) Var_Cte -> . INT_CONST Save_Int_Const
    (105) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (106) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (107) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (108) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (109) Var_Cte -> . STRING_CONST Save_String_Const
    (110) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 40
    PAR_OPEN        shift and go to state 24
    INT_CONST       shift and go to state 27
    MINUS_SIGN      shift and go to state 39
    FLOAT_CONST     shift and go to state 25
    BOOL_CONST      shift and go to state 29
    STRING_CONST    shift and go to state 30
    ID              shift and go to state 38

    Factor                         shift and go to state 32
    Relational                     shift and go to state 26
    Logical_Not                    shift and go to state 28
    Term                           shift and go to state 31
    Var_Cte                        shift and go to state 33
    Logical_Or                     shift and go to state 34
    Logical_And                    shift and go to state 35
    Exp                            shift and go to state 182
    Expression                     shift and go to state 37

state 179

    (42) While_Loop -> WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block . Fill_While_Quads
    (45) Fill_While_Quads -> .

    PRINT           reduce using rule 45 (Fill_While_Quads -> .)
    ID              reduce using rule 45 (Fill_While_Quads -> .)
    WHILE           reduce using rule 45 (Fill_While_Quads -> .)
    IF              reduce using rule 45 (Fill_While_Quads -> .)
    DRAW            reduce using rule 45 (Fill_While_Quads -> .)
    INT             reduce using rule 45 (Fill_While_Quads -> .)
    FLOAT           reduce using rule 45 (Fill_While_Quads -> .)
    BOOL            reduce using rule 45 (Fill_While_Quads -> .)
    STRING          reduce using rule 45 (Fill_While_Quads -> .)
    CURLYB_CLOSE    reduce using rule 45 (Fill_While_Quads -> .)

    Fill_While_Quads               shift and go to state 183

state 180

    (35) If_Eif_Else -> IF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill . Eif_Recursion Optional_Else
    (36) Eif_Recursion -> . EIF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion
    (37) Eif_Recursion -> . Epsilon
    (118) Epsilon -> .

    EIF             shift and go to state 186
    ELSE            reduce using rule 118 (Epsilon -> .)
    PRINT           reduce using rule 118 (Epsilon -> .)
    ID              reduce using rule 118 (Epsilon -> .)
    WHILE           reduce using rule 118 (Epsilon -> .)
    IF              reduce using rule 118 (Epsilon -> .)
    DRAW            reduce using rule 118 (Epsilon -> .)
    INT             reduce using rule 118 (Epsilon -> .)
    FLOAT           reduce using rule 118 (Epsilon -> .)
    BOOL            reduce using rule 118 (Epsilon -> .)
    STRING          reduce using rule 118 (Epsilon -> .)
    CURLYB_CLOSE    reduce using rule 118 (Epsilon -> .)

    Eif_Recursion                  shift and go to state 184
    Epsilon                        shift and go to state 185

state 181

    (21) Square_Func -> SQUARE PAR_OPEN Exp COMMA Exp COMMA Exp . COMMA Selected_Color PAR_CLOSE

    COMMA           shift and go to state 187


state 182

    (20) Circle_Func -> CIRCLE PAR_OPEN Exp COMMA Exp COMMA Exp . COMMA Selected_Color PAR_CLOSE

    COMMA           shift and go to state 188


state 183

    (42) While_Loop -> WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads .

    PRINT           reduce using rule 42 (While_Loop -> WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads .)
    ID              reduce using rule 42 (While_Loop -> WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads .)
    WHILE           reduce using rule 42 (While_Loop -> WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads .)
    IF              reduce using rule 42 (While_Loop -> WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads .)
    DRAW            reduce using rule 42 (While_Loop -> WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads .)
    INT             reduce using rule 42 (While_Loop -> WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads .)
    FLOAT           reduce using rule 42 (While_Loop -> WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads .)
    BOOL            reduce using rule 42 (While_Loop -> WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads .)
    STRING          reduce using rule 42 (While_Loop -> WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads .)
    CURLYB_CLOSE    reduce using rule 42 (While_Loop -> WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads .)


state 184

    (35) If_Eif_Else -> IF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion . Optional_Else
    (38) Optional_Else -> . ELSE Statements_Block
    (39) Optional_Else -> . Epsilon
    (118) Epsilon -> .

    ELSE            shift and go to state 190
    PRINT           reduce using rule 118 (Epsilon -> .)
    ID              reduce using rule 118 (Epsilon -> .)
    WHILE           reduce using rule 118 (Epsilon -> .)
    IF              reduce using rule 118 (Epsilon -> .)
    DRAW            reduce using rule 118 (Epsilon -> .)
    INT             reduce using rule 118 (Epsilon -> .)
    FLOAT           reduce using rule 118 (Epsilon -> .)
    BOOL            reduce using rule 118 (Epsilon -> .)
    STRING          reduce using rule 118 (Epsilon -> .)
    CURLYB_CLOSE    reduce using rule 118 (Epsilon -> .)

    Optional_Else                  shift and go to state 189
    Epsilon                        shift and go to state 191

state 185

    (37) Eif_Recursion -> Epsilon .

    ELSE            reduce using rule 37 (Eif_Recursion -> Epsilon .)
    PRINT           reduce using rule 37 (Eif_Recursion -> Epsilon .)
    ID              reduce using rule 37 (Eif_Recursion -> Epsilon .)
    WHILE           reduce using rule 37 (Eif_Recursion -> Epsilon .)
    IF              reduce using rule 37 (Eif_Recursion -> Epsilon .)
    DRAW            reduce using rule 37 (Eif_Recursion -> Epsilon .)
    INT             reduce using rule 37 (Eif_Recursion -> Epsilon .)
    FLOAT           reduce using rule 37 (Eif_Recursion -> Epsilon .)
    BOOL            reduce using rule 37 (Eif_Recursion -> Epsilon .)
    STRING          reduce using rule 37 (Eif_Recursion -> Epsilon .)
    CURLYB_CLOSE    reduce using rule 37 (Eif_Recursion -> Epsilon .)


state 186

    (36) Eif_Recursion -> EIF . PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion

    PAR_OPEN        shift and go to state 192


state 187

    (21) Square_Func -> SQUARE PAR_OPEN Exp COMMA Exp COMMA Exp COMMA . Selected_Color PAR_CLOSE
    (22) Selected_Color -> . RED
    (23) Selected_Color -> . GREEN
    (24) Selected_Color -> . BLUE
    (25) Selected_Color -> . YELLOW
    (26) Selected_Color -> . PURPLE
    (27) Selected_Color -> . WHITE
    (28) Selected_Color -> . BLACK
    (29) Selected_Color -> . ORANGE
    (30) Selected_Color -> . CYAN
    (31) Selected_Color -> . MAGENTA
    (32) Selected_Color -> . PINK
    (33) Selected_Color -> . GRAY

    RED             shift and go to state 205
    GREEN           shift and go to state 196
    BLUE            shift and go to state 193
    YELLOW          shift and go to state 197
    PURPLE          shift and go to state 195
    WHITE           shift and go to state 202
    BLACK           shift and go to state 198
    ORANGE          shift and go to state 201
    CYAN            shift and go to state 203
    MAGENTA         shift and go to state 204
    PINK            shift and go to state 199
    GRAY            shift and go to state 194

    Selected_Color                 shift and go to state 200

state 188

    (20) Circle_Func -> CIRCLE PAR_OPEN Exp COMMA Exp COMMA Exp COMMA . Selected_Color PAR_CLOSE
    (22) Selected_Color -> . RED
    (23) Selected_Color -> . GREEN
    (24) Selected_Color -> . BLUE
    (25) Selected_Color -> . YELLOW
    (26) Selected_Color -> . PURPLE
    (27) Selected_Color -> . WHITE
    (28) Selected_Color -> . BLACK
    (29) Selected_Color -> . ORANGE
    (30) Selected_Color -> . CYAN
    (31) Selected_Color -> . MAGENTA
    (32) Selected_Color -> . PINK
    (33) Selected_Color -> . GRAY

    RED             shift and go to state 205
    GREEN           shift and go to state 196
    BLUE            shift and go to state 193
    YELLOW          shift and go to state 197
    PURPLE          shift and go to state 195
    WHITE           shift and go to state 202
    BLACK           shift and go to state 198
    ORANGE          shift and go to state 201
    CYAN            shift and go to state 203
    MAGENTA         shift and go to state 204
    PINK            shift and go to state 199
    GRAY            shift and go to state 194

    Selected_Color                 shift and go to state 206

state 189

    (35) If_Eif_Else -> IF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion Optional_Else .

    PRINT           reduce using rule 35 (If_Eif_Else -> IF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion Optional_Else .)
    ID              reduce using rule 35 (If_Eif_Else -> IF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion Optional_Else .)
    WHILE           reduce using rule 35 (If_Eif_Else -> IF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion Optional_Else .)
    IF              reduce using rule 35 (If_Eif_Else -> IF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion Optional_Else .)
    DRAW            reduce using rule 35 (If_Eif_Else -> IF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion Optional_Else .)
    INT             reduce using rule 35 (If_Eif_Else -> IF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion Optional_Else .)
    FLOAT           reduce using rule 35 (If_Eif_Else -> IF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion Optional_Else .)
    BOOL            reduce using rule 35 (If_Eif_Else -> IF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion Optional_Else .)
    STRING          reduce using rule 35 (If_Eif_Else -> IF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion Optional_Else .)
    CURLYB_CLOSE    reduce using rule 35 (If_Eif_Else -> IF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion Optional_Else .)


state 190

    (38) Optional_Else -> ELSE . Statements_Block
    (8) Statements_Block -> . CURLYB_OPEN Multiple_Statements CURLYB_CLOSE

    CURLYB_OPEN     shift and go to state 23

    Statements_Block               shift and go to state 207

state 191

    (39) Optional_Else -> Epsilon .

    PRINT           reduce using rule 39 (Optional_Else -> Epsilon .)
    ID              reduce using rule 39 (Optional_Else -> Epsilon .)
    WHILE           reduce using rule 39 (Optional_Else -> Epsilon .)
    IF              reduce using rule 39 (Optional_Else -> Epsilon .)
    DRAW            reduce using rule 39 (Optional_Else -> Epsilon .)
    INT             reduce using rule 39 (Optional_Else -> Epsilon .)
    FLOAT           reduce using rule 39 (Optional_Else -> Epsilon .)
    BOOL            reduce using rule 39 (Optional_Else -> Epsilon .)
    STRING          reduce using rule 39 (Optional_Else -> Epsilon .)
    CURLYB_CLOSE    reduce using rule 39 (Optional_Else -> Epsilon .)


state 192

    (36) Eif_Recursion -> EIF PAR_OPEN . Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion
    (54) Exp -> . Logical_Or
    (55) Exp -> . Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad
    (56) Exp -> . Logical_Or DIFF Push_Diff Logical_Or Equity_Quad
    (60) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (65) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (70) Logical_Not -> . Relational
    (71) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (74) Relational -> . Expression
    (75) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (76) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (77) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (78) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (84) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (91) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (100) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (101) Factor -> . Var_Cte
    (104) Var_Cte -> . INT_CONST Save_Int_Const
    (105) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (106) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (107) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (108) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (109) Var_Cte -> . STRING_CONST Save_String_Const
    (110) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 40
    PAR_OPEN        shift and go to state 24
    INT_CONST       shift and go to state 27
    MINUS_SIGN      shift and go to state 39
    FLOAT_CONST     shift and go to state 25
    BOOL_CONST      shift and go to state 29
    STRING_CONST    shift and go to state 30
    ID              shift and go to state 38

    Factor                         shift and go to state 32
    Relational                     shift and go to state 26
    Logical_Not                    shift and go to state 28
    Term                           shift and go to state 31
    Var_Cte                        shift and go to state 33
    Logical_Or                     shift and go to state 34
    Logical_And                    shift and go to state 35
    Exp                            shift and go to state 208
    Expression                     shift and go to state 37

state 193

    (24) Selected_Color -> BLUE .

    PAR_CLOSE       reduce using rule 24 (Selected_Color -> BLUE .)


state 194

    (33) Selected_Color -> GRAY .

    PAR_CLOSE       reduce using rule 33 (Selected_Color -> GRAY .)


state 195

    (26) Selected_Color -> PURPLE .

    PAR_CLOSE       reduce using rule 26 (Selected_Color -> PURPLE .)


state 196

    (23) Selected_Color -> GREEN .

    PAR_CLOSE       reduce using rule 23 (Selected_Color -> GREEN .)


state 197

    (25) Selected_Color -> YELLOW .

    PAR_CLOSE       reduce using rule 25 (Selected_Color -> YELLOW .)


state 198

    (28) Selected_Color -> BLACK .

    PAR_CLOSE       reduce using rule 28 (Selected_Color -> BLACK .)


state 199

    (32) Selected_Color -> PINK .

    PAR_CLOSE       reduce using rule 32 (Selected_Color -> PINK .)


state 200

    (21) Square_Func -> SQUARE PAR_OPEN Exp COMMA Exp COMMA Exp COMMA Selected_Color . PAR_CLOSE

    PAR_CLOSE       shift and go to state 209


state 201

    (29) Selected_Color -> ORANGE .

    PAR_CLOSE       reduce using rule 29 (Selected_Color -> ORANGE .)


state 202

    (27) Selected_Color -> WHITE .

    PAR_CLOSE       reduce using rule 27 (Selected_Color -> WHITE .)


state 203

    (30) Selected_Color -> CYAN .

    PAR_CLOSE       reduce using rule 30 (Selected_Color -> CYAN .)


state 204

    (31) Selected_Color -> MAGENTA .

    PAR_CLOSE       reduce using rule 31 (Selected_Color -> MAGENTA .)


state 205

    (22) Selected_Color -> RED .

    PAR_CLOSE       reduce using rule 22 (Selected_Color -> RED .)


state 206

    (20) Circle_Func -> CIRCLE PAR_OPEN Exp COMMA Exp COMMA Exp COMMA Selected_Color . PAR_CLOSE

    PAR_CLOSE       shift and go to state 210


state 207

    (38) Optional_Else -> ELSE Statements_Block .

    PRINT           reduce using rule 38 (Optional_Else -> ELSE Statements_Block .)
    ID              reduce using rule 38 (Optional_Else -> ELSE Statements_Block .)
    WHILE           reduce using rule 38 (Optional_Else -> ELSE Statements_Block .)
    IF              reduce using rule 38 (Optional_Else -> ELSE Statements_Block .)
    DRAW            reduce using rule 38 (Optional_Else -> ELSE Statements_Block .)
    INT             reduce using rule 38 (Optional_Else -> ELSE Statements_Block .)
    FLOAT           reduce using rule 38 (Optional_Else -> ELSE Statements_Block .)
    BOOL            reduce using rule 38 (Optional_Else -> ELSE Statements_Block .)
    STRING          reduce using rule 38 (Optional_Else -> ELSE Statements_Block .)
    CURLYB_CLOSE    reduce using rule 38 (Optional_Else -> ELSE Statements_Block .)


state 208

    (36) Eif_Recursion -> EIF PAR_OPEN Exp . PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion

    PAR_CLOSE       shift and go to state 211


state 209

    (21) Square_Func -> SQUARE PAR_OPEN Exp COMMA Exp COMMA Exp COMMA Selected_Color PAR_CLOSE .

    SEMICOLON       reduce using rule 21 (Square_Func -> SQUARE PAR_OPEN Exp COMMA Exp COMMA Exp COMMA Selected_Color PAR_CLOSE .)


state 210

    (20) Circle_Func -> CIRCLE PAR_OPEN Exp COMMA Exp COMMA Exp COMMA Selected_Color PAR_CLOSE .

    SEMICOLON       reduce using rule 20 (Circle_Func -> CIRCLE PAR_OPEN Exp COMMA Exp COMMA Exp COMMA Selected_Color PAR_CLOSE .)


state 211

    (36) Eif_Recursion -> EIF PAR_OPEN Exp PAR_CLOSE . If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion
    (40) If_GoToF_Quad -> .

    CURLYB_OPEN     reduce using rule 40 (If_GoToF_Quad -> .)

    If_GoToF_Quad                  shift and go to state 212

state 212

    (36) Eif_Recursion -> EIF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad . Statements_Block GoTo_Fill Eif_Recursion
    (8) Statements_Block -> . CURLYB_OPEN Multiple_Statements CURLYB_CLOSE

    CURLYB_OPEN     shift and go to state 23

    Statements_Block               shift and go to state 213

state 213

    (36) Eif_Recursion -> EIF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block . GoTo_Fill Eif_Recursion
    (41) GoTo_Fill -> .

    EIF             reduce using rule 41 (GoTo_Fill -> .)
    ELSE            reduce using rule 41 (GoTo_Fill -> .)
    PRINT           reduce using rule 41 (GoTo_Fill -> .)
    ID              reduce using rule 41 (GoTo_Fill -> .)
    WHILE           reduce using rule 41 (GoTo_Fill -> .)
    IF              reduce using rule 41 (GoTo_Fill -> .)
    DRAW            reduce using rule 41 (GoTo_Fill -> .)
    INT             reduce using rule 41 (GoTo_Fill -> .)
    FLOAT           reduce using rule 41 (GoTo_Fill -> .)
    BOOL            reduce using rule 41 (GoTo_Fill -> .)
    STRING          reduce using rule 41 (GoTo_Fill -> .)
    CURLYB_CLOSE    reduce using rule 41 (GoTo_Fill -> .)

    GoTo_Fill                      shift and go to state 214

state 214

    (36) Eif_Recursion -> EIF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill . Eif_Recursion
    (36) Eif_Recursion -> . EIF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion
    (37) Eif_Recursion -> . Epsilon
    (118) Epsilon -> .

    EIF             shift and go to state 186
    ELSE            reduce using rule 118 (Epsilon -> .)
    PRINT           reduce using rule 118 (Epsilon -> .)
    ID              reduce using rule 118 (Epsilon -> .)
    WHILE           reduce using rule 118 (Epsilon -> .)
    IF              reduce using rule 118 (Epsilon -> .)
    DRAW            reduce using rule 118 (Epsilon -> .)
    INT             reduce using rule 118 (Epsilon -> .)
    FLOAT           reduce using rule 118 (Epsilon -> .)
    BOOL            reduce using rule 118 (Epsilon -> .)
    STRING          reduce using rule 118 (Epsilon -> .)
    CURLYB_CLOSE    reduce using rule 118 (Epsilon -> .)

    Epsilon                        shift and go to state 185
    Eif_Recursion                  shift and go to state 215

state 215

    (36) Eif_Recursion -> EIF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion .

    ELSE            reduce using rule 36 (Eif_Recursion -> EIF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion .)
    PRINT           reduce using rule 36 (Eif_Recursion -> EIF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion .)
    ID              reduce using rule 36 (Eif_Recursion -> EIF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion .)
    WHILE           reduce using rule 36 (Eif_Recursion -> EIF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion .)
    IF              reduce using rule 36 (Eif_Recursion -> EIF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion .)
    DRAW            reduce using rule 36 (Eif_Recursion -> EIF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion .)
    INT             reduce using rule 36 (Eif_Recursion -> EIF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion .)
    FLOAT           reduce using rule 36 (Eif_Recursion -> EIF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion .)
    BOOL            reduce using rule 36 (Eif_Recursion -> EIF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion .)
    STRING          reduce using rule 36 (Eif_Recursion -> EIF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion .)
    CURLYB_CLOSE    reduce using rule 36 (Eif_Recursion -> EIF PAR_OPEN Exp PAR_CLOSE If_GoToF_Quad Statements_Block GoTo_Fill Eif_Recursion .)

