Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    TRIANGLE
    SQRB_OPEN
    YELLOW
    GREEN
    EIF
    CYAN
    LINE
    RED
    POLYGON
    COMMENT
    GRAY
    POINT
    PURPLE
    SQRB_CLOSE
    COMMA
    ORANGE
    BLOCK_COMMENT
    PINK
    DRAW
    SQUARE
    ELSE
    FUNC
    INPUT
    WHITE
    MAGENTA
    RECTANGLE
    IF
    BLUE
    BLACK
    CIRCLE

Grammar

Rule 0     S' -> Obi
Rule 1     Obi -> Play
Rule 2     Play -> PLAY Play_Init PAR_OPEN PAR_CLOSE Statements_Block
Rule 3     Play_Init -> <empty>
Rule 4     Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE
Rule 5     Multiple_Statements -> Statement Multiple_Statements
Rule 6     Multiple_Statements -> Epsilon
Rule 7     Statement -> Print
Rule 8     Statement -> Declare_Var
Rule 9     Statement -> Assignment
Rule 10    Statement -> While_Loop
Rule 11    Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON
Rule 12    While_Loop -> WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads
Rule 13    Push_While_Jump -> <empty>
Rule 14    While_Quad -> <empty>
Rule 15    Fill_While_Quads -> <empty>
Rule 16    Declare_Var -> Type ID SEMICOLON
Rule 17    Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON
Rule 18    Type -> INT
Rule 19    Type -> FLOAT
Rule 20    Type -> BOOL
Rule 21    Type -> STRING
Rule 22    Assignment -> ID ASSIGN Push_Assign Exp SEMICOLON
Rule 23    Push_Assign -> <empty>
Rule 24    Exp -> Logical_Or
Rule 25    Exp -> Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad
Rule 26    Exp -> Logical_Or DIFF Push_Diff Logical_Or Equity_Quad
Rule 27    Equity_Quad -> <empty>
Rule 28    Push_Equal -> <empty>
Rule 29    Push_Diff -> <empty>
Rule 30    Logical_Or -> Logical_And Or_Quad Multiple_Ands
Rule 31    Multiple_Ands -> OR Push_Or Logical_And Or_Quad Multiple_Ands
Rule 32    Multiple_Ands -> Epsilon
Rule 33    Or_Quad -> <empty>
Rule 34    Push_Or -> <empty>
Rule 35    Logical_And -> Logical_Not And_Quad Multiple_Nots
Rule 36    Multiple_Nots -> AND Push_And Logical_Not And_Quad Multiple_Nots
Rule 37    Multiple_Nots -> Epsilon
Rule 38    And_Quad -> <empty>
Rule 39    Push_And -> <empty>
Rule 40    Logical_Not -> Relational
Rule 41    Logical_Not -> NOT Push_Not Relational Not_Quad
Rule 42    Not_Quad -> <empty>
Rule 43    Push_Not -> <empty>
Rule 44    Relational -> Expression
Rule 45    Relational -> Expression LESS Push_Less Expression Relational_Quad
Rule 46    Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
Rule 47    Relational -> Expression GREATER Push_Greater Expression Relational_Quad
Rule 48    Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
Rule 49    Relational_Quad -> <empty>
Rule 50    Push_Less -> <empty>
Rule 51    Push_Less_Equal -> <empty>
Rule 52    Push_Greater -> <empty>
Rule 53    Push_Greater_Equal -> <empty>
Rule 54    Expression -> Term Sum_Sub_Quad Multiple_Terms
Rule 55    Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms
Rule 56    Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms
Rule 57    Multiple_Terms -> Epsilon
Rule 58    Sum_Sub_Quad -> <empty>
Rule 59    Push_Plus_Sign -> <empty>
Rule 60    Push_Minus_Sign -> <empty>
Rule 61    Term -> Factor Mult_Div_Mod_Quad Multiple_Factors
Rule 62    Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
Rule 63    Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
Rule 64    Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
Rule 65    Multiple_Factors -> Epsilon
Rule 66    Mult_Div_Mod_Quad -> <empty>
Rule 67    Push_Times_Sign -> <empty>
Rule 68    Push_Divide_Sign -> <empty>
Rule 69    Push_Mod_Sign -> <empty>
Rule 70    Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
Rule 71    Factor -> Var_Cte
Rule 72    Push_False_Bottom -> <empty>
Rule 73    Pop_False_Bottom -> <empty>
Rule 74    Var_Cte -> INT_CONST Save_Int_Const
Rule 75    Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const
Rule 76    Var_Cte -> FLOAT_CONST Save_Float_Const
Rule 77    Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
Rule 78    Var_Cte -> BOOL_CONST Save_Bool_Const
Rule 79    Var_Cte -> STRING_CONST Save_String_Const
Rule 80    Var_Cte -> ID Get_Id_Value
Rule 81    Save_Int_Const -> <empty>
Rule 82    Save_Neg_Int_Const -> <empty>
Rule 83    Save_Float_Const -> <empty>
Rule 84    Save_Neg_Float_Const -> <empty>
Rule 85    Save_Bool_Const -> <empty>
Rule 86    Save_String_Const -> <empty>
Rule 87    Get_Id_Value -> <empty>
Rule 88    Epsilon -> <empty>

Terminals, with rules where they appear

AND                  : 36
ASSIGN               : 17 22
BLACK                : 
BLOCK_COMMENT        : 
BLUE                 : 
BOOL                 : 20
BOOL_CONST           : 78
CIRCLE               : 
COMMA                : 
COMMENT              : 
CURLYB_CLOSE         : 4
CURLYB_OPEN          : 4
CYAN                 : 
DIFF                 : 26
DIVIDE_SIGN          : 63
DRAW                 : 
EIF                  : 
ELSE                 : 
EQUAL                : 25
FLOAT                : 19
FLOAT_CONST          : 76 77
FUNC                 : 
GRAY                 : 
GREATER              : 47
GREATER_EQUAL        : 48
GREEN                : 
ID                   : 16 17 22 80
IF                   : 
INPUT                : 
INT                  : 18
INT_CONST            : 74 75
LESS                 : 45
LESS_EQUAL           : 46
LINE                 : 
MAGENTA              : 
MINUS_SIGN           : 56 75 77
MOD_SIGN             : 64
NOT                  : 41
OR                   : 31
ORANGE               : 
PAR_CLOSE            : 2 11 12 70
PAR_OPEN             : 2 11 12 70
PINK                 : 
PLAY                 : 2
PLUS_SIGN            : 55
POINT                : 
POLYGON              : 
PRINT                : 11
PURPLE               : 
RECTANGLE            : 
RED                  : 
SEMICOLON            : 11 16 17 22
SQRB_CLOSE           : 
SQRB_OPEN            : 
SQUARE               : 
STRING               : 21
STRING_CONST         : 79
TIMES_SIGN           : 62
TRIANGLE             : 
WHILE                : 12
WHITE                : 
YELLOW               : 
error                : 

Nonterminals, with rules where they appear

And_Quad             : 35 36
Assignment           : 9
Declare_Var          : 8
Epsilon              : 6 32 37 57 65
Equity_Quad          : 25 26
Exp                  : 11 12 17 22 70
Expression           : 44 45 45 46 46 47 47 48 48
Factor               : 61 62 63 64
Fill_While_Quads     : 12
Get_Id_Value         : 80
Logical_And          : 30 31
Logical_Not          : 35 36
Logical_Or           : 24 25 25 26 26
Mult_Div_Mod_Quad    : 61 62 63 64
Multiple_Ands        : 30 31
Multiple_Factors     : 61 62 63 64
Multiple_Nots        : 35 36
Multiple_Statements  : 4 5
Multiple_Terms       : 54 55 56
Not_Quad             : 41
Obi                  : 0
Or_Quad              : 30 31
Play                 : 1
Play_Init            : 2
Pop_False_Bottom     : 70
Print                : 7
Push_And             : 36
Push_Assign          : 17 22
Push_Diff            : 26
Push_Divide_Sign     : 63
Push_Equal           : 25
Push_False_Bottom    : 70
Push_Greater         : 47
Push_Greater_Equal   : 48
Push_Less            : 45
Push_Less_Equal      : 46
Push_Minus_Sign      : 56
Push_Mod_Sign        : 64
Push_Not             : 41
Push_Or              : 31
Push_Plus_Sign       : 55
Push_Times_Sign      : 62
Push_While_Jump      : 12
Relational           : 40 41
Relational_Quad      : 45 46 47 48
Save_Bool_Const      : 78
Save_Float_Const     : 76
Save_Int_Const       : 74
Save_Neg_Float_Const : 77
Save_Neg_Int_Const   : 75
Save_String_Const    : 79
Statement            : 5
Statements_Block     : 2 12
Sum_Sub_Quad         : 54 55 56
Term                 : 54 55 56
Type                 : 16 17
Var_Cte              : 71
While_Loop           : 10
While_Quad           : 12

Parsing method: LALR

state 0

    (0) S' -> . Obi
    (1) Obi -> . Play
    (2) Play -> . PLAY Play_Init PAR_OPEN PAR_CLOSE Statements_Block

    PLAY            shift and go to state 3

    Play                           shift and go to state 1
    Obi                            shift and go to state 2

state 1

    (1) Obi -> Play .

    $end            reduce using rule 1 (Obi -> Play .)


state 2

    (0) S' -> Obi .



state 3

    (2) Play -> PLAY . Play_Init PAR_OPEN PAR_CLOSE Statements_Block
    (3) Play_Init -> .

    PAR_OPEN        reduce using rule 3 (Play_Init -> .)

    Play_Init                      shift and go to state 4

state 4

    (2) Play -> PLAY Play_Init . PAR_OPEN PAR_CLOSE Statements_Block

    PAR_OPEN        shift and go to state 5


state 5

    (2) Play -> PLAY Play_Init PAR_OPEN . PAR_CLOSE Statements_Block

    PAR_CLOSE       shift and go to state 6


state 6

    (2) Play -> PLAY Play_Init PAR_OPEN PAR_CLOSE . Statements_Block
    (4) Statements_Block -> . CURLYB_OPEN Multiple_Statements CURLYB_CLOSE

    CURLYB_OPEN     shift and go to state 8

    Statements_Block               shift and go to state 7

state 7

    (2) Play -> PLAY Play_Init PAR_OPEN PAR_CLOSE Statements_Block .

    $end            reduce using rule 2 (Play -> PLAY Play_Init PAR_OPEN PAR_CLOSE Statements_Block .)


state 8

    (4) Statements_Block -> CURLYB_OPEN . Multiple_Statements CURLYB_CLOSE
    (5) Multiple_Statements -> . Statement Multiple_Statements
    (6) Multiple_Statements -> . Epsilon
    (7) Statement -> . Print
    (8) Statement -> . Declare_Var
    (9) Statement -> . Assignment
    (10) Statement -> . While_Loop
    (88) Epsilon -> .
    (11) Print -> . PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON
    (16) Declare_Var -> . Type ID SEMICOLON
    (17) Declare_Var -> . Type ID ASSIGN Push_Assign Exp SEMICOLON
    (22) Assignment -> . ID ASSIGN Push_Assign Exp SEMICOLON
    (12) While_Loop -> . WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads
    (18) Type -> . INT
    (19) Type -> . FLOAT
    (20) Type -> . BOOL
    (21) Type -> . STRING

    CURLYB_CLOSE    reduce using rule 88 (Epsilon -> .)
    PRINT           shift and go to state 12
    ID              shift and go to state 19
    WHILE           shift and go to state 10
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 16

    Multiple_Statements            shift and go to state 15
    While_Loop                     shift and go to state 17
    Epsilon                        shift and go to state 14
    Declare_Var                    shift and go to state 18
    Statement                      shift and go to state 11
    Assignment                     shift and go to state 23
    Print                          shift and go to state 9
    Type                           shift and go to state 13

state 9

    (7) Statement -> Print .

    PRINT           reduce using rule 7 (Statement -> Print .)
    ID              reduce using rule 7 (Statement -> Print .)
    WHILE           reduce using rule 7 (Statement -> Print .)
    INT             reduce using rule 7 (Statement -> Print .)
    FLOAT           reduce using rule 7 (Statement -> Print .)
    BOOL            reduce using rule 7 (Statement -> Print .)
    STRING          reduce using rule 7 (Statement -> Print .)
    CURLYB_CLOSE    reduce using rule 7 (Statement -> Print .)


state 10

    (12) While_Loop -> WHILE . Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads
    (13) Push_While_Jump -> .

    PAR_OPEN        reduce using rule 13 (Push_While_Jump -> .)

    Push_While_Jump                shift and go to state 24

state 11

    (5) Multiple_Statements -> Statement . Multiple_Statements
    (5) Multiple_Statements -> . Statement Multiple_Statements
    (6) Multiple_Statements -> . Epsilon
    (7) Statement -> . Print
    (8) Statement -> . Declare_Var
    (9) Statement -> . Assignment
    (10) Statement -> . While_Loop
    (88) Epsilon -> .
    (11) Print -> . PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON
    (16) Declare_Var -> . Type ID SEMICOLON
    (17) Declare_Var -> . Type ID ASSIGN Push_Assign Exp SEMICOLON
    (22) Assignment -> . ID ASSIGN Push_Assign Exp SEMICOLON
    (12) While_Loop -> . WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads
    (18) Type -> . INT
    (19) Type -> . FLOAT
    (20) Type -> . BOOL
    (21) Type -> . STRING

    CURLYB_CLOSE    reduce using rule 88 (Epsilon -> .)
    PRINT           shift and go to state 12
    ID              shift and go to state 19
    WHILE           shift and go to state 10
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    BOOL            shift and go to state 22
    STRING          shift and go to state 16

    Multiple_Statements            shift and go to state 25
    While_Loop                     shift and go to state 17
    Epsilon                        shift and go to state 14
    Declare_Var                    shift and go to state 18
    Statement                      shift and go to state 11
    Assignment                     shift and go to state 23
    Print                          shift and go to state 9
    Type                           shift and go to state 13

state 12

    (11) Print -> PRINT . PAR_OPEN Exp PAR_CLOSE SEMICOLON

    PAR_OPEN        shift and go to state 26


state 13

    (16) Declare_Var -> Type . ID SEMICOLON
    (17) Declare_Var -> Type . ID ASSIGN Push_Assign Exp SEMICOLON

    ID              shift and go to state 27


state 14

    (6) Multiple_Statements -> Epsilon .

    CURLYB_CLOSE    reduce using rule 6 (Multiple_Statements -> Epsilon .)


state 15

    (4) Statements_Block -> CURLYB_OPEN Multiple_Statements . CURLYB_CLOSE

    CURLYB_CLOSE    shift and go to state 28


state 16

    (21) Type -> STRING .

    ID              reduce using rule 21 (Type -> STRING .)


state 17

    (10) Statement -> While_Loop .

    PRINT           reduce using rule 10 (Statement -> While_Loop .)
    ID              reduce using rule 10 (Statement -> While_Loop .)
    WHILE           reduce using rule 10 (Statement -> While_Loop .)
    INT             reduce using rule 10 (Statement -> While_Loop .)
    FLOAT           reduce using rule 10 (Statement -> While_Loop .)
    BOOL            reduce using rule 10 (Statement -> While_Loop .)
    STRING          reduce using rule 10 (Statement -> While_Loop .)
    CURLYB_CLOSE    reduce using rule 10 (Statement -> While_Loop .)


state 18

    (8) Statement -> Declare_Var .

    PRINT           reduce using rule 8 (Statement -> Declare_Var .)
    ID              reduce using rule 8 (Statement -> Declare_Var .)
    WHILE           reduce using rule 8 (Statement -> Declare_Var .)
    INT             reduce using rule 8 (Statement -> Declare_Var .)
    FLOAT           reduce using rule 8 (Statement -> Declare_Var .)
    BOOL            reduce using rule 8 (Statement -> Declare_Var .)
    STRING          reduce using rule 8 (Statement -> Declare_Var .)
    CURLYB_CLOSE    reduce using rule 8 (Statement -> Declare_Var .)


state 19

    (22) Assignment -> ID . ASSIGN Push_Assign Exp SEMICOLON

    ASSIGN          shift and go to state 29


state 20

    (18) Type -> INT .

    ID              reduce using rule 18 (Type -> INT .)


state 21

    (19) Type -> FLOAT .

    ID              reduce using rule 19 (Type -> FLOAT .)


state 22

    (20) Type -> BOOL .

    ID              reduce using rule 20 (Type -> BOOL .)


state 23

    (9) Statement -> Assignment .

    PRINT           reduce using rule 9 (Statement -> Assignment .)
    ID              reduce using rule 9 (Statement -> Assignment .)
    WHILE           reduce using rule 9 (Statement -> Assignment .)
    INT             reduce using rule 9 (Statement -> Assignment .)
    FLOAT           reduce using rule 9 (Statement -> Assignment .)
    BOOL            reduce using rule 9 (Statement -> Assignment .)
    STRING          reduce using rule 9 (Statement -> Assignment .)
    CURLYB_CLOSE    reduce using rule 9 (Statement -> Assignment .)


state 24

    (12) While_Loop -> WHILE Push_While_Jump . PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads

    PAR_OPEN        shift and go to state 30


state 25

    (5) Multiple_Statements -> Statement Multiple_Statements .

    CURLYB_CLOSE    reduce using rule 5 (Multiple_Statements -> Statement Multiple_Statements .)


state 26

    (11) Print -> PRINT PAR_OPEN . Exp PAR_CLOSE SEMICOLON
    (24) Exp -> . Logical_Or
    (25) Exp -> . Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad
    (26) Exp -> . Logical_Or DIFF Push_Diff Logical_Or Equity_Quad
    (30) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (35) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (40) Logical_Not -> . Relational
    (41) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (44) Relational -> . Expression
    (45) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (46) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (47) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (48) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (54) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (61) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (70) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (71) Factor -> . Var_Cte
    (74) Var_Cte -> . INT_CONST Save_Int_Const
    (75) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (76) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (77) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (78) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (79) Var_Cte -> . STRING_CONST Save_String_Const
    (80) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 47
    PAR_OPEN        shift and go to state 31
    INT_CONST       shift and go to state 35
    MINUS_SIGN      shift and go to state 46
    FLOAT_CONST     shift and go to state 32
    BOOL_CONST      shift and go to state 37
    STRING_CONST    shift and go to state 34
    ID              shift and go to state 45

    Factor                         shift and go to state 39
    Relational                     shift and go to state 33
    Logical_Not                    shift and go to state 36
    Term                           shift and go to state 38
    Var_Cte                        shift and go to state 40
    Logical_Or                     shift and go to state 41
    Logical_And                    shift and go to state 42
    Exp                            shift and go to state 43
    Expression                     shift and go to state 44

state 27

    (16) Declare_Var -> Type ID . SEMICOLON
    (17) Declare_Var -> Type ID . ASSIGN Push_Assign Exp SEMICOLON

    SEMICOLON       shift and go to state 48
    ASSIGN          shift and go to state 49


state 28

    (4) Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE .

    PRINT           reduce using rule 4 (Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE .)
    ID              reduce using rule 4 (Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE .)
    WHILE           reduce using rule 4 (Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE .)
    INT             reduce using rule 4 (Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE .)
    FLOAT           reduce using rule 4 (Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE .)
    BOOL            reduce using rule 4 (Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE .)
    STRING          reduce using rule 4 (Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE .)
    CURLYB_CLOSE    reduce using rule 4 (Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE .)
    $end            reduce using rule 4 (Statements_Block -> CURLYB_OPEN Multiple_Statements CURLYB_CLOSE .)


state 29

    (22) Assignment -> ID ASSIGN . Push_Assign Exp SEMICOLON
    (23) Push_Assign -> .

    NOT             reduce using rule 23 (Push_Assign -> .)
    PAR_OPEN        reduce using rule 23 (Push_Assign -> .)
    INT_CONST       reduce using rule 23 (Push_Assign -> .)
    MINUS_SIGN      reduce using rule 23 (Push_Assign -> .)
    FLOAT_CONST     reduce using rule 23 (Push_Assign -> .)
    BOOL_CONST      reduce using rule 23 (Push_Assign -> .)
    STRING_CONST    reduce using rule 23 (Push_Assign -> .)
    ID              reduce using rule 23 (Push_Assign -> .)

    Push_Assign                    shift and go to state 50

state 30

    (12) While_Loop -> WHILE Push_While_Jump PAR_OPEN . Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads
    (24) Exp -> . Logical_Or
    (25) Exp -> . Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad
    (26) Exp -> . Logical_Or DIFF Push_Diff Logical_Or Equity_Quad
    (30) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (35) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (40) Logical_Not -> . Relational
    (41) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (44) Relational -> . Expression
    (45) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (46) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (47) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (48) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (54) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (61) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (70) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (71) Factor -> . Var_Cte
    (74) Var_Cte -> . INT_CONST Save_Int_Const
    (75) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (76) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (77) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (78) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (79) Var_Cte -> . STRING_CONST Save_String_Const
    (80) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 47
    PAR_OPEN        shift and go to state 31
    INT_CONST       shift and go to state 35
    MINUS_SIGN      shift and go to state 46
    FLOAT_CONST     shift and go to state 32
    BOOL_CONST      shift and go to state 37
    STRING_CONST    shift and go to state 34
    ID              shift and go to state 45

    Exp                            shift and go to state 51
    Factor                         shift and go to state 39
    Relational                     shift and go to state 33
    Logical_Not                    shift and go to state 36
    Term                           shift and go to state 38
    Var_Cte                        shift and go to state 40
    Logical_Or                     shift and go to state 41
    Logical_And                    shift and go to state 42
    Expression                     shift and go to state 44

state 31

    (70) Factor -> PAR_OPEN . Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (72) Push_False_Bottom -> .

    NOT             reduce using rule 72 (Push_False_Bottom -> .)
    PAR_OPEN        reduce using rule 72 (Push_False_Bottom -> .)
    INT_CONST       reduce using rule 72 (Push_False_Bottom -> .)
    MINUS_SIGN      reduce using rule 72 (Push_False_Bottom -> .)
    FLOAT_CONST     reduce using rule 72 (Push_False_Bottom -> .)
    BOOL_CONST      reduce using rule 72 (Push_False_Bottom -> .)
    STRING_CONST    reduce using rule 72 (Push_False_Bottom -> .)
    ID              reduce using rule 72 (Push_False_Bottom -> .)

    Push_False_Bottom              shift and go to state 52

state 32

    (76) Var_Cte -> FLOAT_CONST . Save_Float_Const
    (83) Save_Float_Const -> .

    TIMES_SIGN      reduce using rule 83 (Save_Float_Const -> .)
    DIVIDE_SIGN     reduce using rule 83 (Save_Float_Const -> .)
    MOD_SIGN        reduce using rule 83 (Save_Float_Const -> .)
    PLUS_SIGN       reduce using rule 83 (Save_Float_Const -> .)
    MINUS_SIGN      reduce using rule 83 (Save_Float_Const -> .)
    LESS            reduce using rule 83 (Save_Float_Const -> .)
    LESS_EQUAL      reduce using rule 83 (Save_Float_Const -> .)
    GREATER         reduce using rule 83 (Save_Float_Const -> .)
    GREATER_EQUAL   reduce using rule 83 (Save_Float_Const -> .)
    AND             reduce using rule 83 (Save_Float_Const -> .)
    OR              reduce using rule 83 (Save_Float_Const -> .)
    EQUAL           reduce using rule 83 (Save_Float_Const -> .)
    DIFF            reduce using rule 83 (Save_Float_Const -> .)
    PAR_CLOSE       reduce using rule 83 (Save_Float_Const -> .)
    SEMICOLON       reduce using rule 83 (Save_Float_Const -> .)

    Save_Float_Const               shift and go to state 53

state 33

    (40) Logical_Not -> Relational .

    AND             reduce using rule 40 (Logical_Not -> Relational .)
    OR              reduce using rule 40 (Logical_Not -> Relational .)
    PAR_CLOSE       reduce using rule 40 (Logical_Not -> Relational .)
    SEMICOLON       reduce using rule 40 (Logical_Not -> Relational .)
    EQUAL           reduce using rule 40 (Logical_Not -> Relational .)
    DIFF            reduce using rule 40 (Logical_Not -> Relational .)


state 34

    (79) Var_Cte -> STRING_CONST . Save_String_Const
    (86) Save_String_Const -> .

    TIMES_SIGN      reduce using rule 86 (Save_String_Const -> .)
    DIVIDE_SIGN     reduce using rule 86 (Save_String_Const -> .)
    MOD_SIGN        reduce using rule 86 (Save_String_Const -> .)
    PLUS_SIGN       reduce using rule 86 (Save_String_Const -> .)
    MINUS_SIGN      reduce using rule 86 (Save_String_Const -> .)
    LESS            reduce using rule 86 (Save_String_Const -> .)
    LESS_EQUAL      reduce using rule 86 (Save_String_Const -> .)
    GREATER         reduce using rule 86 (Save_String_Const -> .)
    GREATER_EQUAL   reduce using rule 86 (Save_String_Const -> .)
    AND             reduce using rule 86 (Save_String_Const -> .)
    OR              reduce using rule 86 (Save_String_Const -> .)
    EQUAL           reduce using rule 86 (Save_String_Const -> .)
    DIFF            reduce using rule 86 (Save_String_Const -> .)
    PAR_CLOSE       reduce using rule 86 (Save_String_Const -> .)
    SEMICOLON       reduce using rule 86 (Save_String_Const -> .)

    Save_String_Const              shift and go to state 54

state 35

    (74) Var_Cte -> INT_CONST . Save_Int_Const
    (81) Save_Int_Const -> .

    TIMES_SIGN      reduce using rule 81 (Save_Int_Const -> .)
    DIVIDE_SIGN     reduce using rule 81 (Save_Int_Const -> .)
    MOD_SIGN        reduce using rule 81 (Save_Int_Const -> .)
    PLUS_SIGN       reduce using rule 81 (Save_Int_Const -> .)
    MINUS_SIGN      reduce using rule 81 (Save_Int_Const -> .)
    LESS            reduce using rule 81 (Save_Int_Const -> .)
    LESS_EQUAL      reduce using rule 81 (Save_Int_Const -> .)
    GREATER         reduce using rule 81 (Save_Int_Const -> .)
    GREATER_EQUAL   reduce using rule 81 (Save_Int_Const -> .)
    AND             reduce using rule 81 (Save_Int_Const -> .)
    OR              reduce using rule 81 (Save_Int_Const -> .)
    EQUAL           reduce using rule 81 (Save_Int_Const -> .)
    DIFF            reduce using rule 81 (Save_Int_Const -> .)
    PAR_CLOSE       reduce using rule 81 (Save_Int_Const -> .)
    SEMICOLON       reduce using rule 81 (Save_Int_Const -> .)

    Save_Int_Const                 shift and go to state 55

state 36

    (35) Logical_And -> Logical_Not . And_Quad Multiple_Nots
    (38) And_Quad -> .

    AND             reduce using rule 38 (And_Quad -> .)
    OR              reduce using rule 38 (And_Quad -> .)
    EQUAL           reduce using rule 38 (And_Quad -> .)
    DIFF            reduce using rule 38 (And_Quad -> .)
    PAR_CLOSE       reduce using rule 38 (And_Quad -> .)
    SEMICOLON       reduce using rule 38 (And_Quad -> .)

    And_Quad                       shift and go to state 56

state 37

    (78) Var_Cte -> BOOL_CONST . Save_Bool_Const
    (85) Save_Bool_Const -> .

    TIMES_SIGN      reduce using rule 85 (Save_Bool_Const -> .)
    DIVIDE_SIGN     reduce using rule 85 (Save_Bool_Const -> .)
    MOD_SIGN        reduce using rule 85 (Save_Bool_Const -> .)
    PLUS_SIGN       reduce using rule 85 (Save_Bool_Const -> .)
    MINUS_SIGN      reduce using rule 85 (Save_Bool_Const -> .)
    LESS            reduce using rule 85 (Save_Bool_Const -> .)
    LESS_EQUAL      reduce using rule 85 (Save_Bool_Const -> .)
    GREATER         reduce using rule 85 (Save_Bool_Const -> .)
    GREATER_EQUAL   reduce using rule 85 (Save_Bool_Const -> .)
    AND             reduce using rule 85 (Save_Bool_Const -> .)
    OR              reduce using rule 85 (Save_Bool_Const -> .)
    EQUAL           reduce using rule 85 (Save_Bool_Const -> .)
    DIFF            reduce using rule 85 (Save_Bool_Const -> .)
    PAR_CLOSE       reduce using rule 85 (Save_Bool_Const -> .)
    SEMICOLON       reduce using rule 85 (Save_Bool_Const -> .)

    Save_Bool_Const                shift and go to state 57

state 38

    (54) Expression -> Term . Sum_Sub_Quad Multiple_Terms
    (58) Sum_Sub_Quad -> .

    PLUS_SIGN       reduce using rule 58 (Sum_Sub_Quad -> .)
    MINUS_SIGN      reduce using rule 58 (Sum_Sub_Quad -> .)
    LESS            reduce using rule 58 (Sum_Sub_Quad -> .)
    LESS_EQUAL      reduce using rule 58 (Sum_Sub_Quad -> .)
    GREATER         reduce using rule 58 (Sum_Sub_Quad -> .)
    GREATER_EQUAL   reduce using rule 58 (Sum_Sub_Quad -> .)
    AND             reduce using rule 58 (Sum_Sub_Quad -> .)
    OR              reduce using rule 58 (Sum_Sub_Quad -> .)
    EQUAL           reduce using rule 58 (Sum_Sub_Quad -> .)
    DIFF            reduce using rule 58 (Sum_Sub_Quad -> .)
    PAR_CLOSE       reduce using rule 58 (Sum_Sub_Quad -> .)
    SEMICOLON       reduce using rule 58 (Sum_Sub_Quad -> .)

    Sum_Sub_Quad                   shift and go to state 58

state 39

    (61) Term -> Factor . Mult_Div_Mod_Quad Multiple_Factors
    (66) Mult_Div_Mod_Quad -> .

    TIMES_SIGN      reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    DIVIDE_SIGN     reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    MOD_SIGN        reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    PLUS_SIGN       reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    MINUS_SIGN      reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    LESS            reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    LESS_EQUAL      reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    GREATER         reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    GREATER_EQUAL   reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    AND             reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    OR              reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    EQUAL           reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    DIFF            reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    PAR_CLOSE       reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    SEMICOLON       reduce using rule 66 (Mult_Div_Mod_Quad -> .)

    Mult_Div_Mod_Quad              shift and go to state 59

state 40

    (71) Factor -> Var_Cte .

    TIMES_SIGN      reduce using rule 71 (Factor -> Var_Cte .)
    DIVIDE_SIGN     reduce using rule 71 (Factor -> Var_Cte .)
    MOD_SIGN        reduce using rule 71 (Factor -> Var_Cte .)
    PLUS_SIGN       reduce using rule 71 (Factor -> Var_Cte .)
    MINUS_SIGN      reduce using rule 71 (Factor -> Var_Cte .)
    LESS            reduce using rule 71 (Factor -> Var_Cte .)
    LESS_EQUAL      reduce using rule 71 (Factor -> Var_Cte .)
    GREATER         reduce using rule 71 (Factor -> Var_Cte .)
    GREATER_EQUAL   reduce using rule 71 (Factor -> Var_Cte .)
    AND             reduce using rule 71 (Factor -> Var_Cte .)
    OR              reduce using rule 71 (Factor -> Var_Cte .)
    EQUAL           reduce using rule 71 (Factor -> Var_Cte .)
    DIFF            reduce using rule 71 (Factor -> Var_Cte .)
    PAR_CLOSE       reduce using rule 71 (Factor -> Var_Cte .)
    SEMICOLON       reduce using rule 71 (Factor -> Var_Cte .)


state 41

    (24) Exp -> Logical_Or .
    (25) Exp -> Logical_Or . EQUAL Push_Equal Logical_Or Equity_Quad
    (26) Exp -> Logical_Or . DIFF Push_Diff Logical_Or Equity_Quad

    PAR_CLOSE       reduce using rule 24 (Exp -> Logical_Or .)
    SEMICOLON       reduce using rule 24 (Exp -> Logical_Or .)
    EQUAL           shift and go to state 60
    DIFF            shift and go to state 61


state 42

    (30) Logical_Or -> Logical_And . Or_Quad Multiple_Ands
    (33) Or_Quad -> .

    OR              reduce using rule 33 (Or_Quad -> .)
    EQUAL           reduce using rule 33 (Or_Quad -> .)
    DIFF            reduce using rule 33 (Or_Quad -> .)
    PAR_CLOSE       reduce using rule 33 (Or_Quad -> .)
    SEMICOLON       reduce using rule 33 (Or_Quad -> .)

    Or_Quad                        shift and go to state 62

state 43

    (11) Print -> PRINT PAR_OPEN Exp . PAR_CLOSE SEMICOLON

    PAR_CLOSE       shift and go to state 63


state 44

    (44) Relational -> Expression .
    (45) Relational -> Expression . LESS Push_Less Expression Relational_Quad
    (46) Relational -> Expression . LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (47) Relational -> Expression . GREATER Push_Greater Expression Relational_Quad
    (48) Relational -> Expression . GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad

    AND             reduce using rule 44 (Relational -> Expression .)
    OR              reduce using rule 44 (Relational -> Expression .)
    EQUAL           reduce using rule 44 (Relational -> Expression .)
    DIFF            reduce using rule 44 (Relational -> Expression .)
    PAR_CLOSE       reduce using rule 44 (Relational -> Expression .)
    SEMICOLON       reduce using rule 44 (Relational -> Expression .)
    LESS            shift and go to state 64
    LESS_EQUAL      shift and go to state 65
    GREATER         shift and go to state 67
    GREATER_EQUAL   shift and go to state 66


state 45

    (80) Var_Cte -> ID . Get_Id_Value
    (87) Get_Id_Value -> .

    TIMES_SIGN      reduce using rule 87 (Get_Id_Value -> .)
    DIVIDE_SIGN     reduce using rule 87 (Get_Id_Value -> .)
    MOD_SIGN        reduce using rule 87 (Get_Id_Value -> .)
    PLUS_SIGN       reduce using rule 87 (Get_Id_Value -> .)
    MINUS_SIGN      reduce using rule 87 (Get_Id_Value -> .)
    LESS            reduce using rule 87 (Get_Id_Value -> .)
    LESS_EQUAL      reduce using rule 87 (Get_Id_Value -> .)
    GREATER         reduce using rule 87 (Get_Id_Value -> .)
    GREATER_EQUAL   reduce using rule 87 (Get_Id_Value -> .)
    AND             reduce using rule 87 (Get_Id_Value -> .)
    OR              reduce using rule 87 (Get_Id_Value -> .)
    EQUAL           reduce using rule 87 (Get_Id_Value -> .)
    DIFF            reduce using rule 87 (Get_Id_Value -> .)
    PAR_CLOSE       reduce using rule 87 (Get_Id_Value -> .)
    SEMICOLON       reduce using rule 87 (Get_Id_Value -> .)

    Get_Id_Value                   shift and go to state 68

state 46

    (75) Var_Cte -> MINUS_SIGN . INT_CONST Save_Neg_Int_Const
    (77) Var_Cte -> MINUS_SIGN . FLOAT_CONST Save_Neg_Float_Const

    INT_CONST       shift and go to state 69
    FLOAT_CONST     shift and go to state 70


state 47

    (41) Logical_Not -> NOT . Push_Not Relational Not_Quad
    (43) Push_Not -> .

    PAR_OPEN        reduce using rule 43 (Push_Not -> .)
    INT_CONST       reduce using rule 43 (Push_Not -> .)
    MINUS_SIGN      reduce using rule 43 (Push_Not -> .)
    FLOAT_CONST     reduce using rule 43 (Push_Not -> .)
    BOOL_CONST      reduce using rule 43 (Push_Not -> .)
    STRING_CONST    reduce using rule 43 (Push_Not -> .)
    ID              reduce using rule 43 (Push_Not -> .)

    Push_Not                       shift and go to state 71

state 48

    (16) Declare_Var -> Type ID SEMICOLON .

    PRINT           reduce using rule 16 (Declare_Var -> Type ID SEMICOLON .)
    ID              reduce using rule 16 (Declare_Var -> Type ID SEMICOLON .)
    WHILE           reduce using rule 16 (Declare_Var -> Type ID SEMICOLON .)
    INT             reduce using rule 16 (Declare_Var -> Type ID SEMICOLON .)
    FLOAT           reduce using rule 16 (Declare_Var -> Type ID SEMICOLON .)
    BOOL            reduce using rule 16 (Declare_Var -> Type ID SEMICOLON .)
    STRING          reduce using rule 16 (Declare_Var -> Type ID SEMICOLON .)
    CURLYB_CLOSE    reduce using rule 16 (Declare_Var -> Type ID SEMICOLON .)


state 49

    (17) Declare_Var -> Type ID ASSIGN . Push_Assign Exp SEMICOLON
    (23) Push_Assign -> .

    NOT             reduce using rule 23 (Push_Assign -> .)
    PAR_OPEN        reduce using rule 23 (Push_Assign -> .)
    INT_CONST       reduce using rule 23 (Push_Assign -> .)
    MINUS_SIGN      reduce using rule 23 (Push_Assign -> .)
    FLOAT_CONST     reduce using rule 23 (Push_Assign -> .)
    BOOL_CONST      reduce using rule 23 (Push_Assign -> .)
    STRING_CONST    reduce using rule 23 (Push_Assign -> .)
    ID              reduce using rule 23 (Push_Assign -> .)

    Push_Assign                    shift and go to state 72

state 50

    (22) Assignment -> ID ASSIGN Push_Assign . Exp SEMICOLON
    (24) Exp -> . Logical_Or
    (25) Exp -> . Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad
    (26) Exp -> . Logical_Or DIFF Push_Diff Logical_Or Equity_Quad
    (30) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (35) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (40) Logical_Not -> . Relational
    (41) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (44) Relational -> . Expression
    (45) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (46) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (47) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (48) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (54) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (61) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (70) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (71) Factor -> . Var_Cte
    (74) Var_Cte -> . INT_CONST Save_Int_Const
    (75) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (76) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (77) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (78) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (79) Var_Cte -> . STRING_CONST Save_String_Const
    (80) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 47
    PAR_OPEN        shift and go to state 31
    INT_CONST       shift and go to state 35
    MINUS_SIGN      shift and go to state 46
    FLOAT_CONST     shift and go to state 32
    BOOL_CONST      shift and go to state 37
    STRING_CONST    shift and go to state 34
    ID              shift and go to state 45

    Factor                         shift and go to state 39
    Relational                     shift and go to state 33
    Logical_Not                    shift and go to state 36
    Term                           shift and go to state 38
    Var_Cte                        shift and go to state 40
    Logical_Or                     shift and go to state 41
    Logical_And                    shift and go to state 42
    Exp                            shift and go to state 73
    Expression                     shift and go to state 44

state 51

    (12) While_Loop -> WHILE Push_While_Jump PAR_OPEN Exp . PAR_CLOSE While_Quad Statements_Block Fill_While_Quads

    PAR_CLOSE       shift and go to state 74


state 52

    (70) Factor -> PAR_OPEN Push_False_Bottom . Exp PAR_CLOSE Pop_False_Bottom
    (24) Exp -> . Logical_Or
    (25) Exp -> . Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad
    (26) Exp -> . Logical_Or DIFF Push_Diff Logical_Or Equity_Quad
    (30) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (35) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (40) Logical_Not -> . Relational
    (41) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (44) Relational -> . Expression
    (45) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (46) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (47) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (48) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (54) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (61) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (70) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (71) Factor -> . Var_Cte
    (74) Var_Cte -> . INT_CONST Save_Int_Const
    (75) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (76) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (77) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (78) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (79) Var_Cte -> . STRING_CONST Save_String_Const
    (80) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 47
    PAR_OPEN        shift and go to state 31
    INT_CONST       shift and go to state 35
    MINUS_SIGN      shift and go to state 46
    FLOAT_CONST     shift and go to state 32
    BOOL_CONST      shift and go to state 37
    STRING_CONST    shift and go to state 34
    ID              shift and go to state 45

    Factor                         shift and go to state 39
    Relational                     shift and go to state 33
    Logical_Not                    shift and go to state 36
    Term                           shift and go to state 38
    Var_Cte                        shift and go to state 40
    Logical_Or                     shift and go to state 41
    Logical_And                    shift and go to state 42
    Exp                            shift and go to state 75
    Expression                     shift and go to state 44

state 53

    (76) Var_Cte -> FLOAT_CONST Save_Float_Const .

    TIMES_SIGN      reduce using rule 76 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    DIVIDE_SIGN     reduce using rule 76 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    MOD_SIGN        reduce using rule 76 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    PLUS_SIGN       reduce using rule 76 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    MINUS_SIGN      reduce using rule 76 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    LESS            reduce using rule 76 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    LESS_EQUAL      reduce using rule 76 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    GREATER         reduce using rule 76 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    GREATER_EQUAL   reduce using rule 76 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    AND             reduce using rule 76 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    OR              reduce using rule 76 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    EQUAL           reduce using rule 76 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    DIFF            reduce using rule 76 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    PAR_CLOSE       reduce using rule 76 (Var_Cte -> FLOAT_CONST Save_Float_Const .)
    SEMICOLON       reduce using rule 76 (Var_Cte -> FLOAT_CONST Save_Float_Const .)


state 54

    (79) Var_Cte -> STRING_CONST Save_String_Const .

    TIMES_SIGN      reduce using rule 79 (Var_Cte -> STRING_CONST Save_String_Const .)
    DIVIDE_SIGN     reduce using rule 79 (Var_Cte -> STRING_CONST Save_String_Const .)
    MOD_SIGN        reduce using rule 79 (Var_Cte -> STRING_CONST Save_String_Const .)
    PLUS_SIGN       reduce using rule 79 (Var_Cte -> STRING_CONST Save_String_Const .)
    MINUS_SIGN      reduce using rule 79 (Var_Cte -> STRING_CONST Save_String_Const .)
    LESS            reduce using rule 79 (Var_Cte -> STRING_CONST Save_String_Const .)
    LESS_EQUAL      reduce using rule 79 (Var_Cte -> STRING_CONST Save_String_Const .)
    GREATER         reduce using rule 79 (Var_Cte -> STRING_CONST Save_String_Const .)
    GREATER_EQUAL   reduce using rule 79 (Var_Cte -> STRING_CONST Save_String_Const .)
    AND             reduce using rule 79 (Var_Cte -> STRING_CONST Save_String_Const .)
    OR              reduce using rule 79 (Var_Cte -> STRING_CONST Save_String_Const .)
    EQUAL           reduce using rule 79 (Var_Cte -> STRING_CONST Save_String_Const .)
    DIFF            reduce using rule 79 (Var_Cte -> STRING_CONST Save_String_Const .)
    PAR_CLOSE       reduce using rule 79 (Var_Cte -> STRING_CONST Save_String_Const .)
    SEMICOLON       reduce using rule 79 (Var_Cte -> STRING_CONST Save_String_Const .)


state 55

    (74) Var_Cte -> INT_CONST Save_Int_Const .

    TIMES_SIGN      reduce using rule 74 (Var_Cte -> INT_CONST Save_Int_Const .)
    DIVIDE_SIGN     reduce using rule 74 (Var_Cte -> INT_CONST Save_Int_Const .)
    MOD_SIGN        reduce using rule 74 (Var_Cte -> INT_CONST Save_Int_Const .)
    PLUS_SIGN       reduce using rule 74 (Var_Cte -> INT_CONST Save_Int_Const .)
    MINUS_SIGN      reduce using rule 74 (Var_Cte -> INT_CONST Save_Int_Const .)
    LESS            reduce using rule 74 (Var_Cte -> INT_CONST Save_Int_Const .)
    LESS_EQUAL      reduce using rule 74 (Var_Cte -> INT_CONST Save_Int_Const .)
    GREATER         reduce using rule 74 (Var_Cte -> INT_CONST Save_Int_Const .)
    GREATER_EQUAL   reduce using rule 74 (Var_Cte -> INT_CONST Save_Int_Const .)
    AND             reduce using rule 74 (Var_Cte -> INT_CONST Save_Int_Const .)
    OR              reduce using rule 74 (Var_Cte -> INT_CONST Save_Int_Const .)
    EQUAL           reduce using rule 74 (Var_Cte -> INT_CONST Save_Int_Const .)
    DIFF            reduce using rule 74 (Var_Cte -> INT_CONST Save_Int_Const .)
    PAR_CLOSE       reduce using rule 74 (Var_Cte -> INT_CONST Save_Int_Const .)
    SEMICOLON       reduce using rule 74 (Var_Cte -> INT_CONST Save_Int_Const .)


state 56

    (35) Logical_And -> Logical_Not And_Quad . Multiple_Nots
    (36) Multiple_Nots -> . AND Push_And Logical_Not And_Quad Multiple_Nots
    (37) Multiple_Nots -> . Epsilon
    (88) Epsilon -> .

    AND             shift and go to state 76
    OR              reduce using rule 88 (Epsilon -> .)
    EQUAL           reduce using rule 88 (Epsilon -> .)
    DIFF            reduce using rule 88 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 88 (Epsilon -> .)
    SEMICOLON       reduce using rule 88 (Epsilon -> .)

    Multiple_Nots                  shift and go to state 78
    Epsilon                        shift and go to state 77

state 57

    (78) Var_Cte -> BOOL_CONST Save_Bool_Const .

    TIMES_SIGN      reduce using rule 78 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    DIVIDE_SIGN     reduce using rule 78 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    MOD_SIGN        reduce using rule 78 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    PLUS_SIGN       reduce using rule 78 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    MINUS_SIGN      reduce using rule 78 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    LESS            reduce using rule 78 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    LESS_EQUAL      reduce using rule 78 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    GREATER         reduce using rule 78 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    GREATER_EQUAL   reduce using rule 78 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    AND             reduce using rule 78 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    OR              reduce using rule 78 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    EQUAL           reduce using rule 78 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    DIFF            reduce using rule 78 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    PAR_CLOSE       reduce using rule 78 (Var_Cte -> BOOL_CONST Save_Bool_Const .)
    SEMICOLON       reduce using rule 78 (Var_Cte -> BOOL_CONST Save_Bool_Const .)


state 58

    (54) Expression -> Term Sum_Sub_Quad . Multiple_Terms
    (55) Multiple_Terms -> . PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms
    (56) Multiple_Terms -> . MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms
    (57) Multiple_Terms -> . Epsilon
    (88) Epsilon -> .

    PLUS_SIGN       shift and go to state 82
    MINUS_SIGN      shift and go to state 81
    LESS            reduce using rule 88 (Epsilon -> .)
    LESS_EQUAL      reduce using rule 88 (Epsilon -> .)
    GREATER         reduce using rule 88 (Epsilon -> .)
    GREATER_EQUAL   reduce using rule 88 (Epsilon -> .)
    AND             reduce using rule 88 (Epsilon -> .)
    OR              reduce using rule 88 (Epsilon -> .)
    EQUAL           reduce using rule 88 (Epsilon -> .)
    DIFF            reduce using rule 88 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 88 (Epsilon -> .)
    SEMICOLON       reduce using rule 88 (Epsilon -> .)

    Multiple_Terms                 shift and go to state 79
    Epsilon                        shift and go to state 80

state 59

    (61) Term -> Factor Mult_Div_Mod_Quad . Multiple_Factors
    (62) Multiple_Factors -> . TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (63) Multiple_Factors -> . DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (64) Multiple_Factors -> . MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (65) Multiple_Factors -> . Epsilon
    (88) Epsilon -> .

    TIMES_SIGN      shift and go to state 83
    DIVIDE_SIGN     shift and go to state 87
    MOD_SIGN        shift and go to state 84
    PLUS_SIGN       reduce using rule 88 (Epsilon -> .)
    MINUS_SIGN      reduce using rule 88 (Epsilon -> .)
    LESS            reduce using rule 88 (Epsilon -> .)
    LESS_EQUAL      reduce using rule 88 (Epsilon -> .)
    GREATER         reduce using rule 88 (Epsilon -> .)
    GREATER_EQUAL   reduce using rule 88 (Epsilon -> .)
    AND             reduce using rule 88 (Epsilon -> .)
    OR              reduce using rule 88 (Epsilon -> .)
    EQUAL           reduce using rule 88 (Epsilon -> .)
    DIFF            reduce using rule 88 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 88 (Epsilon -> .)
    SEMICOLON       reduce using rule 88 (Epsilon -> .)

    Epsilon                        shift and go to state 85
    Multiple_Factors               shift and go to state 86

state 60

    (25) Exp -> Logical_Or EQUAL . Push_Equal Logical_Or Equity_Quad
    (28) Push_Equal -> .

    NOT             reduce using rule 28 (Push_Equal -> .)
    PAR_OPEN        reduce using rule 28 (Push_Equal -> .)
    INT_CONST       reduce using rule 28 (Push_Equal -> .)
    MINUS_SIGN      reduce using rule 28 (Push_Equal -> .)
    FLOAT_CONST     reduce using rule 28 (Push_Equal -> .)
    BOOL_CONST      reduce using rule 28 (Push_Equal -> .)
    STRING_CONST    reduce using rule 28 (Push_Equal -> .)
    ID              reduce using rule 28 (Push_Equal -> .)

    Push_Equal                     shift and go to state 88

state 61

    (26) Exp -> Logical_Or DIFF . Push_Diff Logical_Or Equity_Quad
    (29) Push_Diff -> .

    NOT             reduce using rule 29 (Push_Diff -> .)
    PAR_OPEN        reduce using rule 29 (Push_Diff -> .)
    INT_CONST       reduce using rule 29 (Push_Diff -> .)
    MINUS_SIGN      reduce using rule 29 (Push_Diff -> .)
    FLOAT_CONST     reduce using rule 29 (Push_Diff -> .)
    BOOL_CONST      reduce using rule 29 (Push_Diff -> .)
    STRING_CONST    reduce using rule 29 (Push_Diff -> .)
    ID              reduce using rule 29 (Push_Diff -> .)

    Push_Diff                      shift and go to state 89

state 62

    (30) Logical_Or -> Logical_And Or_Quad . Multiple_Ands
    (31) Multiple_Ands -> . OR Push_Or Logical_And Or_Quad Multiple_Ands
    (32) Multiple_Ands -> . Epsilon
    (88) Epsilon -> .

    OR              shift and go to state 92
    EQUAL           reduce using rule 88 (Epsilon -> .)
    DIFF            reduce using rule 88 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 88 (Epsilon -> .)
    SEMICOLON       reduce using rule 88 (Epsilon -> .)

    Multiple_Ands                  shift and go to state 90
    Epsilon                        shift and go to state 91

state 63

    (11) Print -> PRINT PAR_OPEN Exp PAR_CLOSE . SEMICOLON

    SEMICOLON       shift and go to state 93


state 64

    (45) Relational -> Expression LESS . Push_Less Expression Relational_Quad
    (50) Push_Less -> .

    PAR_OPEN        reduce using rule 50 (Push_Less -> .)
    INT_CONST       reduce using rule 50 (Push_Less -> .)
    MINUS_SIGN      reduce using rule 50 (Push_Less -> .)
    FLOAT_CONST     reduce using rule 50 (Push_Less -> .)
    BOOL_CONST      reduce using rule 50 (Push_Less -> .)
    STRING_CONST    reduce using rule 50 (Push_Less -> .)
    ID              reduce using rule 50 (Push_Less -> .)

    Push_Less                      shift and go to state 94

state 65

    (46) Relational -> Expression LESS_EQUAL . Push_Less_Equal Expression Relational_Quad
    (51) Push_Less_Equal -> .

    PAR_OPEN        reduce using rule 51 (Push_Less_Equal -> .)
    INT_CONST       reduce using rule 51 (Push_Less_Equal -> .)
    MINUS_SIGN      reduce using rule 51 (Push_Less_Equal -> .)
    FLOAT_CONST     reduce using rule 51 (Push_Less_Equal -> .)
    BOOL_CONST      reduce using rule 51 (Push_Less_Equal -> .)
    STRING_CONST    reduce using rule 51 (Push_Less_Equal -> .)
    ID              reduce using rule 51 (Push_Less_Equal -> .)

    Push_Less_Equal                shift and go to state 95

state 66

    (48) Relational -> Expression GREATER_EQUAL . Push_Greater_Equal Expression Relational_Quad
    (53) Push_Greater_Equal -> .

    PAR_OPEN        reduce using rule 53 (Push_Greater_Equal -> .)
    INT_CONST       reduce using rule 53 (Push_Greater_Equal -> .)
    MINUS_SIGN      reduce using rule 53 (Push_Greater_Equal -> .)
    FLOAT_CONST     reduce using rule 53 (Push_Greater_Equal -> .)
    BOOL_CONST      reduce using rule 53 (Push_Greater_Equal -> .)
    STRING_CONST    reduce using rule 53 (Push_Greater_Equal -> .)
    ID              reduce using rule 53 (Push_Greater_Equal -> .)

    Push_Greater_Equal             shift and go to state 96

state 67

    (47) Relational -> Expression GREATER . Push_Greater Expression Relational_Quad
    (52) Push_Greater -> .

    PAR_OPEN        reduce using rule 52 (Push_Greater -> .)
    INT_CONST       reduce using rule 52 (Push_Greater -> .)
    MINUS_SIGN      reduce using rule 52 (Push_Greater -> .)
    FLOAT_CONST     reduce using rule 52 (Push_Greater -> .)
    BOOL_CONST      reduce using rule 52 (Push_Greater -> .)
    STRING_CONST    reduce using rule 52 (Push_Greater -> .)
    ID              reduce using rule 52 (Push_Greater -> .)

    Push_Greater                   shift and go to state 97

state 68

    (80) Var_Cte -> ID Get_Id_Value .

    TIMES_SIGN      reduce using rule 80 (Var_Cte -> ID Get_Id_Value .)
    DIVIDE_SIGN     reduce using rule 80 (Var_Cte -> ID Get_Id_Value .)
    MOD_SIGN        reduce using rule 80 (Var_Cte -> ID Get_Id_Value .)
    PLUS_SIGN       reduce using rule 80 (Var_Cte -> ID Get_Id_Value .)
    MINUS_SIGN      reduce using rule 80 (Var_Cte -> ID Get_Id_Value .)
    LESS            reduce using rule 80 (Var_Cte -> ID Get_Id_Value .)
    LESS_EQUAL      reduce using rule 80 (Var_Cte -> ID Get_Id_Value .)
    GREATER         reduce using rule 80 (Var_Cte -> ID Get_Id_Value .)
    GREATER_EQUAL   reduce using rule 80 (Var_Cte -> ID Get_Id_Value .)
    AND             reduce using rule 80 (Var_Cte -> ID Get_Id_Value .)
    OR              reduce using rule 80 (Var_Cte -> ID Get_Id_Value .)
    EQUAL           reduce using rule 80 (Var_Cte -> ID Get_Id_Value .)
    DIFF            reduce using rule 80 (Var_Cte -> ID Get_Id_Value .)
    PAR_CLOSE       reduce using rule 80 (Var_Cte -> ID Get_Id_Value .)
    SEMICOLON       reduce using rule 80 (Var_Cte -> ID Get_Id_Value .)


state 69

    (75) Var_Cte -> MINUS_SIGN INT_CONST . Save_Neg_Int_Const
    (82) Save_Neg_Int_Const -> .

    TIMES_SIGN      reduce using rule 82 (Save_Neg_Int_Const -> .)
    DIVIDE_SIGN     reduce using rule 82 (Save_Neg_Int_Const -> .)
    MOD_SIGN        reduce using rule 82 (Save_Neg_Int_Const -> .)
    PLUS_SIGN       reduce using rule 82 (Save_Neg_Int_Const -> .)
    MINUS_SIGN      reduce using rule 82 (Save_Neg_Int_Const -> .)
    LESS            reduce using rule 82 (Save_Neg_Int_Const -> .)
    LESS_EQUAL      reduce using rule 82 (Save_Neg_Int_Const -> .)
    GREATER         reduce using rule 82 (Save_Neg_Int_Const -> .)
    GREATER_EQUAL   reduce using rule 82 (Save_Neg_Int_Const -> .)
    AND             reduce using rule 82 (Save_Neg_Int_Const -> .)
    OR              reduce using rule 82 (Save_Neg_Int_Const -> .)
    EQUAL           reduce using rule 82 (Save_Neg_Int_Const -> .)
    DIFF            reduce using rule 82 (Save_Neg_Int_Const -> .)
    PAR_CLOSE       reduce using rule 82 (Save_Neg_Int_Const -> .)
    SEMICOLON       reduce using rule 82 (Save_Neg_Int_Const -> .)

    Save_Neg_Int_Const             shift and go to state 98

state 70

    (77) Var_Cte -> MINUS_SIGN FLOAT_CONST . Save_Neg_Float_Const
    (84) Save_Neg_Float_Const -> .

    TIMES_SIGN      reduce using rule 84 (Save_Neg_Float_Const -> .)
    DIVIDE_SIGN     reduce using rule 84 (Save_Neg_Float_Const -> .)
    MOD_SIGN        reduce using rule 84 (Save_Neg_Float_Const -> .)
    PLUS_SIGN       reduce using rule 84 (Save_Neg_Float_Const -> .)
    MINUS_SIGN      reduce using rule 84 (Save_Neg_Float_Const -> .)
    LESS            reduce using rule 84 (Save_Neg_Float_Const -> .)
    LESS_EQUAL      reduce using rule 84 (Save_Neg_Float_Const -> .)
    GREATER         reduce using rule 84 (Save_Neg_Float_Const -> .)
    GREATER_EQUAL   reduce using rule 84 (Save_Neg_Float_Const -> .)
    AND             reduce using rule 84 (Save_Neg_Float_Const -> .)
    OR              reduce using rule 84 (Save_Neg_Float_Const -> .)
    EQUAL           reduce using rule 84 (Save_Neg_Float_Const -> .)
    DIFF            reduce using rule 84 (Save_Neg_Float_Const -> .)
    PAR_CLOSE       reduce using rule 84 (Save_Neg_Float_Const -> .)
    SEMICOLON       reduce using rule 84 (Save_Neg_Float_Const -> .)

    Save_Neg_Float_Const           shift and go to state 99

state 71

    (41) Logical_Not -> NOT Push_Not . Relational Not_Quad
    (44) Relational -> . Expression
    (45) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (46) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (47) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (48) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (54) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (61) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (70) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (71) Factor -> . Var_Cte
    (74) Var_Cte -> . INT_CONST Save_Int_Const
    (75) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (76) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (77) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (78) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (79) Var_Cte -> . STRING_CONST Save_String_Const
    (80) Var_Cte -> . ID Get_Id_Value

    PAR_OPEN        shift and go to state 31
    INT_CONST       shift and go to state 35
    MINUS_SIGN      shift and go to state 46
    FLOAT_CONST     shift and go to state 32
    BOOL_CONST      shift and go to state 37
    STRING_CONST    shift and go to state 34
    ID              shift and go to state 45

    Factor                         shift and go to state 39
    Relational                     shift and go to state 100
    Term                           shift and go to state 38
    Var_Cte                        shift and go to state 40
    Expression                     shift and go to state 44

state 72

    (17) Declare_Var -> Type ID ASSIGN Push_Assign . Exp SEMICOLON
    (24) Exp -> . Logical_Or
    (25) Exp -> . Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad
    (26) Exp -> . Logical_Or DIFF Push_Diff Logical_Or Equity_Quad
    (30) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (35) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (40) Logical_Not -> . Relational
    (41) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (44) Relational -> . Expression
    (45) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (46) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (47) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (48) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (54) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (61) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (70) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (71) Factor -> . Var_Cte
    (74) Var_Cte -> . INT_CONST Save_Int_Const
    (75) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (76) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (77) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (78) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (79) Var_Cte -> . STRING_CONST Save_String_Const
    (80) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 47
    PAR_OPEN        shift and go to state 31
    INT_CONST       shift and go to state 35
    MINUS_SIGN      shift and go to state 46
    FLOAT_CONST     shift and go to state 32
    BOOL_CONST      shift and go to state 37
    STRING_CONST    shift and go to state 34
    ID              shift and go to state 45

    Factor                         shift and go to state 39
    Relational                     shift and go to state 33
    Logical_Not                    shift and go to state 36
    Term                           shift and go to state 38
    Var_Cte                        shift and go to state 40
    Logical_Or                     shift and go to state 41
    Logical_And                    shift and go to state 42
    Exp                            shift and go to state 101
    Expression                     shift and go to state 44

state 73

    (22) Assignment -> ID ASSIGN Push_Assign Exp . SEMICOLON

    SEMICOLON       shift and go to state 102


state 74

    (12) While_Loop -> WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE . While_Quad Statements_Block Fill_While_Quads
    (14) While_Quad -> .

    CURLYB_OPEN     reduce using rule 14 (While_Quad -> .)

    While_Quad                     shift and go to state 103

state 75

    (70) Factor -> PAR_OPEN Push_False_Bottom Exp . PAR_CLOSE Pop_False_Bottom

    PAR_CLOSE       shift and go to state 104


state 76

    (36) Multiple_Nots -> AND . Push_And Logical_Not And_Quad Multiple_Nots
    (39) Push_And -> .

    NOT             reduce using rule 39 (Push_And -> .)
    PAR_OPEN        reduce using rule 39 (Push_And -> .)
    INT_CONST       reduce using rule 39 (Push_And -> .)
    MINUS_SIGN      reduce using rule 39 (Push_And -> .)
    FLOAT_CONST     reduce using rule 39 (Push_And -> .)
    BOOL_CONST      reduce using rule 39 (Push_And -> .)
    STRING_CONST    reduce using rule 39 (Push_And -> .)
    ID              reduce using rule 39 (Push_And -> .)

    Push_And                       shift and go to state 105

state 77

    (37) Multiple_Nots -> Epsilon .

    OR              reduce using rule 37 (Multiple_Nots -> Epsilon .)
    EQUAL           reduce using rule 37 (Multiple_Nots -> Epsilon .)
    DIFF            reduce using rule 37 (Multiple_Nots -> Epsilon .)
    PAR_CLOSE       reduce using rule 37 (Multiple_Nots -> Epsilon .)
    SEMICOLON       reduce using rule 37 (Multiple_Nots -> Epsilon .)


state 78

    (35) Logical_And -> Logical_Not And_Quad Multiple_Nots .

    OR              reduce using rule 35 (Logical_And -> Logical_Not And_Quad Multiple_Nots .)
    PAR_CLOSE       reduce using rule 35 (Logical_And -> Logical_Not And_Quad Multiple_Nots .)
    SEMICOLON       reduce using rule 35 (Logical_And -> Logical_Not And_Quad Multiple_Nots .)
    EQUAL           reduce using rule 35 (Logical_And -> Logical_Not And_Quad Multiple_Nots .)
    DIFF            reduce using rule 35 (Logical_And -> Logical_Not And_Quad Multiple_Nots .)


state 79

    (54) Expression -> Term Sum_Sub_Quad Multiple_Terms .

    LESS            reduce using rule 54 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    LESS_EQUAL      reduce using rule 54 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    GREATER         reduce using rule 54 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    GREATER_EQUAL   reduce using rule 54 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    AND             reduce using rule 54 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    OR              reduce using rule 54 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    EQUAL           reduce using rule 54 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    DIFF            reduce using rule 54 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    SEMICOLON       reduce using rule 54 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)
    PAR_CLOSE       reduce using rule 54 (Expression -> Term Sum_Sub_Quad Multiple_Terms .)


state 80

    (57) Multiple_Terms -> Epsilon .

    LESS            reduce using rule 57 (Multiple_Terms -> Epsilon .)
    LESS_EQUAL      reduce using rule 57 (Multiple_Terms -> Epsilon .)
    GREATER         reduce using rule 57 (Multiple_Terms -> Epsilon .)
    GREATER_EQUAL   reduce using rule 57 (Multiple_Terms -> Epsilon .)
    AND             reduce using rule 57 (Multiple_Terms -> Epsilon .)
    OR              reduce using rule 57 (Multiple_Terms -> Epsilon .)
    EQUAL           reduce using rule 57 (Multiple_Terms -> Epsilon .)
    DIFF            reduce using rule 57 (Multiple_Terms -> Epsilon .)
    PAR_CLOSE       reduce using rule 57 (Multiple_Terms -> Epsilon .)
    SEMICOLON       reduce using rule 57 (Multiple_Terms -> Epsilon .)


state 81

    (56) Multiple_Terms -> MINUS_SIGN . Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms
    (60) Push_Minus_Sign -> .

    PAR_OPEN        reduce using rule 60 (Push_Minus_Sign -> .)
    INT_CONST       reduce using rule 60 (Push_Minus_Sign -> .)
    MINUS_SIGN      reduce using rule 60 (Push_Minus_Sign -> .)
    FLOAT_CONST     reduce using rule 60 (Push_Minus_Sign -> .)
    BOOL_CONST      reduce using rule 60 (Push_Minus_Sign -> .)
    STRING_CONST    reduce using rule 60 (Push_Minus_Sign -> .)
    ID              reduce using rule 60 (Push_Minus_Sign -> .)

    Push_Minus_Sign                shift and go to state 106

state 82

    (55) Multiple_Terms -> PLUS_SIGN . Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms
    (59) Push_Plus_Sign -> .

    PAR_OPEN        reduce using rule 59 (Push_Plus_Sign -> .)
    INT_CONST       reduce using rule 59 (Push_Plus_Sign -> .)
    MINUS_SIGN      reduce using rule 59 (Push_Plus_Sign -> .)
    FLOAT_CONST     reduce using rule 59 (Push_Plus_Sign -> .)
    BOOL_CONST      reduce using rule 59 (Push_Plus_Sign -> .)
    STRING_CONST    reduce using rule 59 (Push_Plus_Sign -> .)
    ID              reduce using rule 59 (Push_Plus_Sign -> .)

    Push_Plus_Sign                 shift and go to state 107

state 83

    (62) Multiple_Factors -> TIMES_SIGN . Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (67) Push_Times_Sign -> .

    PAR_OPEN        reduce using rule 67 (Push_Times_Sign -> .)
    INT_CONST       reduce using rule 67 (Push_Times_Sign -> .)
    MINUS_SIGN      reduce using rule 67 (Push_Times_Sign -> .)
    FLOAT_CONST     reduce using rule 67 (Push_Times_Sign -> .)
    BOOL_CONST      reduce using rule 67 (Push_Times_Sign -> .)
    STRING_CONST    reduce using rule 67 (Push_Times_Sign -> .)
    ID              reduce using rule 67 (Push_Times_Sign -> .)

    Push_Times_Sign                shift and go to state 108

state 84

    (64) Multiple_Factors -> MOD_SIGN . Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (69) Push_Mod_Sign -> .

    PAR_OPEN        reduce using rule 69 (Push_Mod_Sign -> .)
    INT_CONST       reduce using rule 69 (Push_Mod_Sign -> .)
    MINUS_SIGN      reduce using rule 69 (Push_Mod_Sign -> .)
    FLOAT_CONST     reduce using rule 69 (Push_Mod_Sign -> .)
    BOOL_CONST      reduce using rule 69 (Push_Mod_Sign -> .)
    STRING_CONST    reduce using rule 69 (Push_Mod_Sign -> .)
    ID              reduce using rule 69 (Push_Mod_Sign -> .)

    Push_Mod_Sign                  shift and go to state 109

state 85

    (65) Multiple_Factors -> Epsilon .

    PLUS_SIGN       reduce using rule 65 (Multiple_Factors -> Epsilon .)
    MINUS_SIGN      reduce using rule 65 (Multiple_Factors -> Epsilon .)
    LESS            reduce using rule 65 (Multiple_Factors -> Epsilon .)
    LESS_EQUAL      reduce using rule 65 (Multiple_Factors -> Epsilon .)
    GREATER         reduce using rule 65 (Multiple_Factors -> Epsilon .)
    GREATER_EQUAL   reduce using rule 65 (Multiple_Factors -> Epsilon .)
    AND             reduce using rule 65 (Multiple_Factors -> Epsilon .)
    OR              reduce using rule 65 (Multiple_Factors -> Epsilon .)
    EQUAL           reduce using rule 65 (Multiple_Factors -> Epsilon .)
    DIFF            reduce using rule 65 (Multiple_Factors -> Epsilon .)
    PAR_CLOSE       reduce using rule 65 (Multiple_Factors -> Epsilon .)
    SEMICOLON       reduce using rule 65 (Multiple_Factors -> Epsilon .)


state 86

    (61) Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .

    PLUS_SIGN       reduce using rule 61 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    MINUS_SIGN      reduce using rule 61 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS            reduce using rule 61 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS_EQUAL      reduce using rule 61 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER         reduce using rule 61 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER_EQUAL   reduce using rule 61 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    AND             reduce using rule 61 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    OR              reduce using rule 61 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    EQUAL           reduce using rule 61 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    DIFF            reduce using rule 61 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    PAR_CLOSE       reduce using rule 61 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)
    SEMICOLON       reduce using rule 61 (Term -> Factor Mult_Div_Mod_Quad Multiple_Factors .)


state 87

    (63) Multiple_Factors -> DIVIDE_SIGN . Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (68) Push_Divide_Sign -> .

    PAR_OPEN        reduce using rule 68 (Push_Divide_Sign -> .)
    INT_CONST       reduce using rule 68 (Push_Divide_Sign -> .)
    MINUS_SIGN      reduce using rule 68 (Push_Divide_Sign -> .)
    FLOAT_CONST     reduce using rule 68 (Push_Divide_Sign -> .)
    BOOL_CONST      reduce using rule 68 (Push_Divide_Sign -> .)
    STRING_CONST    reduce using rule 68 (Push_Divide_Sign -> .)
    ID              reduce using rule 68 (Push_Divide_Sign -> .)

    Push_Divide_Sign               shift and go to state 110

state 88

    (25) Exp -> Logical_Or EQUAL Push_Equal . Logical_Or Equity_Quad
    (30) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (35) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (40) Logical_Not -> . Relational
    (41) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (44) Relational -> . Expression
    (45) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (46) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (47) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (48) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (54) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (61) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (70) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (71) Factor -> . Var_Cte
    (74) Var_Cte -> . INT_CONST Save_Int_Const
    (75) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (76) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (77) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (78) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (79) Var_Cte -> . STRING_CONST Save_String_Const
    (80) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 47
    PAR_OPEN        shift and go to state 31
    INT_CONST       shift and go to state 35
    MINUS_SIGN      shift and go to state 46
    FLOAT_CONST     shift and go to state 32
    BOOL_CONST      shift and go to state 37
    STRING_CONST    shift and go to state 34
    ID              shift and go to state 45

    Factor                         shift and go to state 39
    Relational                     shift and go to state 33
    Logical_Not                    shift and go to state 36
    Term                           shift and go to state 38
    Var_Cte                        shift and go to state 40
    Logical_Or                     shift and go to state 111
    Logical_And                    shift and go to state 42
    Expression                     shift and go to state 44

state 89

    (26) Exp -> Logical_Or DIFF Push_Diff . Logical_Or Equity_Quad
    (30) Logical_Or -> . Logical_And Or_Quad Multiple_Ands
    (35) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (40) Logical_Not -> . Relational
    (41) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (44) Relational -> . Expression
    (45) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (46) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (47) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (48) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (54) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (61) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (70) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (71) Factor -> . Var_Cte
    (74) Var_Cte -> . INT_CONST Save_Int_Const
    (75) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (76) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (77) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (78) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (79) Var_Cte -> . STRING_CONST Save_String_Const
    (80) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 47
    PAR_OPEN        shift and go to state 31
    INT_CONST       shift and go to state 35
    MINUS_SIGN      shift and go to state 46
    FLOAT_CONST     shift and go to state 32
    BOOL_CONST      shift and go to state 37
    STRING_CONST    shift and go to state 34
    ID              shift and go to state 45

    Factor                         shift and go to state 39
    Relational                     shift and go to state 33
    Logical_Not                    shift and go to state 36
    Term                           shift and go to state 38
    Var_Cte                        shift and go to state 40
    Logical_Or                     shift and go to state 112
    Logical_And                    shift and go to state 42
    Expression                     shift and go to state 44

state 90

    (30) Logical_Or -> Logical_And Or_Quad Multiple_Ands .

    EQUAL           reduce using rule 30 (Logical_Or -> Logical_And Or_Quad Multiple_Ands .)
    DIFF            reduce using rule 30 (Logical_Or -> Logical_And Or_Quad Multiple_Ands .)
    PAR_CLOSE       reduce using rule 30 (Logical_Or -> Logical_And Or_Quad Multiple_Ands .)
    SEMICOLON       reduce using rule 30 (Logical_Or -> Logical_And Or_Quad Multiple_Ands .)


state 91

    (32) Multiple_Ands -> Epsilon .

    EQUAL           reduce using rule 32 (Multiple_Ands -> Epsilon .)
    DIFF            reduce using rule 32 (Multiple_Ands -> Epsilon .)
    PAR_CLOSE       reduce using rule 32 (Multiple_Ands -> Epsilon .)
    SEMICOLON       reduce using rule 32 (Multiple_Ands -> Epsilon .)


state 92

    (31) Multiple_Ands -> OR . Push_Or Logical_And Or_Quad Multiple_Ands
    (34) Push_Or -> .

    NOT             reduce using rule 34 (Push_Or -> .)
    PAR_OPEN        reduce using rule 34 (Push_Or -> .)
    INT_CONST       reduce using rule 34 (Push_Or -> .)
    MINUS_SIGN      reduce using rule 34 (Push_Or -> .)
    FLOAT_CONST     reduce using rule 34 (Push_Or -> .)
    BOOL_CONST      reduce using rule 34 (Push_Or -> .)
    STRING_CONST    reduce using rule 34 (Push_Or -> .)
    ID              reduce using rule 34 (Push_Or -> .)

    Push_Or                        shift and go to state 113

state 93

    (11) Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON .

    PRINT           reduce using rule 11 (Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON .)
    ID              reduce using rule 11 (Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON .)
    WHILE           reduce using rule 11 (Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON .)
    INT             reduce using rule 11 (Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON .)
    FLOAT           reduce using rule 11 (Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON .)
    BOOL            reduce using rule 11 (Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON .)
    STRING          reduce using rule 11 (Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON .)
    CURLYB_CLOSE    reduce using rule 11 (Print -> PRINT PAR_OPEN Exp PAR_CLOSE SEMICOLON .)


state 94

    (45) Relational -> Expression LESS Push_Less . Expression Relational_Quad
    (54) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (61) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (70) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (71) Factor -> . Var_Cte
    (74) Var_Cte -> . INT_CONST Save_Int_Const
    (75) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (76) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (77) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (78) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (79) Var_Cte -> . STRING_CONST Save_String_Const
    (80) Var_Cte -> . ID Get_Id_Value

    PAR_OPEN        shift and go to state 31
    INT_CONST       shift and go to state 35
    MINUS_SIGN      shift and go to state 46
    FLOAT_CONST     shift and go to state 32
    BOOL_CONST      shift and go to state 37
    STRING_CONST    shift and go to state 34
    ID              shift and go to state 45

    Term                           shift and go to state 38
    Var_Cte                        shift and go to state 40
    Factor                         shift and go to state 39
    Expression                     shift and go to state 114

state 95

    (46) Relational -> Expression LESS_EQUAL Push_Less_Equal . Expression Relational_Quad
    (54) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (61) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (70) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (71) Factor -> . Var_Cte
    (74) Var_Cte -> . INT_CONST Save_Int_Const
    (75) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (76) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (77) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (78) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (79) Var_Cte -> . STRING_CONST Save_String_Const
    (80) Var_Cte -> . ID Get_Id_Value

    PAR_OPEN        shift and go to state 31
    INT_CONST       shift and go to state 35
    MINUS_SIGN      shift and go to state 46
    FLOAT_CONST     shift and go to state 32
    BOOL_CONST      shift and go to state 37
    STRING_CONST    shift and go to state 34
    ID              shift and go to state 45

    Term                           shift and go to state 38
    Var_Cte                        shift and go to state 40
    Factor                         shift and go to state 39
    Expression                     shift and go to state 115

state 96

    (48) Relational -> Expression GREATER_EQUAL Push_Greater_Equal . Expression Relational_Quad
    (54) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (61) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (70) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (71) Factor -> . Var_Cte
    (74) Var_Cte -> . INT_CONST Save_Int_Const
    (75) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (76) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (77) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (78) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (79) Var_Cte -> . STRING_CONST Save_String_Const
    (80) Var_Cte -> . ID Get_Id_Value

    PAR_OPEN        shift and go to state 31
    INT_CONST       shift and go to state 35
    MINUS_SIGN      shift and go to state 46
    FLOAT_CONST     shift and go to state 32
    BOOL_CONST      shift and go to state 37
    STRING_CONST    shift and go to state 34
    ID              shift and go to state 45

    Term                           shift and go to state 38
    Var_Cte                        shift and go to state 40
    Factor                         shift and go to state 39
    Expression                     shift and go to state 116

state 97

    (47) Relational -> Expression GREATER Push_Greater . Expression Relational_Quad
    (54) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (61) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (70) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (71) Factor -> . Var_Cte
    (74) Var_Cte -> . INT_CONST Save_Int_Const
    (75) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (76) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (77) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (78) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (79) Var_Cte -> . STRING_CONST Save_String_Const
    (80) Var_Cte -> . ID Get_Id_Value

    PAR_OPEN        shift and go to state 31
    INT_CONST       shift and go to state 35
    MINUS_SIGN      shift and go to state 46
    FLOAT_CONST     shift and go to state 32
    BOOL_CONST      shift and go to state 37
    STRING_CONST    shift and go to state 34
    ID              shift and go to state 45

    Term                           shift and go to state 38
    Var_Cte                        shift and go to state 40
    Factor                         shift and go to state 39
    Expression                     shift and go to state 117

state 98

    (75) Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .

    TIMES_SIGN      reduce using rule 75 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    DIVIDE_SIGN     reduce using rule 75 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    MOD_SIGN        reduce using rule 75 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    PLUS_SIGN       reduce using rule 75 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    MINUS_SIGN      reduce using rule 75 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    LESS            reduce using rule 75 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    LESS_EQUAL      reduce using rule 75 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    GREATER         reduce using rule 75 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    GREATER_EQUAL   reduce using rule 75 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    AND             reduce using rule 75 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    OR              reduce using rule 75 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    EQUAL           reduce using rule 75 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    DIFF            reduce using rule 75 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    PAR_CLOSE       reduce using rule 75 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)
    SEMICOLON       reduce using rule 75 (Var_Cte -> MINUS_SIGN INT_CONST Save_Neg_Int_Const .)


state 99

    (77) Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .

    TIMES_SIGN      reduce using rule 77 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    DIVIDE_SIGN     reduce using rule 77 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    MOD_SIGN        reduce using rule 77 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    PLUS_SIGN       reduce using rule 77 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    MINUS_SIGN      reduce using rule 77 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    LESS            reduce using rule 77 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    LESS_EQUAL      reduce using rule 77 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    GREATER         reduce using rule 77 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    GREATER_EQUAL   reduce using rule 77 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    AND             reduce using rule 77 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    OR              reduce using rule 77 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    EQUAL           reduce using rule 77 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    DIFF            reduce using rule 77 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    PAR_CLOSE       reduce using rule 77 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)
    SEMICOLON       reduce using rule 77 (Var_Cte -> MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const .)


state 100

    (41) Logical_Not -> NOT Push_Not Relational . Not_Quad
    (42) Not_Quad -> .

    AND             reduce using rule 42 (Not_Quad -> .)
    OR              reduce using rule 42 (Not_Quad -> .)
    EQUAL           reduce using rule 42 (Not_Quad -> .)
    DIFF            reduce using rule 42 (Not_Quad -> .)
    PAR_CLOSE       reduce using rule 42 (Not_Quad -> .)
    SEMICOLON       reduce using rule 42 (Not_Quad -> .)

    Not_Quad                       shift and go to state 118

state 101

    (17) Declare_Var -> Type ID ASSIGN Push_Assign Exp . SEMICOLON

    SEMICOLON       shift and go to state 119


state 102

    (22) Assignment -> ID ASSIGN Push_Assign Exp SEMICOLON .

    PRINT           reduce using rule 22 (Assignment -> ID ASSIGN Push_Assign Exp SEMICOLON .)
    ID              reduce using rule 22 (Assignment -> ID ASSIGN Push_Assign Exp SEMICOLON .)
    WHILE           reduce using rule 22 (Assignment -> ID ASSIGN Push_Assign Exp SEMICOLON .)
    INT             reduce using rule 22 (Assignment -> ID ASSIGN Push_Assign Exp SEMICOLON .)
    FLOAT           reduce using rule 22 (Assignment -> ID ASSIGN Push_Assign Exp SEMICOLON .)
    BOOL            reduce using rule 22 (Assignment -> ID ASSIGN Push_Assign Exp SEMICOLON .)
    STRING          reduce using rule 22 (Assignment -> ID ASSIGN Push_Assign Exp SEMICOLON .)
    CURLYB_CLOSE    reduce using rule 22 (Assignment -> ID ASSIGN Push_Assign Exp SEMICOLON .)


state 103

    (12) While_Loop -> WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad . Statements_Block Fill_While_Quads
    (4) Statements_Block -> . CURLYB_OPEN Multiple_Statements CURLYB_CLOSE

    CURLYB_OPEN     shift and go to state 8

    Statements_Block               shift and go to state 120

state 104

    (70) Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE . Pop_False_Bottom
    (73) Pop_False_Bottom -> .

    TIMES_SIGN      reduce using rule 73 (Pop_False_Bottom -> .)
    DIVIDE_SIGN     reduce using rule 73 (Pop_False_Bottom -> .)
    MOD_SIGN        reduce using rule 73 (Pop_False_Bottom -> .)
    PLUS_SIGN       reduce using rule 73 (Pop_False_Bottom -> .)
    MINUS_SIGN      reduce using rule 73 (Pop_False_Bottom -> .)
    LESS            reduce using rule 73 (Pop_False_Bottom -> .)
    LESS_EQUAL      reduce using rule 73 (Pop_False_Bottom -> .)
    GREATER         reduce using rule 73 (Pop_False_Bottom -> .)
    GREATER_EQUAL   reduce using rule 73 (Pop_False_Bottom -> .)
    AND             reduce using rule 73 (Pop_False_Bottom -> .)
    OR              reduce using rule 73 (Pop_False_Bottom -> .)
    EQUAL           reduce using rule 73 (Pop_False_Bottom -> .)
    DIFF            reduce using rule 73 (Pop_False_Bottom -> .)
    PAR_CLOSE       reduce using rule 73 (Pop_False_Bottom -> .)
    SEMICOLON       reduce using rule 73 (Pop_False_Bottom -> .)

    Pop_False_Bottom               shift and go to state 121

state 105

    (36) Multiple_Nots -> AND Push_And . Logical_Not And_Quad Multiple_Nots
    (40) Logical_Not -> . Relational
    (41) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (44) Relational -> . Expression
    (45) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (46) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (47) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (48) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (54) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (61) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (70) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (71) Factor -> . Var_Cte
    (74) Var_Cte -> . INT_CONST Save_Int_Const
    (75) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (76) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (77) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (78) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (79) Var_Cte -> . STRING_CONST Save_String_Const
    (80) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 47
    PAR_OPEN        shift and go to state 31
    INT_CONST       shift and go to state 35
    MINUS_SIGN      shift and go to state 46
    FLOAT_CONST     shift and go to state 32
    BOOL_CONST      shift and go to state 37
    STRING_CONST    shift and go to state 34
    ID              shift and go to state 45

    Factor                         shift and go to state 39
    Relational                     shift and go to state 33
    Logical_Not                    shift and go to state 122
    Term                           shift and go to state 38
    Var_Cte                        shift and go to state 40
    Expression                     shift and go to state 44

state 106

    (56) Multiple_Terms -> MINUS_SIGN Push_Minus_Sign . Term Sum_Sub_Quad Multiple_Terms
    (61) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (70) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (71) Factor -> . Var_Cte
    (74) Var_Cte -> . INT_CONST Save_Int_Const
    (75) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (76) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (77) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (78) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (79) Var_Cte -> . STRING_CONST Save_String_Const
    (80) Var_Cte -> . ID Get_Id_Value

    PAR_OPEN        shift and go to state 31
    INT_CONST       shift and go to state 35
    MINUS_SIGN      shift and go to state 46
    FLOAT_CONST     shift and go to state 32
    BOOL_CONST      shift and go to state 37
    STRING_CONST    shift and go to state 34
    ID              shift and go to state 45

    Term                           shift and go to state 123
    Var_Cte                        shift and go to state 40
    Factor                         shift and go to state 39

state 107

    (55) Multiple_Terms -> PLUS_SIGN Push_Plus_Sign . Term Sum_Sub_Quad Multiple_Terms
    (61) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (70) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (71) Factor -> . Var_Cte
    (74) Var_Cte -> . INT_CONST Save_Int_Const
    (75) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (76) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (77) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (78) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (79) Var_Cte -> . STRING_CONST Save_String_Const
    (80) Var_Cte -> . ID Get_Id_Value

    PAR_OPEN        shift and go to state 31
    INT_CONST       shift and go to state 35
    MINUS_SIGN      shift and go to state 46
    FLOAT_CONST     shift and go to state 32
    BOOL_CONST      shift and go to state 37
    STRING_CONST    shift and go to state 34
    ID              shift and go to state 45

    Term                           shift and go to state 124
    Var_Cte                        shift and go to state 40
    Factor                         shift and go to state 39

state 108

    (62) Multiple_Factors -> TIMES_SIGN Push_Times_Sign . Factor Mult_Div_Mod_Quad Multiple_Factors
    (70) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (71) Factor -> . Var_Cte
    (74) Var_Cte -> . INT_CONST Save_Int_Const
    (75) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (76) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (77) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (78) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (79) Var_Cte -> . STRING_CONST Save_String_Const
    (80) Var_Cte -> . ID Get_Id_Value

    PAR_OPEN        shift and go to state 31
    INT_CONST       shift and go to state 35
    MINUS_SIGN      shift and go to state 46
    FLOAT_CONST     shift and go to state 32
    BOOL_CONST      shift and go to state 37
    STRING_CONST    shift and go to state 34
    ID              shift and go to state 45

    Var_Cte                        shift and go to state 40
    Factor                         shift and go to state 125

state 109

    (64) Multiple_Factors -> MOD_SIGN Push_Mod_Sign . Factor Mult_Div_Mod_Quad Multiple_Factors
    (70) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (71) Factor -> . Var_Cte
    (74) Var_Cte -> . INT_CONST Save_Int_Const
    (75) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (76) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (77) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (78) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (79) Var_Cte -> . STRING_CONST Save_String_Const
    (80) Var_Cte -> . ID Get_Id_Value

    PAR_OPEN        shift and go to state 31
    INT_CONST       shift and go to state 35
    MINUS_SIGN      shift and go to state 46
    FLOAT_CONST     shift and go to state 32
    BOOL_CONST      shift and go to state 37
    STRING_CONST    shift and go to state 34
    ID              shift and go to state 45

    Var_Cte                        shift and go to state 40
    Factor                         shift and go to state 126

state 110

    (63) Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign . Factor Mult_Div_Mod_Quad Multiple_Factors
    (70) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (71) Factor -> . Var_Cte
    (74) Var_Cte -> . INT_CONST Save_Int_Const
    (75) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (76) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (77) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (78) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (79) Var_Cte -> . STRING_CONST Save_String_Const
    (80) Var_Cte -> . ID Get_Id_Value

    PAR_OPEN        shift and go to state 31
    INT_CONST       shift and go to state 35
    MINUS_SIGN      shift and go to state 46
    FLOAT_CONST     shift and go to state 32
    BOOL_CONST      shift and go to state 37
    STRING_CONST    shift and go to state 34
    ID              shift and go to state 45

    Var_Cte                        shift and go to state 40
    Factor                         shift and go to state 127

state 111

    (25) Exp -> Logical_Or EQUAL Push_Equal Logical_Or . Equity_Quad
    (27) Equity_Quad -> .

    PAR_CLOSE       reduce using rule 27 (Equity_Quad -> .)
    SEMICOLON       reduce using rule 27 (Equity_Quad -> .)

    Equity_Quad                    shift and go to state 128

state 112

    (26) Exp -> Logical_Or DIFF Push_Diff Logical_Or . Equity_Quad
    (27) Equity_Quad -> .

    PAR_CLOSE       reduce using rule 27 (Equity_Quad -> .)
    SEMICOLON       reduce using rule 27 (Equity_Quad -> .)

    Equity_Quad                    shift and go to state 129

state 113

    (31) Multiple_Ands -> OR Push_Or . Logical_And Or_Quad Multiple_Ands
    (35) Logical_And -> . Logical_Not And_Quad Multiple_Nots
    (40) Logical_Not -> . Relational
    (41) Logical_Not -> . NOT Push_Not Relational Not_Quad
    (44) Relational -> . Expression
    (45) Relational -> . Expression LESS Push_Less Expression Relational_Quad
    (46) Relational -> . Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad
    (47) Relational -> . Expression GREATER Push_Greater Expression Relational_Quad
    (48) Relational -> . Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad
    (54) Expression -> . Term Sum_Sub_Quad Multiple_Terms
    (61) Term -> . Factor Mult_Div_Mod_Quad Multiple_Factors
    (70) Factor -> . PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom
    (71) Factor -> . Var_Cte
    (74) Var_Cte -> . INT_CONST Save_Int_Const
    (75) Var_Cte -> . MINUS_SIGN INT_CONST Save_Neg_Int_Const
    (76) Var_Cte -> . FLOAT_CONST Save_Float_Const
    (77) Var_Cte -> . MINUS_SIGN FLOAT_CONST Save_Neg_Float_Const
    (78) Var_Cte -> . BOOL_CONST Save_Bool_Const
    (79) Var_Cte -> . STRING_CONST Save_String_Const
    (80) Var_Cte -> . ID Get_Id_Value

    NOT             shift and go to state 47
    PAR_OPEN        shift and go to state 31
    INT_CONST       shift and go to state 35
    MINUS_SIGN      shift and go to state 46
    FLOAT_CONST     shift and go to state 32
    BOOL_CONST      shift and go to state 37
    STRING_CONST    shift and go to state 34
    ID              shift and go to state 45

    Factor                         shift and go to state 39
    Relational                     shift and go to state 33
    Logical_Not                    shift and go to state 36
    Term                           shift and go to state 38
    Var_Cte                        shift and go to state 40
    Logical_And                    shift and go to state 130
    Expression                     shift and go to state 44

state 114

    (45) Relational -> Expression LESS Push_Less Expression . Relational_Quad
    (49) Relational_Quad -> .

    AND             reduce using rule 49 (Relational_Quad -> .)
    OR              reduce using rule 49 (Relational_Quad -> .)
    EQUAL           reduce using rule 49 (Relational_Quad -> .)
    DIFF            reduce using rule 49 (Relational_Quad -> .)
    PAR_CLOSE       reduce using rule 49 (Relational_Quad -> .)
    SEMICOLON       reduce using rule 49 (Relational_Quad -> .)

    Relational_Quad                shift and go to state 131

state 115

    (46) Relational -> Expression LESS_EQUAL Push_Less_Equal Expression . Relational_Quad
    (49) Relational_Quad -> .

    AND             reduce using rule 49 (Relational_Quad -> .)
    OR              reduce using rule 49 (Relational_Quad -> .)
    EQUAL           reduce using rule 49 (Relational_Quad -> .)
    DIFF            reduce using rule 49 (Relational_Quad -> .)
    PAR_CLOSE       reduce using rule 49 (Relational_Quad -> .)
    SEMICOLON       reduce using rule 49 (Relational_Quad -> .)

    Relational_Quad                shift and go to state 132

state 116

    (48) Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression . Relational_Quad
    (49) Relational_Quad -> .

    AND             reduce using rule 49 (Relational_Quad -> .)
    OR              reduce using rule 49 (Relational_Quad -> .)
    EQUAL           reduce using rule 49 (Relational_Quad -> .)
    DIFF            reduce using rule 49 (Relational_Quad -> .)
    PAR_CLOSE       reduce using rule 49 (Relational_Quad -> .)
    SEMICOLON       reduce using rule 49 (Relational_Quad -> .)

    Relational_Quad                shift and go to state 133

state 117

    (47) Relational -> Expression GREATER Push_Greater Expression . Relational_Quad
    (49) Relational_Quad -> .

    AND             reduce using rule 49 (Relational_Quad -> .)
    OR              reduce using rule 49 (Relational_Quad -> .)
    EQUAL           reduce using rule 49 (Relational_Quad -> .)
    DIFF            reduce using rule 49 (Relational_Quad -> .)
    PAR_CLOSE       reduce using rule 49 (Relational_Quad -> .)
    SEMICOLON       reduce using rule 49 (Relational_Quad -> .)

    Relational_Quad                shift and go to state 134

state 118

    (41) Logical_Not -> NOT Push_Not Relational Not_Quad .

    AND             reduce using rule 41 (Logical_Not -> NOT Push_Not Relational Not_Quad .)
    OR              reduce using rule 41 (Logical_Not -> NOT Push_Not Relational Not_Quad .)
    PAR_CLOSE       reduce using rule 41 (Logical_Not -> NOT Push_Not Relational Not_Quad .)
    SEMICOLON       reduce using rule 41 (Logical_Not -> NOT Push_Not Relational Not_Quad .)
    EQUAL           reduce using rule 41 (Logical_Not -> NOT Push_Not Relational Not_Quad .)
    DIFF            reduce using rule 41 (Logical_Not -> NOT Push_Not Relational Not_Quad .)


state 119

    (17) Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON .

    PRINT           reduce using rule 17 (Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON .)
    ID              reduce using rule 17 (Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON .)
    WHILE           reduce using rule 17 (Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON .)
    INT             reduce using rule 17 (Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON .)
    FLOAT           reduce using rule 17 (Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON .)
    BOOL            reduce using rule 17 (Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON .)
    STRING          reduce using rule 17 (Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON .)
    CURLYB_CLOSE    reduce using rule 17 (Declare_Var -> Type ID ASSIGN Push_Assign Exp SEMICOLON .)


state 120

    (12) While_Loop -> WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block . Fill_While_Quads
    (15) Fill_While_Quads -> .

    PRINT           reduce using rule 15 (Fill_While_Quads -> .)
    ID              reduce using rule 15 (Fill_While_Quads -> .)
    WHILE           reduce using rule 15 (Fill_While_Quads -> .)
    INT             reduce using rule 15 (Fill_While_Quads -> .)
    FLOAT           reduce using rule 15 (Fill_While_Quads -> .)
    BOOL            reduce using rule 15 (Fill_While_Quads -> .)
    STRING          reduce using rule 15 (Fill_While_Quads -> .)
    CURLYB_CLOSE    reduce using rule 15 (Fill_While_Quads -> .)

    Fill_While_Quads               shift and go to state 135

state 121

    (70) Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .

    TIMES_SIGN      reduce using rule 70 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    DIVIDE_SIGN     reduce using rule 70 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    MOD_SIGN        reduce using rule 70 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    PLUS_SIGN       reduce using rule 70 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    MINUS_SIGN      reduce using rule 70 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    LESS            reduce using rule 70 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    LESS_EQUAL      reduce using rule 70 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    GREATER         reduce using rule 70 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    GREATER_EQUAL   reduce using rule 70 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    AND             reduce using rule 70 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    OR              reduce using rule 70 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    EQUAL           reduce using rule 70 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    DIFF            reduce using rule 70 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    PAR_CLOSE       reduce using rule 70 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)
    SEMICOLON       reduce using rule 70 (Factor -> PAR_OPEN Push_False_Bottom Exp PAR_CLOSE Pop_False_Bottom .)


state 122

    (36) Multiple_Nots -> AND Push_And Logical_Not . And_Quad Multiple_Nots
    (38) And_Quad -> .

    AND             reduce using rule 38 (And_Quad -> .)
    OR              reduce using rule 38 (And_Quad -> .)
    EQUAL           reduce using rule 38 (And_Quad -> .)
    DIFF            reduce using rule 38 (And_Quad -> .)
    PAR_CLOSE       reduce using rule 38 (And_Quad -> .)
    SEMICOLON       reduce using rule 38 (And_Quad -> .)

    And_Quad                       shift and go to state 136

state 123

    (56) Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term . Sum_Sub_Quad Multiple_Terms
    (58) Sum_Sub_Quad -> .

    PLUS_SIGN       reduce using rule 58 (Sum_Sub_Quad -> .)
    MINUS_SIGN      reduce using rule 58 (Sum_Sub_Quad -> .)
    LESS            reduce using rule 58 (Sum_Sub_Quad -> .)
    LESS_EQUAL      reduce using rule 58 (Sum_Sub_Quad -> .)
    GREATER         reduce using rule 58 (Sum_Sub_Quad -> .)
    GREATER_EQUAL   reduce using rule 58 (Sum_Sub_Quad -> .)
    AND             reduce using rule 58 (Sum_Sub_Quad -> .)
    OR              reduce using rule 58 (Sum_Sub_Quad -> .)
    EQUAL           reduce using rule 58 (Sum_Sub_Quad -> .)
    DIFF            reduce using rule 58 (Sum_Sub_Quad -> .)
    PAR_CLOSE       reduce using rule 58 (Sum_Sub_Quad -> .)
    SEMICOLON       reduce using rule 58 (Sum_Sub_Quad -> .)

    Sum_Sub_Quad                   shift and go to state 137

state 124

    (55) Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term . Sum_Sub_Quad Multiple_Terms
    (58) Sum_Sub_Quad -> .

    PLUS_SIGN       reduce using rule 58 (Sum_Sub_Quad -> .)
    MINUS_SIGN      reduce using rule 58 (Sum_Sub_Quad -> .)
    LESS            reduce using rule 58 (Sum_Sub_Quad -> .)
    LESS_EQUAL      reduce using rule 58 (Sum_Sub_Quad -> .)
    GREATER         reduce using rule 58 (Sum_Sub_Quad -> .)
    GREATER_EQUAL   reduce using rule 58 (Sum_Sub_Quad -> .)
    AND             reduce using rule 58 (Sum_Sub_Quad -> .)
    OR              reduce using rule 58 (Sum_Sub_Quad -> .)
    EQUAL           reduce using rule 58 (Sum_Sub_Quad -> .)
    DIFF            reduce using rule 58 (Sum_Sub_Quad -> .)
    PAR_CLOSE       reduce using rule 58 (Sum_Sub_Quad -> .)
    SEMICOLON       reduce using rule 58 (Sum_Sub_Quad -> .)

    Sum_Sub_Quad                   shift and go to state 138

state 125

    (62) Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor . Mult_Div_Mod_Quad Multiple_Factors
    (66) Mult_Div_Mod_Quad -> .

    TIMES_SIGN      reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    DIVIDE_SIGN     reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    MOD_SIGN        reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    PLUS_SIGN       reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    MINUS_SIGN      reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    LESS            reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    LESS_EQUAL      reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    GREATER         reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    GREATER_EQUAL   reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    AND             reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    OR              reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    EQUAL           reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    DIFF            reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    PAR_CLOSE       reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    SEMICOLON       reduce using rule 66 (Mult_Div_Mod_Quad -> .)

    Mult_Div_Mod_Quad              shift and go to state 139

state 126

    (64) Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor . Mult_Div_Mod_Quad Multiple_Factors
    (66) Mult_Div_Mod_Quad -> .

    TIMES_SIGN      reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    DIVIDE_SIGN     reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    MOD_SIGN        reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    PLUS_SIGN       reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    MINUS_SIGN      reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    LESS            reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    LESS_EQUAL      reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    GREATER         reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    GREATER_EQUAL   reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    AND             reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    OR              reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    EQUAL           reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    DIFF            reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    PAR_CLOSE       reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    SEMICOLON       reduce using rule 66 (Mult_Div_Mod_Quad -> .)

    Mult_Div_Mod_Quad              shift and go to state 140

state 127

    (63) Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor . Mult_Div_Mod_Quad Multiple_Factors
    (66) Mult_Div_Mod_Quad -> .

    TIMES_SIGN      reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    DIVIDE_SIGN     reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    MOD_SIGN        reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    PLUS_SIGN       reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    MINUS_SIGN      reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    LESS            reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    LESS_EQUAL      reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    GREATER         reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    GREATER_EQUAL   reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    AND             reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    OR              reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    EQUAL           reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    DIFF            reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    PAR_CLOSE       reduce using rule 66 (Mult_Div_Mod_Quad -> .)
    SEMICOLON       reduce using rule 66 (Mult_Div_Mod_Quad -> .)

    Mult_Div_Mod_Quad              shift and go to state 141

state 128

    (25) Exp -> Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad .

    PAR_CLOSE       reduce using rule 25 (Exp -> Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad .)
    SEMICOLON       reduce using rule 25 (Exp -> Logical_Or EQUAL Push_Equal Logical_Or Equity_Quad .)


state 129

    (26) Exp -> Logical_Or DIFF Push_Diff Logical_Or Equity_Quad .

    PAR_CLOSE       reduce using rule 26 (Exp -> Logical_Or DIFF Push_Diff Logical_Or Equity_Quad .)
    SEMICOLON       reduce using rule 26 (Exp -> Logical_Or DIFF Push_Diff Logical_Or Equity_Quad .)


state 130

    (31) Multiple_Ands -> OR Push_Or Logical_And . Or_Quad Multiple_Ands
    (33) Or_Quad -> .

    OR              reduce using rule 33 (Or_Quad -> .)
    EQUAL           reduce using rule 33 (Or_Quad -> .)
    DIFF            reduce using rule 33 (Or_Quad -> .)
    PAR_CLOSE       reduce using rule 33 (Or_Quad -> .)
    SEMICOLON       reduce using rule 33 (Or_Quad -> .)

    Or_Quad                        shift and go to state 142

state 131

    (45) Relational -> Expression LESS Push_Less Expression Relational_Quad .

    AND             reduce using rule 45 (Relational -> Expression LESS Push_Less Expression Relational_Quad .)
    OR              reduce using rule 45 (Relational -> Expression LESS Push_Less Expression Relational_Quad .)
    EQUAL           reduce using rule 45 (Relational -> Expression LESS Push_Less Expression Relational_Quad .)
    DIFF            reduce using rule 45 (Relational -> Expression LESS Push_Less Expression Relational_Quad .)
    PAR_CLOSE       reduce using rule 45 (Relational -> Expression LESS Push_Less Expression Relational_Quad .)
    SEMICOLON       reduce using rule 45 (Relational -> Expression LESS Push_Less Expression Relational_Quad .)


state 132

    (46) Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad .

    AND             reduce using rule 46 (Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad .)
    OR              reduce using rule 46 (Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad .)
    EQUAL           reduce using rule 46 (Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad .)
    DIFF            reduce using rule 46 (Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad .)
    PAR_CLOSE       reduce using rule 46 (Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad .)
    SEMICOLON       reduce using rule 46 (Relational -> Expression LESS_EQUAL Push_Less_Equal Expression Relational_Quad .)


state 133

    (48) Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad .

    AND             reduce using rule 48 (Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad .)
    OR              reduce using rule 48 (Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad .)
    EQUAL           reduce using rule 48 (Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad .)
    DIFF            reduce using rule 48 (Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad .)
    PAR_CLOSE       reduce using rule 48 (Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad .)
    SEMICOLON       reduce using rule 48 (Relational -> Expression GREATER_EQUAL Push_Greater_Equal Expression Relational_Quad .)


state 134

    (47) Relational -> Expression GREATER Push_Greater Expression Relational_Quad .

    AND             reduce using rule 47 (Relational -> Expression GREATER Push_Greater Expression Relational_Quad .)
    OR              reduce using rule 47 (Relational -> Expression GREATER Push_Greater Expression Relational_Quad .)
    EQUAL           reduce using rule 47 (Relational -> Expression GREATER Push_Greater Expression Relational_Quad .)
    DIFF            reduce using rule 47 (Relational -> Expression GREATER Push_Greater Expression Relational_Quad .)
    PAR_CLOSE       reduce using rule 47 (Relational -> Expression GREATER Push_Greater Expression Relational_Quad .)
    SEMICOLON       reduce using rule 47 (Relational -> Expression GREATER Push_Greater Expression Relational_Quad .)


state 135

    (12) While_Loop -> WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads .

    PRINT           reduce using rule 12 (While_Loop -> WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads .)
    ID              reduce using rule 12 (While_Loop -> WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads .)
    WHILE           reduce using rule 12 (While_Loop -> WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads .)
    INT             reduce using rule 12 (While_Loop -> WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads .)
    FLOAT           reduce using rule 12 (While_Loop -> WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads .)
    BOOL            reduce using rule 12 (While_Loop -> WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads .)
    STRING          reduce using rule 12 (While_Loop -> WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads .)
    CURLYB_CLOSE    reduce using rule 12 (While_Loop -> WHILE Push_While_Jump PAR_OPEN Exp PAR_CLOSE While_Quad Statements_Block Fill_While_Quads .)


state 136

    (36) Multiple_Nots -> AND Push_And Logical_Not And_Quad . Multiple_Nots
    (36) Multiple_Nots -> . AND Push_And Logical_Not And_Quad Multiple_Nots
    (37) Multiple_Nots -> . Epsilon
    (88) Epsilon -> .

    AND             shift and go to state 76
    OR              reduce using rule 88 (Epsilon -> .)
    EQUAL           reduce using rule 88 (Epsilon -> .)
    DIFF            reduce using rule 88 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 88 (Epsilon -> .)
    SEMICOLON       reduce using rule 88 (Epsilon -> .)

    Multiple_Nots                  shift and go to state 143
    Epsilon                        shift and go to state 77

state 137

    (56) Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad . Multiple_Terms
    (55) Multiple_Terms -> . PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms
    (56) Multiple_Terms -> . MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms
    (57) Multiple_Terms -> . Epsilon
    (88) Epsilon -> .

    PLUS_SIGN       shift and go to state 82
    MINUS_SIGN      shift and go to state 81
    LESS            reduce using rule 88 (Epsilon -> .)
    LESS_EQUAL      reduce using rule 88 (Epsilon -> .)
    GREATER         reduce using rule 88 (Epsilon -> .)
    GREATER_EQUAL   reduce using rule 88 (Epsilon -> .)
    AND             reduce using rule 88 (Epsilon -> .)
    OR              reduce using rule 88 (Epsilon -> .)
    EQUAL           reduce using rule 88 (Epsilon -> .)
    DIFF            reduce using rule 88 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 88 (Epsilon -> .)
    SEMICOLON       reduce using rule 88 (Epsilon -> .)

    Multiple_Terms                 shift and go to state 144
    Epsilon                        shift and go to state 80

state 138

    (55) Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad . Multiple_Terms
    (55) Multiple_Terms -> . PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms
    (56) Multiple_Terms -> . MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms
    (57) Multiple_Terms -> . Epsilon
    (88) Epsilon -> .

    PLUS_SIGN       shift and go to state 82
    MINUS_SIGN      shift and go to state 81
    LESS            reduce using rule 88 (Epsilon -> .)
    LESS_EQUAL      reduce using rule 88 (Epsilon -> .)
    GREATER         reduce using rule 88 (Epsilon -> .)
    GREATER_EQUAL   reduce using rule 88 (Epsilon -> .)
    AND             reduce using rule 88 (Epsilon -> .)
    OR              reduce using rule 88 (Epsilon -> .)
    EQUAL           reduce using rule 88 (Epsilon -> .)
    DIFF            reduce using rule 88 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 88 (Epsilon -> .)
    SEMICOLON       reduce using rule 88 (Epsilon -> .)

    Multiple_Terms                 shift and go to state 145
    Epsilon                        shift and go to state 80

state 139

    (62) Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad . Multiple_Factors
    (62) Multiple_Factors -> . TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (63) Multiple_Factors -> . DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (64) Multiple_Factors -> . MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (65) Multiple_Factors -> . Epsilon
    (88) Epsilon -> .

    TIMES_SIGN      shift and go to state 83
    DIVIDE_SIGN     shift and go to state 87
    MOD_SIGN        shift and go to state 84
    PLUS_SIGN       reduce using rule 88 (Epsilon -> .)
    MINUS_SIGN      reduce using rule 88 (Epsilon -> .)
    LESS            reduce using rule 88 (Epsilon -> .)
    LESS_EQUAL      reduce using rule 88 (Epsilon -> .)
    GREATER         reduce using rule 88 (Epsilon -> .)
    GREATER_EQUAL   reduce using rule 88 (Epsilon -> .)
    AND             reduce using rule 88 (Epsilon -> .)
    OR              reduce using rule 88 (Epsilon -> .)
    EQUAL           reduce using rule 88 (Epsilon -> .)
    DIFF            reduce using rule 88 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 88 (Epsilon -> .)
    SEMICOLON       reduce using rule 88 (Epsilon -> .)

    Epsilon                        shift and go to state 85
    Multiple_Factors               shift and go to state 146

state 140

    (64) Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad . Multiple_Factors
    (62) Multiple_Factors -> . TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (63) Multiple_Factors -> . DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (64) Multiple_Factors -> . MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (65) Multiple_Factors -> . Epsilon
    (88) Epsilon -> .

    TIMES_SIGN      shift and go to state 83
    DIVIDE_SIGN     shift and go to state 87
    MOD_SIGN        shift and go to state 84
    PLUS_SIGN       reduce using rule 88 (Epsilon -> .)
    MINUS_SIGN      reduce using rule 88 (Epsilon -> .)
    LESS            reduce using rule 88 (Epsilon -> .)
    LESS_EQUAL      reduce using rule 88 (Epsilon -> .)
    GREATER         reduce using rule 88 (Epsilon -> .)
    GREATER_EQUAL   reduce using rule 88 (Epsilon -> .)
    AND             reduce using rule 88 (Epsilon -> .)
    OR              reduce using rule 88 (Epsilon -> .)
    EQUAL           reduce using rule 88 (Epsilon -> .)
    DIFF            reduce using rule 88 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 88 (Epsilon -> .)
    SEMICOLON       reduce using rule 88 (Epsilon -> .)

    Epsilon                        shift and go to state 85
    Multiple_Factors               shift and go to state 147

state 141

    (63) Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad . Multiple_Factors
    (62) Multiple_Factors -> . TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (63) Multiple_Factors -> . DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (64) Multiple_Factors -> . MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors
    (65) Multiple_Factors -> . Epsilon
    (88) Epsilon -> .

    TIMES_SIGN      shift and go to state 83
    DIVIDE_SIGN     shift and go to state 87
    MOD_SIGN        shift and go to state 84
    PLUS_SIGN       reduce using rule 88 (Epsilon -> .)
    MINUS_SIGN      reduce using rule 88 (Epsilon -> .)
    LESS            reduce using rule 88 (Epsilon -> .)
    LESS_EQUAL      reduce using rule 88 (Epsilon -> .)
    GREATER         reduce using rule 88 (Epsilon -> .)
    GREATER_EQUAL   reduce using rule 88 (Epsilon -> .)
    AND             reduce using rule 88 (Epsilon -> .)
    OR              reduce using rule 88 (Epsilon -> .)
    EQUAL           reduce using rule 88 (Epsilon -> .)
    DIFF            reduce using rule 88 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 88 (Epsilon -> .)
    SEMICOLON       reduce using rule 88 (Epsilon -> .)

    Epsilon                        shift and go to state 85
    Multiple_Factors               shift and go to state 148

state 142

    (31) Multiple_Ands -> OR Push_Or Logical_And Or_Quad . Multiple_Ands
    (31) Multiple_Ands -> . OR Push_Or Logical_And Or_Quad Multiple_Ands
    (32) Multiple_Ands -> . Epsilon
    (88) Epsilon -> .

    OR              shift and go to state 92
    EQUAL           reduce using rule 88 (Epsilon -> .)
    DIFF            reduce using rule 88 (Epsilon -> .)
    PAR_CLOSE       reduce using rule 88 (Epsilon -> .)
    SEMICOLON       reduce using rule 88 (Epsilon -> .)

    Multiple_Ands                  shift and go to state 149
    Epsilon                        shift and go to state 91

state 143

    (36) Multiple_Nots -> AND Push_And Logical_Not And_Quad Multiple_Nots .

    OR              reduce using rule 36 (Multiple_Nots -> AND Push_And Logical_Not And_Quad Multiple_Nots .)
    EQUAL           reduce using rule 36 (Multiple_Nots -> AND Push_And Logical_Not And_Quad Multiple_Nots .)
    DIFF            reduce using rule 36 (Multiple_Nots -> AND Push_And Logical_Not And_Quad Multiple_Nots .)
    PAR_CLOSE       reduce using rule 36 (Multiple_Nots -> AND Push_And Logical_Not And_Quad Multiple_Nots .)
    SEMICOLON       reduce using rule 36 (Multiple_Nots -> AND Push_And Logical_Not And_Quad Multiple_Nots .)


state 144

    (56) Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .

    LESS            reduce using rule 56 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    LESS_EQUAL      reduce using rule 56 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    GREATER         reduce using rule 56 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    GREATER_EQUAL   reduce using rule 56 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    AND             reduce using rule 56 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    OR              reduce using rule 56 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    EQUAL           reduce using rule 56 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    DIFF            reduce using rule 56 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    PAR_CLOSE       reduce using rule 56 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    SEMICOLON       reduce using rule 56 (Multiple_Terms -> MINUS_SIGN Push_Minus_Sign Term Sum_Sub_Quad Multiple_Terms .)


state 145

    (55) Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .

    LESS            reduce using rule 55 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    LESS_EQUAL      reduce using rule 55 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    GREATER         reduce using rule 55 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    GREATER_EQUAL   reduce using rule 55 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    AND             reduce using rule 55 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    OR              reduce using rule 55 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    EQUAL           reduce using rule 55 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    DIFF            reduce using rule 55 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    PAR_CLOSE       reduce using rule 55 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)
    SEMICOLON       reduce using rule 55 (Multiple_Terms -> PLUS_SIGN Push_Plus_Sign Term Sum_Sub_Quad Multiple_Terms .)


state 146

    (62) Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .

    PLUS_SIGN       reduce using rule 62 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    MINUS_SIGN      reduce using rule 62 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS            reduce using rule 62 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS_EQUAL      reduce using rule 62 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER         reduce using rule 62 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER_EQUAL   reduce using rule 62 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    AND             reduce using rule 62 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    OR              reduce using rule 62 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    EQUAL           reduce using rule 62 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    DIFF            reduce using rule 62 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    PAR_CLOSE       reduce using rule 62 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    SEMICOLON       reduce using rule 62 (Multiple_Factors -> TIMES_SIGN Push_Times_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)


state 147

    (64) Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .

    PLUS_SIGN       reduce using rule 64 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    MINUS_SIGN      reduce using rule 64 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS            reduce using rule 64 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS_EQUAL      reduce using rule 64 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER         reduce using rule 64 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER_EQUAL   reduce using rule 64 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    AND             reduce using rule 64 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    OR              reduce using rule 64 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    EQUAL           reduce using rule 64 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    DIFF            reduce using rule 64 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    PAR_CLOSE       reduce using rule 64 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    SEMICOLON       reduce using rule 64 (Multiple_Factors -> MOD_SIGN Push_Mod_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)


state 148

    (63) Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .

    PLUS_SIGN       reduce using rule 63 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    MINUS_SIGN      reduce using rule 63 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS            reduce using rule 63 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    LESS_EQUAL      reduce using rule 63 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER         reduce using rule 63 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    GREATER_EQUAL   reduce using rule 63 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    AND             reduce using rule 63 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    OR              reduce using rule 63 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    EQUAL           reduce using rule 63 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    DIFF            reduce using rule 63 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    PAR_CLOSE       reduce using rule 63 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)
    SEMICOLON       reduce using rule 63 (Multiple_Factors -> DIVIDE_SIGN Push_Divide_Sign Factor Mult_Div_Mod_Quad Multiple_Factors .)


state 149

    (31) Multiple_Ands -> OR Push_Or Logical_And Or_Quad Multiple_Ands .

    EQUAL           reduce using rule 31 (Multiple_Ands -> OR Push_Or Logical_And Or_Quad Multiple_Ands .)
    DIFF            reduce using rule 31 (Multiple_Ands -> OR Push_Or Logical_And Or_Quad Multiple_Ands .)
    PAR_CLOSE       reduce using rule 31 (Multiple_Ands -> OR Push_Or Logical_And Or_Quad Multiple_Ands .)
    SEMICOLON       reduce using rule 31 (Multiple_Ands -> OR Push_Or Logical_And Or_Quad Multiple_Ands .)

